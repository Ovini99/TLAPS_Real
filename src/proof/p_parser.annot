"p_parser.ml" 14 156 160 "p_parser.ml" 14 156 171
type(
  'a Property.wrapped ->
  'b Property.wrapped -> 'a Property.wrapped Property.wrapped
)
ident(
  def enlarge_loc "p_parser.ml" 17 245 245 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 14 156 172 "p_parser.ml" 14 156 173
type(
  'a Property.wrapped
)
ident(
  def x "p_parser.ml" 14 156 174 "p_parser.ml" 15 178 243
)
"p_parser.ml" 14 156 174 "p_parser.ml" 14 156 175
type(
  'b Property.wrapped
)
ident(
  def y "p_parser.ml" 15 178 180 "p_parser.ml" 15 178 243
)
"p_parser.ml" 15 178 180 "p_parser.ml" 15 178 191
type(
  'a Property.wrapped -> Loc.locus -> 'a Property.wrapped Property.wrapped
)
ident(
  int_ref Util.locate "util.mli" 14 178 178 "util.mli" 14 178 225
)
"p_parser.ml" 15 178 192 "p_parser.ml" 15 178 193
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 14 156 172 "p_parser.ml" 14 156 173
)
"p_parser.ml" 15 178 195 "p_parser.ml" 15 178 204
type(
  Loc.locus -> Loc.locus -> Loc.locus
)
ident(
  int_ref Loc.merge "loc.mli" 60 1622 1622 "loc.mli" 60 1622 1657
)
"p_parser.ml" 15 178 206 "p_parser.ml" 15 178 220
type(
  'a Property.wrapped -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"p_parser.ml" 15 178 221 "p_parser.ml" 15 178 222
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 14 156 172 "p_parser.ml" 14 156 173
)
"p_parser.ml" 15 178 205 "p_parser.ml" 15 178 223
type(
  Loc.locus
)
"p_parser.ml" 15 178 225 "p_parser.ml" 15 178 239
type(
  'b Property.wrapped -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"p_parser.ml" 15 178 240 "p_parser.ml" 15 178 241
type(
  'b Property.wrapped
)
ident(
  int_ref y "p_parser.ml" 14 156 174 "p_parser.ml" 14 156 175
)
"p_parser.ml" 15 178 224 "p_parser.ml" 15 178 242
type(
  Loc.locus
)
"p_parser.ml" 15 178 194 "p_parser.ml" 15 178 243
type(
  Loc.locus
)
"p_parser.ml" 15 178 180 "p_parser.ml" 15 178 243
type(
  'a Property.wrapped Property.wrapped
)
"p_parser.ml" 22 321 325 "p_parser.ml" 22 321 334
type(
  int -> preno -> P_t.stepno
)
ident(
  def set_level "p_parser.ml" 28 482 482 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 22 321 335 "p_parser.ml" 22 321 336
type(
  int
)
ident(
  def n "p_parser.ml" 22 321 339 "p_parser.ml" 26 446 480
)
"p_parser.ml" 23 348 357 "p_parser.ml" 23 348 358
type(
  string
)
ident(
  def l "p_parser.ml" 24 384 390 "p_parser.ml" 26 446 480
)
"p_parser.ml" 23 348 352 "p_parser.ml" 23 348 358
type(
  preno
)
"p_parser.ml" 23 348 366 "p_parser.ml" 23 348 367
type(
  string
)
ident(
  def l "p_parser.ml" 24 384 390 "p_parser.ml" 26 446 480
)
"p_parser.ml" 23 348 361 "p_parser.ml" 23 348 367
type(
  preno
)
"p_parser.ml" 23 348 352 "p_parser.ml" 23 348 367
type(
  preno
)
"p_parser.ml" 23 348 375 "p_parser.ml" 23 348 376
type(
  int
)
"p_parser.ml" 23 348 378 "p_parser.ml" 23 348 379
type(
  string
)
ident(
  def l "p_parser.ml" 24 384 390 "p_parser.ml" 26 446 480
)
"p_parser.ml" 23 348 370 "p_parser.ml" 23 348 380
type(
  preno
)
"p_parser.ml" 23 348 352 "p_parser.ml" 23 348 380
type(
  preno
)
"p_parser.ml" 24 384 396 "p_parser.ml" 24 384 397
type(
  string
)
ident(
  int_ref l "p_parser.ml" 23 348 357 "p_parser.ml" 23 348 358
)
"p_parser.ml" 25 403 413 "p_parser.ml" 25 403 415
type(
  string
)
type(
  string
)
"p_parser.ml" 25 403 428 "p_parser.ml" 25 403 429
type(
  int
)
ident(
  int_ref n "p_parser.ml" 22 321 335 "p_parser.ml" 22 321 336
)
"p_parser.ml" 25 403 431 "p_parser.ml" 25 403 441
type(
  unit -> int
)
ident(
  int_ref Ext.Std.unique "ext.mli" 69 2880 2882 "ext.mli" 69 2880 2906
)
"p_parser.ml" 25 403 442 "p_parser.ml" 25 403 444
type(
  unit
)
"p_parser.ml" 25 403 431 "p_parser.ml" 25 403 444
type(
  int
)
"p_parser.ml" 25 403 419 "p_parser.ml" 25 403 445
type(
  P_t.stepno
)
"p_parser.ml" 26 446 456 "p_parser.ml" 26 446 457
type(
  string
)
type(
  string
)
"p_parser.ml" 26 446 468 "p_parser.ml" 26 446 469
type(
  int
)
ident(
  int_ref n "p_parser.ml" 22 321 335 "p_parser.ml" 22 321 336
)
"p_parser.ml" 26 446 471 "p_parser.ml" 26 446 472
type(
  string
)
ident(
  int_ref l "p_parser.ml" 23 348 357 "p_parser.ml" 23 348 358
)
"p_parser.ml" 26 446 474 "p_parser.ml" 26 446 479
type(
  bool
)
"p_parser.ml" 26 446 461 "p_parser.ml" 26 446 480
type(
  P_t.stepno
)
"p_parser.ml" 24 384 390 "p_parser.ml" 26 446 480
type(
  P_t.stepno
)
"p_parser.ml" 22 321 339 "p_parser.ml" 26 446 480
type(
  preno -> P_t.stepno
)
"p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
type(
  supp -> Method.t option -> 'a Property.wrapped -> 'a Property.wrapped
)
ident(
  def annotate "p_parser.ml" 41 743 743 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 31 538 551 "p_parser.ml" 31 538 555
type(
  supp
)
ident(
  def supp "p_parser.ml" 31 538 556 "p_parser.ml" 39 735 741
)
"p_parser.ml" 31 538 556 "p_parser.ml" 31 538 560
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 31 538 561 "p_parser.ml" 39 735 741
)
"p_parser.ml" 31 538 561 "p_parser.ml" 31 538 562
type(
  'a Property.wrapped
)
ident(
  def x "p_parser.ml" 32 565 567 "p_parser.ml" 39 735 741
)
"p_parser.ml" 32 565 571 "p_parser.ml" 32 565 572
type(
  'a Property.wrapped
)
ident(
  def x "p_parser.ml" 36 650 652 "p_parser.ml" 39 735 741
)
"p_parser.ml" 32 565 581 "p_parser.ml" 32 565 585
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 31 538 551 "p_parser.ml" 31 538 555
)
"p_parser.ml" 33 591 597 "p_parser.ml" 33 591 605
type(
  supp
)
type(
  supp
)
"p_parser.ml" 33 591 609 "p_parser.ml" 33 591 615
type(
  'a Property.wrapped -> unit Property.pfuncs -> unit -> 'a Property.wrapped
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"p_parser.ml" 33 591 616 "p_parser.ml" 33 591 617
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 31 538 561 "p_parser.ml" 31 538 562
)
"p_parser.ml" 33 591 618 "p_parser.ml" 33 591 628
type(
  unit Property.pfuncs
)
ident(
  int_ref P_t.Props.supp "p_t.mli" 83 1663 1667 "p_t.mli" 83 1663 1688
)
"p_parser.ml" 33 591 629 "p_parser.ml" 33 591 631
type(
  unit
)
"p_parser.ml" 33 591 609 "p_parser.ml" 33 591 631
type(
  'a Property.wrapped
)
"p_parser.ml" 34 632 638 "p_parser.ml" 34 632 639
type(
  supp
)
type(
  supp
)
"p_parser.ml" 34 632 643 "p_parser.ml" 34 632 644
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 31 538 561 "p_parser.ml" 31 538 562
)
"p_parser.ml" 32 565 575 "p_parser.ml" 34 632 644
type(
  'a Property.wrapped
)
"p_parser.ml" 36 650 656 "p_parser.ml" 36 650 657
type(
  'a Property.wrapped
)
ident(
  def x "p_parser.ml" 39 735 740 "p_parser.ml" 39 735 741
)
"p_parser.ml" 36 650 666 "p_parser.ml" 36 650 670
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 31 538 556 "p_parser.ml" 31 538 560
)
"p_parser.ml" 37 676 687 "p_parser.ml" 37 676 691
type(
  Method.t
)
ident(
  def meth "p_parser.ml" 37 676 695 "p_parser.ml" 37 676 721
)
"p_parser.ml" 37 676 682 "p_parser.ml" 37 676 691
type(
  Method.t option
)
type(
  Method.t option
)
"p_parser.ml" 37 676 695 "p_parser.ml" 37 676 701
type(
  'a Property.wrapped ->
  Method.t list Property.pfuncs -> Method.t list -> 'a Property.wrapped
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"p_parser.ml" 37 676 702 "p_parser.ml" 37 676 703
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 32 565 571 "p_parser.ml" 32 565 572
)
"p_parser.ml" 37 676 704 "p_parser.ml" 37 676 714
type(
  Method.t list Property.pfuncs
)
ident(
  int_ref P_t.Props.meth "p_t.mli" 85 1725 1729 "p_t.mli" 85 1725 1759
)
"p_parser.ml" 37 676 716 "p_parser.ml" 37 676 720
type(
  Method.t
)
ident(
  int_ref meth "p_parser.ml" 37 676 687 "p_parser.ml" 37 676 691
)
"p_parser.ml" 37 676 715 "p_parser.ml" 37 676 721
type(
  Method.t list
)
"p_parser.ml" 37 676 695 "p_parser.ml" 37 676 721
type(
  'a Property.wrapped
)
"p_parser.ml" 38 722 728 "p_parser.ml" 38 722 729
type(
  Method.t option
)
type(
  Method.t option
)
"p_parser.ml" 38 722 733 "p_parser.ml" 38 722 734
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 32 565 571 "p_parser.ml" 32 565 572
)
"p_parser.ml" 36 650 660 "p_parser.ml" 38 722 734
type(
  'a Property.wrapped
)
"p_parser.ml" 39 735 740 "p_parser.ml" 39 735 741
type(
  'a Property.wrapped
)
ident(
  int_ref x "p_parser.ml" 36 650 656 "p_parser.ml" 36 650 657
)
"p_parser.ml" 36 650 652 "p_parser.ml" 39 735 741
type(
  'a Property.wrapped
)
"p_parser.ml" 32 565 567 "p_parser.ml" 39 735 741
type(
  'a Property.wrapped
)
"p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  def to_proof "p_parser.ml" 66 1418 1418 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 66 1418 1435 "p_parser.ml" 66 1418 1441
type(
  int Property.wrapped
)
ident(
  def currlv "p_parser.ml" 66 1418 1444 "p_parser.ml" 89 2387 2394
)
"p_parser.ml" 67 1453 1457 "p_parser.ml" 67 1453 1459
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 68 1463 1478 "p_parser.ml" 68 1463 1486
type(
  P_t.omission
)
"p_parser.ml" 68 1463 1470 "p_parser.ml" 68 1463 1486
type(
  P_t.proof_
)
"p_parser.ml" 68 1463 1487 "p_parser.ml" 68 1463 1489
type(
  P_t.proof_ -> int Property.wrapped -> P_t.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 68 1463 1490 "p_parser.ml" 68 1463 1496
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 66 1418 1435 "p_parser.ml" 66 1418 1441
)
"p_parser.ml" 68 1463 1470 "p_parser.ml" 68 1463 1496
type(
  P_t.proof
)
"p_parser.ml" 68 1463 1498 "p_parser.ml" 68 1463 1500
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 68 1463 1469 "p_parser.ml" 68 1463 1501
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 69 1502 1521 "p_parser.ml" 69 1502 1525
type(
  supp
)
ident(
  def supp "p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 69 1502 1527 "p_parser.ml" 69 1502 1530
type(
  only
)
ident(
  def onl "p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 69 1502 1532 "p_parser.ml" 69 1502 1534
type(
  P_t.usable
)
ident(
  def us "p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 69 1502 1536 "p_parser.ml" 69 1502 1540
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 69 1502 1514 "p_parser.ml" 69 1502 1541
type(
  preproof_
)
"p_parser.ml" 69 1502 1506 "p_parser.ml" 69 1502 1542
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 69 1502 1506 "p_parser.ml" 69 1502 1547
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 69 1502 1551 "p_parser.ml" 69 1502 1553
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 69 1502 1506 "p_parser.ml" 69 1502 1553
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 70 1557 1567 "p_parser.ml" 70 1557 1568
type(
  P_t.proof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 71 1599 1605 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 70 1557 1575 "p_parser.ml" 70 1557 1577
type(
  P_t.usable
)
ident(
  int_ref us "p_parser.ml" 69 1502 1532 "p_parser.ml" 69 1502 1534
)
"p_parser.ml" 70 1557 1579 "p_parser.ml" 70 1557 1582
type(
  only
)
ident(
  int_ref onl "p_parser.ml" 69 1502 1527 "p_parser.ml" 69 1502 1530
)
"p_parser.ml" 70 1557 1583 "p_parser.ml" 70 1557 1584
type(
  only -> only -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"p_parser.ml" 70 1557 1585 "p_parser.ml" 70 1557 1589
type(
  only
)
"p_parser.ml" 70 1557 1579 "p_parser.ml" 70 1557 1589
type(
  bool
)
"p_parser.ml" 70 1557 1571 "p_parser.ml" 70 1557 1590
type(
  P_t.proof_
)
"p_parser.ml" 70 1557 1591 "p_parser.ml" 70 1557 1593
type(
  P_t.proof_ -> preproof_ Property.wrapped -> P_t.proof_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 70 1557 1594 "p_parser.ml" 70 1557 1595
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 69 1502 1506 "p_parser.ml" 69 1502 1547
)
"p_parser.ml" 70 1557 1571 "p_parser.ml" 70 1557 1595
type(
  P_t.proof_ Property.wrapped
)
"p_parser.ml" 71 1599 1609 "p_parser.ml" 71 1599 1610
type(
  P_t.proof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 72 1672 1678 "p_parser.ml" 72 1672 1704
)
"p_parser.ml" 71 1599 1613 "p_parser.ml" 71 1599 1628
type(
  P_t.proof_ Property.wrapped ->
  P_t.stepno Property.pfuncs -> P_t.stepno -> P_t.proof_ Property.wrapped
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"p_parser.ml" 71 1599 1629 "p_parser.ml" 71 1599 1630
type(
  P_t.proof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 70 1557 1567 "p_parser.ml" 70 1557 1568
)
"p_parser.ml" 71 1599 1631 "p_parser.ml" 71 1599 1641
type(
  P_t.stepno Property.pfuncs
)
ident(
  int_ref P_t.Props.step "p_t.mli" 81 1606 1610 "p_t.mli" 81 1606 1633
)
"p_parser.ml" 71 1599 1652 "p_parser.ml" 71 1599 1658
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 66 1418 1435 "p_parser.ml" 66 1418 1441
)
"p_parser.ml" 71 1599 1652 "p_parser.ml" 71 1599 1663
type(
  int
)
"p_parser.ml" 71 1599 1665 "p_parser.ml" 71 1599 1666
type(
  int
)
"p_parser.ml" 71 1599 1642 "p_parser.ml" 71 1599 1668
type(
  P_t.stepno
)
"p_parser.ml" 71 1599 1613 "p_parser.ml" 71 1599 1668
type(
  P_t.proof_ Property.wrapped
)
"p_parser.ml" 72 1672 1679 "p_parser.ml" 72 1672 1687
type(
  supp -> Method.t option -> P_t.proof -> P_t.proof
)
ident(
  int_ref annotate "p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
)
"p_parser.ml" 72 1672 1688 "p_parser.ml" 72 1672 1692
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 69 1502 1521 "p_parser.ml" 69 1502 1525
)
"p_parser.ml" 72 1672 1693 "p_parser.ml" 72 1672 1697
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 69 1502 1536 "p_parser.ml" 69 1502 1540
)
"p_parser.ml" 72 1672 1698 "p_parser.ml" 72 1672 1699
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 71 1599 1609 "p_parser.ml" 71 1599 1610
)
"p_parser.ml" 72 1672 1679 "p_parser.ml" 72 1672 1699
type(
  P_t.proof
)
"p_parser.ml" 72 1672 1701 "p_parser.ml" 72 1672 1703
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 69 1502 1551 "p_parser.ml" 69 1502 1553
)
"p_parser.ml" 72 1672 1678 "p_parser.ml" 72 1672 1704
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 71 1599 1605 "p_parser.ml" 72 1672 1704
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 70 1557 1563 "p_parser.ml" 72 1672 1704
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 73 1705 1729 "p_parser.ml" 73 1705 1733
type(
  supp
)
ident(
  def supp "p_parser.ml" 74 1756 1762 "p_parser.ml" 75 1786 1818
)
"p_parser.ml" 73 1705 1735 "p_parser.ml" 73 1705 1739
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 74 1756 1762 "p_parser.ml" 75 1786 1818
)
"p_parser.ml" 73 1705 1717 "p_parser.ml" 73 1705 1740
type(
  preproof_
)
"p_parser.ml" 73 1705 1709 "p_parser.ml" 73 1705 1741
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 73 1705 1709 "p_parser.ml" 73 1705 1746
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 74 1756 1762 "p_parser.ml" 75 1786 1818
)
"p_parser.ml" 73 1705 1750 "p_parser.ml" 73 1705 1752
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 74 1756 1762 "p_parser.ml" 75 1786 1818
)
"p_parser.ml" 73 1705 1709 "p_parser.ml" 73 1705 1752
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 74 1756 1766 "p_parser.ml" 74 1756 1767
type(
  P_t.proof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 75 1786 1792 "p_parser.ml" 75 1786 1818
)
"p_parser.ml" 74 1756 1770 "p_parser.ml" 74 1756 1777
type(
  P_t.proof_
)
"p_parser.ml" 74 1756 1778 "p_parser.ml" 74 1756 1780
type(
  P_t.proof_ -> preproof_ Property.wrapped -> P_t.proof_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 74 1756 1781 "p_parser.ml" 74 1756 1782
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 73 1705 1709 "p_parser.ml" 73 1705 1746
)
"p_parser.ml" 74 1756 1770 "p_parser.ml" 74 1756 1782
type(
  P_t.proof_ Property.wrapped
)
"p_parser.ml" 75 1786 1793 "p_parser.ml" 75 1786 1801
type(
  supp -> Method.t option -> P_t.proof -> P_t.proof
)
ident(
  int_ref annotate "p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
)
"p_parser.ml" 75 1786 1802 "p_parser.ml" 75 1786 1806
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 73 1705 1729 "p_parser.ml" 73 1705 1733
)
"p_parser.ml" 75 1786 1807 "p_parser.ml" 75 1786 1811
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 73 1705 1735 "p_parser.ml" 73 1705 1739
)
"p_parser.ml" 75 1786 1812 "p_parser.ml" 75 1786 1813
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 74 1756 1766 "p_parser.ml" 74 1756 1767
)
"p_parser.ml" 75 1786 1793 "p_parser.ml" 75 1786 1813
type(
  P_t.proof
)
"p_parser.ml" 75 1786 1815 "p_parser.ml" 75 1786 1817
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 73 1705 1750 "p_parser.ml" 73 1705 1752
)
"p_parser.ml" 75 1786 1792 "p_parser.ml" 75 1786 1818
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 74 1756 1762 "p_parser.ml" 75 1786 1818
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 76 1819 1842 "p_parser.ml" 76 1819 1844
type(
  P_t.omission
)
ident(
  def om "p_parser.ml" 77 1860 1866 "p_parser.ml" 77 1860 1887
)
"p_parser.ml" 76 1819 1831 "p_parser.ml" 76 1819 1844
type(
  preproof_
)
"p_parser.ml" 76 1819 1823 "p_parser.ml" 76 1819 1845
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 76 1819 1823 "p_parser.ml" 76 1819 1850
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 77 1860 1866 "p_parser.ml" 77 1860 1887
)
"p_parser.ml" 76 1819 1854 "p_parser.ml" 76 1819 1856
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 77 1860 1866 "p_parser.ml" 77 1860 1887
)
"p_parser.ml" 76 1819 1823 "p_parser.ml" 76 1819 1856
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 77 1860 1875 "p_parser.ml" 77 1860 1877
type(
  P_t.omission
)
ident(
  int_ref om "p_parser.ml" 76 1819 1842 "p_parser.ml" 76 1819 1844
)
"p_parser.ml" 77 1860 1867 "p_parser.ml" 77 1860 1877
type(
  P_t.proof_
)
"p_parser.ml" 77 1860 1878 "p_parser.ml" 77 1860 1880
type(
  P_t.proof_ -> preproof_ Property.wrapped -> P_t.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 77 1860 1881 "p_parser.ml" 77 1860 1882
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 76 1819 1823 "p_parser.ml" 76 1819 1850
)
"p_parser.ml" 77 1860 1867 "p_parser.ml" 77 1860 1882
type(
  P_t.proof
)
"p_parser.ml" 77 1860 1884 "p_parser.ml" 77 1860 1886
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 76 1819 1854 "p_parser.ml" 76 1819 1856
)
"p_parser.ml" 77 1860 1866 "p_parser.ml" 77 1860 1887
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 78 1888 1892 "p_parser.ml" 78 1888 1894
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 78 1888 1898 "p_parser.ml" 89 2387 2394
)
"p_parser.ml" 80 1914 1927 "p_parser.ml" 80 1914 1929
type(
  P_t.step list
)
ident(
  def ss "p_parser.ml" 81 1975 1983 "p_parser.ml" 86 2304 2321
)
"p_parser.ml" 80 1914 1931 "p_parser.ml" 80 1914 1933
type(
  P_t.qed_step Property.wrapped
)
ident(
  def qp "p_parser.ml" 81 1975 1983 "p_parser.ml" 86 2304 2321
)
"p_parser.ml" 80 1914 1935 "p_parser.ml" 80 1914 1937
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 81 1975 1983 "p_parser.ml" 86 2304 2321
)
"p_parser.ml" 80 1914 1926 "p_parser.ml" 80 1914 1938
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 80 1914 1941 "p_parser.ml" 80 1914 1949
type(
  ?first:bool ->
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
ident(
  int_ref to_steps "p_parser.ml" 91 2396 2400 "p_parser.ml" 91 2396 2408
)
"p_parser.ml" 80 1914 1957 "p_parser.ml" 80 1914 1961
type(
  bool
)
type(
  bool option
)
"p_parser.ml" 80 1914 1962 "p_parser.ml" 80 1914 1968
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 66 1418 1435 "p_parser.ml" 66 1418 1441
)
"p_parser.ml" 80 1914 1969 "p_parser.ml" 80 1914 1971
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 78 1888 1892 "p_parser.ml" 78 1888 1894
)
"p_parser.ml" 80 1914 1941 "p_parser.ml" 80 1914 1971
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 81 1975 1987 "p_parser.ml" 81 1975 1991
type(
  Loc.locus
)
ident(
  def sloc "p_parser.ml" 84 2163 2171 "p_parser.ml" 86 2304 2321
)
"p_parser.ml" 81 1975 1994 "p_parser.ml" 81 1975 2008
type(
  (Loc.locus -> P_t.step -> Loc.locus) ->
  Loc.locus -> P_t.step list -> Loc.locus
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"p_parser.ml" 82 2015 2029 "p_parser.ml" 82 2015 2030
type(
  Loc.locus
)
ident(
  def l "p_parser.ml" 82 2015 2031 "p_parser.ml" 82 2015 2066
)
"p_parser.ml" 82 2015 2031 "p_parser.ml" 82 2015 2032
type(
  P_t.step
)
ident(
  def s "p_parser.ml" 82 2015 2036 "p_parser.ml" 82 2015 2066
)
"p_parser.ml" 82 2015 2036 "p_parser.ml" 82 2015 2045
type(
  Loc.locus -> Loc.locus -> Loc.locus
)
ident(
  int_ref Loc.merge "loc.mli" 60 1622 1622 "loc.mli" 60 1622 1657
)
"p_parser.ml" 82 2015 2046 "p_parser.ml" 82 2015 2047
type(
  Loc.locus
)
ident(
  int_ref l "p_parser.ml" 82 2015 2029 "p_parser.ml" 82 2015 2030
)
"p_parser.ml" 82 2015 2049 "p_parser.ml" 82 2015 2063
type(
  P_t.step -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"p_parser.ml" 82 2015 2064 "p_parser.ml" 82 2015 2065
type(
  P_t.step
)
ident(
  int_ref s "p_parser.ml" 82 2015 2031 "p_parser.ml" 82 2015 2032
)
"p_parser.ml" 82 2015 2048 "p_parser.ml" 82 2015 2066
type(
  Loc.locus
)
"p_parser.ml" 82 2015 2036 "p_parser.ml" 82 2015 2066
type(
  Loc.locus
)
"p_parser.ml" 81 1975 2009 "p_parser.ml" 83 2067 2078
type(
  Loc.locus -> P_t.step -> Loc.locus
)
"p_parser.ml" 83 2067 2084 "p_parser.ml" 83 2067 2098
type(
  P_t.qed_step -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"p_parser.ml" 83 2067 2099 "p_parser.ml" 83 2067 2101
type(
  P_t.qed_step Property.wrapped
)
ident(
  int_ref qp "p_parser.ml" 80 1914 1931 "p_parser.ml" 80 1914 1933
)
"p_parser.ml" 83 2067 2099 "p_parser.ml" 83 2067 2106
type(
  P_t.qed_step
)
"p_parser.ml" 83 2067 2084 "p_parser.ml" 83 2067 2106
type(
  Loc.locus
)
"p_parser.ml" 83 2067 2112 "p_parser.ml" 83 2067 2113
type(
  exn
)
"p_parser.ml" 83 2067 2117 "p_parser.ml" 83 2067 2131
type(
  P_t.proof -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"p_parser.ml" 83 2067 2133 "p_parser.ml" 83 2067 2146
type(
  P_t.qed_step -> P_t.proof
)
ident(
  int_ref P_t.get_qed_proof "p_t.mli" 95 1953 1953 "p_t.mli" 96 1972 2011
)
"p_parser.ml" 83 2067 2147 "p_parser.ml" 83 2067 2149
type(
  P_t.qed_step Property.wrapped
)
ident(
  int_ref qp "p_parser.ml" 80 1914 1931 "p_parser.ml" 80 1914 1933
)
"p_parser.ml" 83 2067 2147 "p_parser.ml" 83 2067 2154
type(
  P_t.qed_step
)
"p_parser.ml" 83 2067 2132 "p_parser.ml" 83 2067 2155
type(
  P_t.proof
)
"p_parser.ml" 83 2067 2117 "p_parser.ml" 83 2067 2155
type(
  Loc.locus
)
"p_parser.ml" 83 2067 2079 "p_parser.ml" 83 2067 2156
type(
  Loc.locus
)
"p_parser.ml" 83 2067 2157 "p_parser.ml" 83 2067 2159
type(
  P_t.step list
)
ident(
  int_ref ss "p_parser.ml" 80 1914 1927 "p_parser.ml" 80 1914 1929
)
"p_parser.ml" 81 1975 1994 "p_parser.ml" 83 2067 2159
type(
  Loc.locus
)
"p_parser.ml" 84 2163 2175 "p_parser.ml" 84 2163 2178
type(
  P_t.proof_ Property.wrapped
)
ident(
  def prf "p_parser.ml" 85 2223 2231 "p_parser.ml" 86 2304 2321
)
"p_parser.ml" 84 2163 2181 "p_parser.ml" 84 2163 2192
type(
  P_t.proof_ -> Loc.locus -> P_t.proof_ Property.wrapped
)
ident(
  int_ref Util.locate "util.mli" 14 178 178 "util.mli" 14 178 225
)
"p_parser.ml" 84 2163 2201 "p_parser.ml" 84 2163 2203
type(
  P_t.step list
)
ident(
  int_ref ss "p_parser.ml" 80 1914 1927 "p_parser.ml" 80 1914 1929
)
"p_parser.ml" 84 2163 2205 "p_parser.ml" 84 2163 2207
type(
  P_t.qed_step Property.wrapped
)
ident(
  int_ref qp "p_parser.ml" 80 1914 1931 "p_parser.ml" 80 1914 1933
)
"p_parser.ml" 84 2163 2205 "p_parser.ml" 84 2163 2212
type(
  P_t.qed_step
)
"p_parser.ml" 84 2163 2193 "p_parser.ml" 84 2163 2214
type(
  P_t.proof_
)
"p_parser.ml" 84 2163 2215 "p_parser.ml" 84 2163 2219
type(
  Loc.locus
)
ident(
  int_ref sloc "p_parser.ml" 81 1975 1987 "p_parser.ml" 81 1975 1991
)
"p_parser.ml" 84 2163 2181 "p_parser.ml" 84 2163 2219
type(
  P_t.proof_ Property.wrapped
)
"p_parser.ml" 85 2223 2235 "p_parser.ml" 85 2223 2238
type(
  P_t.proof_ Property.wrapped
)
ident(
  def prf "p_parser.ml" 86 2304 2312 "p_parser.ml" 86 2304 2321
)
"p_parser.ml" 85 2223 2241 "p_parser.ml" 85 2223 2256
type(
  P_t.proof_ Property.wrapped ->
  P_t.stepno Property.pfuncs -> P_t.stepno -> P_t.proof_ Property.wrapped
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"p_parser.ml" 85 2223 2257 "p_parser.ml" 85 2223 2260
type(
  P_t.proof_ Property.wrapped
)
ident(
  int_ref prf "p_parser.ml" 84 2163 2175 "p_parser.ml" 84 2163 2178
)
"p_parser.ml" 85 2223 2261 "p_parser.ml" 85 2223 2271
type(
  P_t.stepno Property.pfuncs
)
ident(
  int_ref P_t.Props.step "p_t.mli" 81 1606 1610 "p_t.mli" 81 1606 1633
)
"p_parser.ml" 85 2223 2273 "p_parser.ml" 85 2223 2285
type(
  P_t.qed_step Property.wrapped -> P_t.stepno Property.pfuncs -> P_t.stepno
)
ident(
  int_ref Property.get "property.mli" 71 2383 2383 "property.mli" 71 2383 2425
)
"p_parser.ml" 85 2223 2286 "p_parser.ml" 85 2223 2288
type(
  P_t.qed_step Property.wrapped
)
ident(
  int_ref qp "p_parser.ml" 80 1914 1931 "p_parser.ml" 80 1914 1933
)
"p_parser.ml" 85 2223 2289 "p_parser.ml" 85 2223 2299
type(
  P_t.stepno Property.pfuncs
)
ident(
  int_ref P_t.Props.step "p_t.mli" 81 1606 1610 "p_t.mli" 81 1606 1633
)
"p_parser.ml" 85 2223 2272 "p_parser.ml" 85 2223 2300
type(
  P_t.stepno
)
"p_parser.ml" 85 2223 2241 "p_parser.ml" 85 2223 2300
type(
  P_t.proof_ Property.wrapped
)
"p_parser.ml" 86 2304 2313 "p_parser.ml" 86 2304 2316
type(
  P_t.proof
)
ident(
  int_ref prf "p_parser.ml" 85 2223 2235 "p_parser.ml" 85 2223 2238
)
"p_parser.ml" 86 2304 2318 "p_parser.ml" 86 2304 2320
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 80 1914 1935 "p_parser.ml" 80 1914 1937
)
"p_parser.ml" 86 2304 2312 "p_parser.ml" 86 2304 2321
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 85 2223 2231 "p_parser.ml" 86 2304 2321
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 84 2163 2171 "p_parser.ml" 86 2304 2321
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 81 1975 1983 "p_parser.ml" 86 2304 2321
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 80 1914 1922 "p_parser.ml" 86 2304 2321
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 87 2322 2333 "p_parser.ml" 87 2322 2342
type(
  exn
)
"p_parser.ml" 88 2346 2363 "p_parser.ml" 88 2346 2371
type(
  P_t.omission
)
"p_parser.ml" 88 2346 2355 "p_parser.ml" 88 2346 2371
type(
  P_t.proof_
)
"p_parser.ml" 88 2346 2372 "p_parser.ml" 88 2346 2374
type(
  P_t.proof_ -> int Property.wrapped -> P_t.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 88 2346 2375 "p_parser.ml" 88 2346 2381
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 66 1418 1435 "p_parser.ml" 66 1418 1441
)
"p_parser.ml" 88 2346 2355 "p_parser.ml" 88 2346 2381
type(
  P_t.proof
)
"p_parser.ml" 88 2346 2383 "p_parser.ml" 88 2346 2385
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 78 1888 1892 "p_parser.ml" 78 1888 1894
)
"p_parser.ml" 88 2346 2354 "p_parser.ml" 88 2346 2386
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 78 1888 1898 "p_parser.ml" 89 2387 2394
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 66 1418 1444 "p_parser.ml" 89 2387 2394
type(
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 91 2396 2400 "p_parser.ml" 91 2396 2408
type(
  ?first:bool ->
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
ident(
  def to_steps "p_parser.ml" 66 1418 1418 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 91 2396 2411 "p_parser.ml" 91 2396 2416
type(
  bool
)
ident(
  def first "p_parser.ml" 91 2396 2426 "p_parser.ml" 162 5322 5351
)
"p_parser.ml" 91 2396 2419 "p_parser.ml" 91 2396 2424
type(
  bool
)
type(
  bool option
)
type(
  bool option
)
type(
  bool
)
ident(
  int_ref *sth* "p_parser.ml" 91 2396 2419 "p_parser.ml" 91 2396 2424
)
type(
  bool
)
type(
  bool option
)
type(
  bool option
)
ident(
  def *sth* "p_parser.ml" 91 2396 2419 "p_parser.ml" 91 2396 2424
)
"p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
type(
  int Property.wrapped
)
ident(
  def currlv "p_parser.ml" 91 2396 2433 "p_parser.ml" 162 5322 5351
)
"p_parser.ml" 91 2396 2433 "p_parser.ml" 91 2396 2435
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 91 2396 2438 "p_parser.ml" 162 5322 5351
)
"p_parser.ml" 91 2396 2444 "p_parser.ml" 91 2396 2446
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 91 2396 2433 "p_parser.ml" 91 2396 2435
)
"p_parser.ml" 92 2452 2473 "p_parser.ml" 92 2452 2476
type(
  bool
)
ident(
  def kwd "p_parser.ml" 93 2501 2507 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 92 2452 2478 "p_parser.ml" 92 2452 2480
type(
  preno
)
ident(
  def sn "p_parser.ml" 93 2501 2507 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 92 2452 2482 "p_parser.ml" 92 2452 2484
type(
  prestep
)
ident(
  def st "p_parser.ml" 93 2501 2507 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 92 2452 2464 "p_parser.ml" 92 2452 2485
type(
  preproof_
)
"p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2486
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2491
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 93 2501 2507 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 92 2452 2495 "p_parser.ml" 92 2452 2497
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 93 2501 2507 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2497
type(
  preproof_ Property.wrapped list
)
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 93 2501 2510 "p_parser.ml" 93 2501 2513
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"p_parser.ml" 93 2501 2514 "p_parser.ml" 93 2501 2519
type(
  bool
)
ident(
  int_ref first "p_parser.ml" 91 2396 2411 "p_parser.ml" 91 2396 2416
)
"p_parser.ml" 93 2501 2510 "p_parser.ml" 93 2501 2519
type(
  bool
)
"p_parser.ml" 93 2501 2520 "p_parser.ml" 93 2501 2522
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( && ) "stdlib.mli" 214 8960 8960 "stdlib.mli" 214 8960 9011
)
"p_parser.ml" 93 2501 2523 "p_parser.ml" 93 2501 2526
type(
  bool
)
ident(
  int_ref kwd "p_parser.ml" 92 2452 2473 "p_parser.ml" 92 2452 2476
)
"p_parser.ml" 93 2501 2510 "p_parser.ml" 93 2501 2526
type(
  bool
)
"p_parser.ml" 94 2538 2546 "p_parser.ml" 94 2538 2556
type(
  preproof_ Property.wrapped -> string -> unit
)
ident(
  int_ref Errors.set "errors.mli" 53 1273 1273 "errors.mli" 53 1273 1319
)
"p_parser.ml" 94 2538 2557 "p_parser.ml" 94 2538 2558
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2491
)
"p_parser.ml" 94 2538 2559 "p_parser.ml" 94 2538 2617
type(
  string
)
"p_parser.ml" 94 2538 2546 "p_parser.ml" 94 2538 2617
type(
  unit
)
"p_parser.ml" 95 2620 2628 "p_parser.ml" 95 2620 2640
type(
  ?debug:string ->
  ?at:preproof_ Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit -> (unit, Format.formatter, unit) format -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"p_parser.ml" 95 2620 2645 "p_parser.ml" 95 2620 2646
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2491
)
type(
  preproof_ Property.wrapped option
)
"p_parser.ml" 95 2620 2647 "p_parser.ml" 95 2620 2709
type(
  (unit, Format.formatter, unit) format
)
"p_parser.ml" 95 2620 2628 "p_parser.ml" 95 2620 2709
type(
  unit
)
"p_parser.ml" 96 2712 2720 "p_parser.ml" 96 2712 2728
type(
  string -> unit
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"p_parser.ml" 96 2712 2729 "p_parser.ml" 96 2712 2743
type(
  string
)
"p_parser.ml" 96 2712 2720 "p_parser.ml" 96 2712 2743
type(
  unit
)
"p_parser.ml" 95 2620 2628 "p_parser.ml" 96 2712 2743
type(
  unit
)
"p_parser.ml" 93 2501 2532 "p_parser.ml" 97 2744 2753
type(
  unit
)
"p_parser.ml" 93 2501 2507 "p_parser.ml" 97 2744 2753
type(
  unit
)
"p_parser.ml" 98 2756 2766 "p_parser.ml" 98 2756 2772
type(
  int
)
ident(
  def thislv "p_parser.ml" 134 3959 3965 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 98 2756 2781 "p_parser.ml" 98 2756 2783
type(
  preno
)
ident(
  int_ref sn "p_parser.ml" 92 2452 2478 "p_parser.ml" 92 2452 2480
)
"p_parser.ml" 98 2756 2785 "p_parser.ml" 98 2756 2788
type(
  bool
)
ident(
  int_ref kwd "p_parser.ml" 92 2452 2473 "p_parser.ml" 92 2452 2476
)
"p_parser.ml" 98 2756 2790 "p_parser.ml" 98 2756 2795
type(
  bool
)
ident(
  int_ref first "p_parser.ml" 91 2396 2411 "p_parser.ml" 91 2396 2416
)
"p_parser.ml" 98 2756 2781 "p_parser.ml" 98 2756 2795
type(
  preno * bool * bool
)
"p_parser.ml" 99 2801 2816 "p_parser.ml" 99 2801 2817
type(
  int
)
ident(
  def n "p_parser.ml" 99 2801 2831 "p_parser.ml" 99 2801 2832
)
"p_parser.ml" 99 2801 2819 "p_parser.ml" 99 2801 2820
type(
  string
)
"p_parser.ml" 99 2801 2811 "p_parser.ml" 99 2801 2821
type(
  preno
)
"p_parser.ml" 99 2801 2823 "p_parser.ml" 99 2801 2824
type(
  bool
)
"p_parser.ml" 99 2801 2826 "p_parser.ml" 99 2801 2827
type(
  bool
)
"p_parser.ml" 99 2801 2811 "p_parser.ml" 99 2801 2827
type(
  preno * bool * bool
)
type(
  preno * bool * bool
)
"p_parser.ml" 99 2801 2831 "p_parser.ml" 99 2801 2832
type(
  int
)
ident(
  int_ref n "p_parser.ml" 99 2801 2816 "p_parser.ml" 99 2801 2817
)
"p_parser.ml" 100 2833 2848 "p_parser.ml" 100 2833 2849
type(
  string
)
"p_parser.ml" 100 2833 2843 "p_parser.ml" 100 2833 2849
type(
  preno
)
"p_parser.ml" 100 2833 2851 "p_parser.ml" 100 2833 2855
type(
  bool
)
"p_parser.ml" 100 2833 2857 "p_parser.ml" 100 2833 2861
type(
  bool
)
"p_parser.ml" 100 2833 2843 "p_parser.ml" 100 2833 2861
type(
  preno * bool * bool
)
type(
  preno * bool * bool
)
"p_parser.ml" 106 3036 3048 "p_parser.ml" 106 3036 3054
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 106 3036 3048 "p_parser.ml" 106 3036 3059
type(
  int
)
"p_parser.ml" 107 3060 3075 "p_parser.ml" 107 3060 3076
type(
  string
)
"p_parser.ml" 107 3060 3070 "p_parser.ml" 107 3060 3076
type(
  preno
)
"p_parser.ml" 107 3060 3078 "p_parser.ml" 107 3060 3083
type(
  bool
)
"p_parser.ml" 107 3060 3085 "p_parser.ml" 107 3060 3089
type(
  bool
)
"p_parser.ml" 107 3060 3070 "p_parser.ml" 107 3060 3089
type(
  preno * bool * bool
)
type(
  preno * bool * bool
)
"p_parser.ml" 113 3273 3285 "p_parser.ml" 113 3273 3291
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 113 3273 3285 "p_parser.ml" 113 3273 3296
type(
  int
)
"p_parser.ml" 113 3273 3297 "p_parser.ml" 113 3273 3298
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"p_parser.ml" 113 3273 3299 "p_parser.ml" 113 3273 3300
type(
  int
)
"p_parser.ml" 113 3273 3285 "p_parser.ml" 113 3273 3300
type(
  int
)
"p_parser.ml" 114 3301 3316 "p_parser.ml" 114 3301 3317
type(
  string
)
"p_parser.ml" 114 3301 3311 "p_parser.ml" 114 3301 3317
type(
  preno
)
"p_parser.ml" 114 3301 3319 "p_parser.ml" 114 3301 3320
type(
  bool
)
"p_parser.ml" 114 3301 3322 "p_parser.ml" 114 3301 3327
type(
  bool
)
"p_parser.ml" 114 3301 3311 "p_parser.ml" 114 3301 3327
type(
  preno * bool * bool
)
type(
  preno * bool * bool
)
"p_parser.ml" 115 3331 3351 "p_parser.ml" 115 3331 3354
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"p_parser.ml" 115 3331 3355 "p_parser.ml" 115 3331 3358
type(
  bool
)
ident(
  int_ref kwd "p_parser.ml" 92 2452 2473 "p_parser.ml" 92 2452 2476
)
"p_parser.ml" 115 3331 3350 "p_parser.ml" 115 3331 3359
type(
  bool
)
"p_parser.ml" 115 3331 3343 "p_parser.ml" 115 3331 3359
type(
  unit
)
"p_parser.ml" 121 3527 3539 "p_parser.ml" 121 3527 3545
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 121 3527 3539 "p_parser.ml" 121 3527 3550
type(
  int
)
"p_parser.ml" 115 3331 3343 "p_parser.ml" 121 3527 3550
type(
  int
)
"p_parser.ml" 122 3551 3566 "p_parser.ml" 122 3551 3567
type(
  string
)
"p_parser.ml" 122 3551 3561 "p_parser.ml" 122 3551 3567
type(
  preno
)
"p_parser.ml" 122 3551 3569 "p_parser.ml" 122 3551 3570
type(
  bool
)
"p_parser.ml" 122 3551 3572 "p_parser.ml" 122 3551 3577
type(
  bool
)
"p_parser.ml" 122 3551 3561 "p_parser.ml" 122 3551 3577
type(
  preno * bool * bool
)
type(
  preno * bool * bool
)
"p_parser.ml" 123 3581 3593 "p_parser.ml" 123 3581 3603
type(
  preproof_ Property.wrapped -> string -> unit
)
ident(
  int_ref Errors.set "errors.mli" 53 1273 1273 "errors.mli" 53 1273 1319
)
"p_parser.ml" 123 3581 3604 "p_parser.ml" 123 3581 3605
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2491
)
"p_parser.ml" 123 3581 3606 "p_parser.ml" 123 3581 3641
type(
  string
)
"p_parser.ml" 123 3581 3593 "p_parser.ml" 123 3581 3641
type(
  unit
)
"p_parser.ml" 124 3644 3658 "p_parser.ml" 124 3644 3670
type(
  ?debug:string ->
  ?at:preproof_ Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit -> (unit, Format.formatter, unit) format -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"p_parser.ml" 124 3644 3675 "p_parser.ml" 124 3644 3676
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2491
)
type(
  preproof_ Property.wrapped option
)
"p_parser.ml" 124 3644 3677 "p_parser.ml" 124 3644 3716
type(
  (unit, Format.formatter, unit) format
)
"p_parser.ml" 124 3644 3658 "p_parser.ml" 124 3644 3716
type(
  unit
)
"p_parser.ml" 125 3719 3731 "p_parser.ml" 125 3719 3739
type(
  string -> int
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"p_parser.ml" 125 3719 3740 "p_parser.ml" 125 3719 3754
type(
  string
)
"p_parser.ml" 125 3719 3731 "p_parser.ml" 125 3719 3754
type(
  int
)
"p_parser.ml" 124 3644 3658 "p_parser.ml" 125 3719 3754
type(
  int
)
"p_parser.ml" 123 3581 3593 "p_parser.ml" 125 3719 3754
type(
  int
)
"p_parser.ml" 126 3755 3770 "p_parser.ml" 126 3755 3771
type(
  string
)
"p_parser.ml" 126 3755 3765 "p_parser.ml" 126 3755 3771
type(
  preno
)
"p_parser.ml" 126 3755 3773 "p_parser.ml" 126 3755 3774
type(
  bool
)
"p_parser.ml" 126 3755 3776 "p_parser.ml" 126 3755 3777
type(
  bool
)
"p_parser.ml" 126 3755 3765 "p_parser.ml" 126 3755 3777
type(
  preno * bool * bool
)
type(
  preno * bool * bool
)
"p_parser.ml" 132 3926 3938 "p_parser.ml" 132 3926 3944
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 132 3926 3938 "p_parser.ml" 132 3926 3949
type(
  int
)
"p_parser.ml" 98 2756 2775 "p_parser.ml" 132 3926 3949
type(
  int
)
"p_parser.ml" 134 3959 3968 "p_parser.ml" 134 3959 3974
type(
  int
)
ident(
  int_ref thislv "p_parser.ml" 98 2756 2766 "p_parser.ml" 98 2756 2772
)
"p_parser.ml" 134 3959 3975 "p_parser.ml" 134 3959 3976
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( < ) "stdlib.mli" 135 5721 5721 "stdlib.mli" 135 5721 5768
)
"p_parser.ml" 134 3959 3977 "p_parser.ml" 134 3959 3983
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 134 3959 3977 "p_parser.ml" 134 3959 3988
type(
  int
)
"p_parser.ml" 134 3959 3968 "p_parser.ml" 134 3959 3988
type(
  bool
)
"p_parser.ml" 134 3959 3994 "p_parser.ml" 134 3959 3999
type(
  exn -> unit
)
ident(
  int_ref Stdlib.raise "stdlib.mli" 30 1602 1602 "stdlib.mli" 30 1602 1639
)
"p_parser.ml" 134 3959 4000 "p_parser.ml" 134 3959 4009
type(
  exn
)
"p_parser.ml" 134 3959 3994 "p_parser.ml" 134 3959 4009
type(
  unit
)
"p_parser.ml" 134 3959 3965 "p_parser.ml" 134 3959 4009
type(
  unit
)
"p_parser.ml" 135 4012 4021 "p_parser.ml" 135 4012 4024
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"p_parser.ml" 135 4012 4025 "p_parser.ml" 135 4012 4030
type(
  bool
)
ident(
  int_ref first "p_parser.ml" 91 2396 2411 "p_parser.ml" 91 2396 2416
)
"p_parser.ml" 135 4012 4021 "p_parser.ml" 135 4012 4030
type(
  bool
)
"p_parser.ml" 135 4012 4031 "p_parser.ml" 135 4012 4033
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( && ) "stdlib.mli" 214 8960 8960 "stdlib.mli" 214 8960 9011
)
"p_parser.ml" 135 4012 4034 "p_parser.ml" 135 4012 4040
type(
  int
)
ident(
  int_ref thislv "p_parser.ml" 98 2756 2766 "p_parser.ml" 98 2756 2772
)
"p_parser.ml" 135 4012 4041 "p_parser.ml" 135 4012 4042
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( > ) "stdlib.mli" 140 5875 5875 "stdlib.mli" 140 5875 5925
)
"p_parser.ml" 135 4012 4043 "p_parser.ml" 135 4012 4049
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 135 4012 4043 "p_parser.ml" 135 4012 4054
type(
  int
)
"p_parser.ml" 135 4012 4034 "p_parser.ml" 135 4012 4054
type(
  bool
)
"p_parser.ml" 135 4012 4021 "p_parser.ml" 135 4012 4054
type(
  bool
)
"p_parser.ml" 135 4012 4060 "p_parser.ml" 135 4012 4065
type(
  exn -> unit
)
ident(
  int_ref Stdlib.raise "stdlib.mli" 30 1602 1602 "stdlib.mli" 30 1602 1639
)
"p_parser.ml" 135 4012 4066 "p_parser.ml" 135 4012 4075
type(
  exn
)
"p_parser.ml" 135 4012 4060 "p_parser.ml" 135 4012 4075
type(
  unit
)
"p_parser.ml" 135 4012 4018 "p_parser.ml" 135 4012 4075
type(
  unit
)
"p_parser.ml" 136 4078 4088 "p_parser.ml" 136 4078 4090
type(
  P_t.stepno
)
ident(
  def sn "p_parser.ml" 136 4078 4116 "p_parser.ml" 146 4611 4620
)
"p_parser.ml" 136 4078 4093 "p_parser.ml" 136 4078 4102
type(
  int -> preno -> P_t.stepno
)
ident(
  int_ref set_level "p_parser.ml" 22 321 325 "p_parser.ml" 22 321 334
)
"p_parser.ml" 136 4078 4103 "p_parser.ml" 136 4078 4109
type(
  int
)
ident(
  int_ref thislv "p_parser.ml" 98 2756 2766 "p_parser.ml" 98 2756 2772
)
"p_parser.ml" 136 4078 4110 "p_parser.ml" 136 4078 4112
type(
  preno
)
ident(
  int_ref sn "p_parser.ml" 92 2452 2478 "p_parser.ml" 92 2452 2480
)
"p_parser.ml" 136 4078 4093 "p_parser.ml" 136 4078 4112
type(
  P_t.stepno
)
"p_parser.ml" 137 4122 4136 "p_parser.ml" 137 4122 4143
type(
  int ->
  prestep Property.wrapped ->
  preproof_ Property.wrapped list ->
  step_or_qed * preproof_ Property.wrapped list
)
ident(
  int_ref to_step "p_parser.ml" 164 5353 5357 "p_parser.ml" 164 5353 5364
)
"p_parser.ml" 137 4122 4144 "p_parser.ml" 137 4122 4150
type(
  int
)
ident(
  int_ref thislv "p_parser.ml" 98 2756 2766 "p_parser.ml" 98 2756 2772
)
"p_parser.ml" 137 4122 4152 "p_parser.ml" 137 4122 4154
type(
  prestep
)
ident(
  int_ref st "p_parser.ml" 92 2452 2482 "p_parser.ml" 92 2452 2484
)
"p_parser.ml" 137 4122 4155 "p_parser.ml" 137 4122 4157
type(
  prestep -> preproof_ Property.wrapped -> prestep Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 137 4122 4158 "p_parser.ml" 137 4122 4159
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 92 2452 2456 "p_parser.ml" 92 2452 2491
)
"p_parser.ml" 137 4122 4151 "p_parser.ml" 137 4122 4160
type(
  prestep Property.wrapped
)
"p_parser.ml" 137 4122 4161 "p_parser.ml" 137 4122 4163
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 92 2452 2495 "p_parser.ml" 92 2452 2497
)
"p_parser.ml" 137 4122 4136 "p_parser.ml" 137 4122 4163
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 138 4169 4187 "p_parser.ml" 138 4169 4188
type(
  P_t.step
)
ident(
  def s "p_parser.ml" 139 4198 4212 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 138 4169 4182 "p_parser.ml" 138 4169 4188
type(
  step_or_qed
)
"p_parser.ml" 138 4169 4190 "p_parser.ml" 138 4169 4193
type(
  preproof_ Property.wrapped list
)
ident(
  def nps "p_parser.ml" 139 4198 4212 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 138 4169 4181 "p_parser.ml" 138 4169 4194
type(
  step_or_qed * preproof_ Property.wrapped list
)
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 139 4198 4216 "p_parser.ml" 139 4198 4217
type(
  P_t.step_ Property.wrapped
)
ident(
  def s "p_parser.ml" 140 4255 4269 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 139 4198 4220 "p_parser.ml" 139 4198 4235
type(
  P_t.step ->
  P_t.stepno Property.pfuncs -> P_t.stepno -> P_t.step_ Property.wrapped
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"p_parser.ml" 139 4198 4236 "p_parser.ml" 139 4198 4237
type(
  P_t.step
)
ident(
  int_ref s "p_parser.ml" 138 4169 4187 "p_parser.ml" 138 4169 4188
)
"p_parser.ml" 139 4198 4238 "p_parser.ml" 139 4198 4248
type(
  P_t.stepno Property.pfuncs
)
ident(
  int_ref P_t.Props.step "p_t.mli" 81 1606 1610 "p_t.mli" 81 1606 1633
)
"p_parser.ml" 139 4198 4249 "p_parser.ml" 139 4198 4251
type(
  P_t.stepno
)
ident(
  int_ref sn "p_parser.ml" 136 4078 4088 "p_parser.ml" 136 4078 4090
)
"p_parser.ml" 139 4198 4220 "p_parser.ml" 139 4198 4251
type(
  P_t.step_ Property.wrapped
)
"p_parser.ml" 140 4255 4273 "p_parser.ml" 140 4255 4279
type(
  int Property.wrapped
)
ident(
  def thislv "p_parser.ml" 141 4338 4352 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 140 4255 4282 "p_parser.ml" 140 4255 4293
type(
  int -> Loc.locus -> int Property.wrapped
)
ident(
  int_ref Util.locate "util.mli" 14 178 178 "util.mli" 14 178 225
)
"p_parser.ml" 140 4255 4294 "p_parser.ml" 140 4255 4300
type(
  int
)
ident(
  int_ref thislv "p_parser.ml" 98 2756 2766 "p_parser.ml" 98 2756 2772
)
"p_parser.ml" 140 4255 4302 "p_parser.ml" 140 4255 4314
type(
  Loc.locus -> Loc.locus
)
ident(
  int_ref Loc.right_of "loc.mli" 50 1347 1347 "loc.mli" 50 1347 1376
)
"p_parser.ml" 140 4255 4316 "p_parser.ml" 140 4255 4330
type(
  P_t.step_ Property.wrapped -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"p_parser.ml" 140 4255 4331 "p_parser.ml" 140 4255 4332
type(
  P_t.step_ Property.wrapped
)
ident(
  int_ref s "p_parser.ml" 139 4198 4216 "p_parser.ml" 139 4198 4217
)
"p_parser.ml" 140 4255 4315 "p_parser.ml" 140 4255 4333
type(
  Loc.locus
)
"p_parser.ml" 140 4255 4301 "p_parser.ml" 140 4255 4334
type(
  Loc.locus
)
"p_parser.ml" 140 4255 4282 "p_parser.ml" 140 4255 4334
type(
  int Property.wrapped
)
"p_parser.ml" 141 4338 4357 "p_parser.ml" 141 4338 4359
type(
  P_t.step list
)
ident(
  def ss "p_parser.ml" 142 4394 4408 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 141 4338 4361 "p_parser.ml" 141 4338 4363
type(
  P_t.qed_step Property.wrapped
)
ident(
  def qp "p_parser.ml" 142 4394 4408 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 141 4338 4365 "p_parser.ml" 141 4338 4367
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 142 4394 4408 "p_parser.ml" 142 4394 4425
)
"p_parser.ml" 141 4338 4356 "p_parser.ml" 141 4338 4368
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 141 4338 4371 "p_parser.ml" 141 4338 4379
type(
  ?first:bool ->
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
ident(
  int_ref to_steps "p_parser.ml" 91 2396 2400 "p_parser.ml" 91 2396 2408
)
"p_parser.ml" 141 4338 4380 "p_parser.ml" 141 4338 4386
type(
  int Property.wrapped
)
ident(
  int_ref thislv "p_parser.ml" 140 4255 4273 "p_parser.ml" 140 4255 4279
)
"p_parser.ml" 141 4338 4387 "p_parser.ml" 141 4338 4390
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref nps "p_parser.ml" 138 4169 4190 "p_parser.ml" 138 4169 4193
)
"p_parser.ml" 141 4338 4371 "p_parser.ml" 141 4338 4390
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 142 4394 4409 "p_parser.ml" 142 4394 4410
type(
  P_t.step
)
ident(
  int_ref s "p_parser.ml" 139 4198 4216 "p_parser.ml" 139 4198 4217
)
"p_parser.ml" 142 4394 4414 "p_parser.ml" 142 4394 4416
type(
  P_t.step list
)
ident(
  int_ref ss "p_parser.ml" 141 4338 4357 "p_parser.ml" 141 4338 4359
)
"p_parser.ml" 142 4394 4409 "p_parser.ml" 142 4394 4416
type(
  P_t.step list
)
"p_parser.ml" 142 4394 4418 "p_parser.ml" 142 4394 4420
type(
  P_t.qed_step Property.wrapped
)
ident(
  int_ref qp "p_parser.ml" 141 4338 4361 "p_parser.ml" 141 4338 4363
)
"p_parser.ml" 142 4394 4422 "p_parser.ml" 142 4394 4424
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 141 4338 4365 "p_parser.ml" 141 4338 4367
)
"p_parser.ml" 142 4394 4408 "p_parser.ml" 142 4394 4425
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 141 4338 4352 "p_parser.ml" 142 4394 4425
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 140 4255 4269 "p_parser.ml" 142 4394 4425
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 139 4198 4212 "p_parser.ml" 142 4394 4425
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 143 4426 4443 "p_parser.ml" 143 4426 4445
type(
  P_t.proof
)
ident(
  def qp "p_parser.ml" 144 4454 4468 "p_parser.ml" 145 4584 4610
)
"p_parser.ml" 143 4426 4439 "p_parser.ml" 143 4426 4445
type(
  step_or_qed
)
"p_parser.ml" 143 4426 4447 "p_parser.ml" 143 4426 4449
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 144 4454 4468 "p_parser.ml" 145 4584 4610
)
"p_parser.ml" 143 4426 4438 "p_parser.ml" 143 4426 4450
type(
  step_or_qed * preproof_ Property.wrapped list
)
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 144 4454 4472 "p_parser.ml" 144 4454 4474
type(
  P_t.qed_step_ Property.wrapped Property.wrapped
)
ident(
  def qp "p_parser.ml" 145 4584 4598 "p_parser.ml" 145 4584 4610
)
"p_parser.ml" 144 4454 4498 "p_parser.ml" 144 4454 4500
type(
  P_t.proof
)
ident(
  int_ref qp "p_parser.ml" 143 4426 4443 "p_parser.ml" 143 4426 4445
)
"p_parser.ml" 144 4454 4494 "p_parser.ml" 144 4454 4500
type(
  P_t.qed_step_
)
"p_parser.ml" 144 4454 4511 "p_parser.ml" 144 4454 4521
type(
  P_t.stepno Property.pfuncs
)
ident(
  int_ref P_t.Props.step "p_t.mli" 81 1606 1610 "p_t.mli" 81 1606 1633
)
"p_parser.ml" 144 4454 4511 "p_parser.ml" 144 4454 4534
type(
  P_t.stepno -> Property.prop
)
"p_parser.ml" 144 4454 4535 "p_parser.ml" 144 4454 4537
type(
  P_t.stepno
)
ident(
  int_ref sn "p_parser.ml" 136 4078 4088 "p_parser.ml" 136 4078 4090
)
"p_parser.ml" 144 4454 4511 "p_parser.ml" 144 4454 4537
type(
  Property.prop
)
"p_parser.ml" 144 4454 4510 "p_parser.ml" 144 4454 4538
type(
  Property.props
)
"p_parser.ml" 144 4454 4486 "p_parser.ml" 144 4454 4539
type(
  P_t.qed_step_ Property.wrapped
)
"p_parser.ml" 144 4454 4551 "p_parser.ml" 144 4454 4561
type(
  P_t.stepno Property.pfuncs
)
ident(
  int_ref P_t.Props.step "p_t.mli" 81 1606 1610 "p_t.mli" 81 1606 1633
)
"p_parser.ml" 144 4454 4551 "p_parser.ml" 144 4454 4574
type(
  P_t.stepno -> Property.prop
)
"p_parser.ml" 144 4454 4575 "p_parser.ml" 144 4454 4577
type(
  P_t.stepno
)
ident(
  int_ref sn "p_parser.ml" 136 4078 4088 "p_parser.ml" 136 4078 4090
)
"p_parser.ml" 144 4454 4551 "p_parser.ml" 144 4454 4577
type(
  Property.prop
)
"p_parser.ml" 144 4454 4550 "p_parser.ml" 144 4454 4578
type(
  Property.props
)
"p_parser.ml" 144 4454 4477 "p_parser.ml" 144 4454 4580
type(
  P_t.qed_step_ Property.wrapped Property.wrapped
)
"p_parser.ml" 145 4584 4599 "p_parser.ml" 145 4584 4601
type(
  P_t.step list
)
"p_parser.ml" 145 4584 4603 "p_parser.ml" 145 4584 4605
type(
  P_t.qed_step Property.wrapped
)
ident(
  int_ref qp "p_parser.ml" 144 4454 4472 "p_parser.ml" 144 4454 4474
)
"p_parser.ml" 145 4584 4607 "p_parser.ml" 145 4584 4609
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 143 4426 4447 "p_parser.ml" 143 4426 4449
)
"p_parser.ml" 145 4584 4598 "p_parser.ml" 145 4584 4610
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 144 4454 4468 "p_parser.ml" 145 4584 4610
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 136 4078 4116 "p_parser.ml" 146 4611 4620
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 136 4078 4084 "p_parser.ml" 146 4611 4620
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 135 4012 4018 "p_parser.ml" 146 4611 4620
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 134 3959 3965 "p_parser.ml" 146 4611 4620
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 98 2756 2762 "p_parser.ml" 146 4611 4620
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 93 2501 2507 "p_parser.ml" 146 4611 4620
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 147 4621 4625 "p_parser.ml" 147 4621 4626
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 148 4635 4641 "p_parser.ml" 157 5050 5079
)
"p_parser.ml" 147 4621 4630 "p_parser.ml" 147 4621 4631
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 147 4621 4625 "p_parser.ml" 147 4621 4631
type(
  preproof_ Property.wrapped list
)
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 148 4635 4645 "p_parser.ml" 148 4635 4650
type(
  string
)
ident(
  def found "p_parser.ml" 154 4860 4866 "p_parser.ml" 157 5050 5079
)
"p_parser.ml" 148 4635 4659 "p_parser.ml" 148 4635 4660
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 147 4621 4625 "p_parser.ml" 147 4621 4626
)
"p_parser.ml" 148 4635 4659 "p_parser.ml" 148 4635 4665
type(
  preproof_
)
"p_parser.ml" 149 4671 4695 "p_parser.ml" 149 4671 4696
type(
  Method.t option
)
type(
  supp
)
"p_parser.ml" 149 4671 4684 "p_parser.ml" 149 4671 4696
type(
  preproof_
)
type(
  preproof_
)
"p_parser.ml" 149 4671 4700 "p_parser.ml" 149 4671 4711
type(
  string
)
"p_parser.ml" 150 4712 4736 "p_parser.ml" 150 4712 4737
type(
  P_t.omission
)
"p_parser.ml" 150 4712 4725 "p_parser.ml" 150 4712 4737
type(
  preproof_
)
type(
  preproof_
)
"p_parser.ml" 150 4712 4741 "p_parser.ml" 150 4712 4752
type(
  string
)
"p_parser.ml" 151 4753 4772 "p_parser.ml" 151 4753 4773
type(
  Method.t option
)
type(
  P_t.usable
)
type(
  only
)
type(
  supp
)
"p_parser.ml" 151 4753 4766 "p_parser.ml" 151 4753 4773
type(
  preproof_
)
type(
  preproof_
)
"p_parser.ml" 151 4753 4777 "p_parser.ml" 151 4753 4782
type(
  string
)
"p_parser.ml" 152 4783 4796 "p_parser.ml" 152 4783 4797
type(
  preproof_
)
type(
  preproof_
)
"p_parser.ml" 152 4783 4801 "p_parser.ml" 152 4783 4811
type(
  ?at:preproof_ Property.wrapped -> string -> string
)
ident(
  int_ref Errors.bug "errors.mli" 41 941 941 "errors.mli" 41 941 982
)
"p_parser.ml" 152 4783 4816 "p_parser.ml" 152 4783 4817
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 147 4621 4625 "p_parser.ml" 147 4621 4626
)
type(
  preproof_ Property.wrapped option
)
"p_parser.ml" 152 4783 4818 "p_parser.ml" 152 4783 4850
type(
  string
)
"p_parser.ml" 152 4783 4801 "p_parser.ml" 152 4783 4850
type(
  string
)
"p_parser.ml" 148 4635 4653 "p_parser.ml" 152 4783 4850
type(
  string
)
"p_parser.ml" 154 4860 4866 "p_parser.ml" 154 4860 4876
type(
  preproof_ Property.wrapped -> string -> unit
)
ident(
  int_ref Errors.set "errors.mli" 53 1273 1273 "errors.mli" 53 1273 1319
)
"p_parser.ml" 154 4860 4877 "p_parser.ml" 154 4860 4878
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 147 4621 4625 "p_parser.ml" 147 4621 4626
)
"p_parser.ml" 154 4860 4880 "p_parser.ml" 154 4860 4894
type(
  (string -> string, unit, string) format -> string -> string
)
ident(
  int_ref Stdlib.Printf.sprintf "printf.mli" 135 7108 7108 "printf.mli" 135 7108 7153
)
"p_parser.ml" 154 4860 4895 "p_parser.ml" 154 4860 4946
type(
  (string -> string, unit, string) format
)
"p_parser.ml" 154 4860 4947 "p_parser.ml" 154 4860 4952
type(
  string
)
ident(
  int_ref found "p_parser.ml" 148 4635 4645 "p_parser.ml" 148 4635 4650
)
"p_parser.ml" 154 4860 4879 "p_parser.ml" 154 4860 4953
type(
  string
)
"p_parser.ml" 154 4860 4866 "p_parser.ml" 154 4860 4953
type(
  unit
)
"p_parser.ml" 155 4955 4961 "p_parser.ml" 155 4955 4973
type(
  ?debug:string ->
  ?at:preproof_ Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit ->
  (string -> unit, Format.formatter, unit) format -> string -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"p_parser.ml" 155 4955 4978 "p_parser.ml" 155 4955 4979
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 147 4621 4625 "p_parser.ml" 147 4621 4626
)
type(
  preproof_ Property.wrapped option
)
"p_parser.ml" 156 4980 4991 "p_parser.ml" 156 4980 5042
type(
  (string -> unit, Format.formatter, unit) format
)
"p_parser.ml" 156 4980 5043 "p_parser.ml" 156 4980 5048
type(
  string
)
ident(
  int_ref found "p_parser.ml" 148 4635 4645 "p_parser.ml" 148 4635 4650
)
"p_parser.ml" 155 4955 4961 "p_parser.ml" 156 4980 5048
type(
  unit
)
"p_parser.ml" 157 5050 5056 "p_parser.ml" 157 5050 5064
type(
  string ->
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"p_parser.ml" 157 5050 5065 "p_parser.ml" 157 5050 5079
type(
  string
)
"p_parser.ml" 157 5050 5056 "p_parser.ml" 157 5050 5079
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 155 4955 4961 "p_parser.ml" 157 5050 5079
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 154 4860 4866 "p_parser.ml" 157 5050 5079
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 148 4635 4641 "p_parser.ml" 157 5050 5079
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 158 5080 5084 "p_parser.ml" 158 5080 5086
type(
  preproof_ Property.wrapped list
)
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 159 5090 5096 "p_parser.ml" 159 5090 5108
type(
  ?debug:string ->
  ?at:int Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit -> (int -> unit, Format.formatter, unit) format -> int -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"p_parser.ml" 159 5090 5113 "p_parser.ml" 159 5090 5119
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
type(
  int Property.wrapped option
)
"p_parser.ml" 160 5120 5128 "p_parser.ml" 160 5120 5190
type(
  (int -> unit, Format.formatter, unit) format
)
"p_parser.ml" 160 5120 5191 "p_parser.ml" 160 5120 5197
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 160 5120 5191 "p_parser.ml" 160 5120 5202
type(
  int
)
"p_parser.ml" 159 5090 5096 "p_parser.ml" 160 5120 5202
type(
  unit
)
"p_parser.ml" 161 5205 5211 "p_parser.ml" 161 5205 5221
type(
  int Property.wrapped -> string -> unit
)
ident(
  int_ref Errors.set "errors.mli" 53 1273 1273 "errors.mli" 53 1273 1319
)
"p_parser.ml" 161 5205 5222 "p_parser.ml" 161 5205 5228
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 161 5205 5230 "p_parser.ml" 161 5205 5270
type(
  string
)
"p_parser.ml" 161 5205 5270 "p_parser.ml" 161 5205 5271
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"p_parser.ml" 161 5205 5272 "p_parser.ml" 161 5205 5285
type(
  int -> string
)
ident(
  int_ref Stdlib.string_of_int "stdlib.mli" 750 27897 27897 "stdlib.mli" 750 27897 27930
)
"p_parser.ml" 161 5205 5286 "p_parser.ml" 161 5205 5292
type(
  int Property.wrapped
)
ident(
  int_ref currlv "p_parser.ml" 91 2396 2426 "p_parser.ml" 91 2396 2432
)
"p_parser.ml" 161 5205 5286 "p_parser.ml" 161 5205 5297
type(
  int
)
"p_parser.ml" 161 5205 5271 "p_parser.ml" 161 5205 5298
type(
  string
)
"p_parser.ml" 161 5205 5298 "p_parser.ml" 161 5205 5299
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"p_parser.ml" 161 5205 5299 "p_parser.ml" 161 5205 5319
type(
  string
)
"p_parser.ml" 161 5205 5271 "p_parser.ml" 161 5205 5319
type(
  string
)
"p_parser.ml" 161 5205 5229 "p_parser.ml" 161 5205 5320
type(
  string
)
"p_parser.ml" 161 5205 5211 "p_parser.ml" 161 5205 5320
type(
  unit
)
"p_parser.ml" 162 5322 5328 "p_parser.ml" 162 5322 5336
type(
  string ->
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"p_parser.ml" 162 5322 5337 "p_parser.ml" 162 5322 5351
type(
  string
)
"p_parser.ml" 162 5322 5328 "p_parser.ml" 162 5322 5351
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 161 5205 5211 "p_parser.ml" 162 5322 5351
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 159 5090 5096 "p_parser.ml" 162 5322 5351
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 91 2396 2438 "p_parser.ml" 162 5322 5351
type(
  P_t.step list * P_t.qed_step Property.wrapped *
  preproof_ Property.wrapped list
)
"p_parser.ml" 164 5353 5357 "p_parser.ml" 164 5353 5364
type(
  int ->
  prestep Property.wrapped ->
  preproof_ Property.wrapped list ->
  step_or_qed * preproof_ Property.wrapped list
)
ident(
  def to_step "p_parser.ml" 66 1418 1418 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 164 5353 5365 "p_parser.ml" 164 5353 5371
type(
  int
)
ident(
  def currlv "p_parser.ml" 164 5353 5372 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
type(
  prestep Property.wrapped
)
ident(
  def st "p_parser.ml" 164 5353 5375 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 164 5353 5380 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 164 5353 5386 "p_parser.ml" 164 5353 5388
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 164 5353 5386 "p_parser.ml" 164 5353 5393
type(
  prestep
)
"p_parser.ml" 165 5399 5403 "p_parser.ml" 165 5399 5409
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 166 5413 5424 "p_parser.ml" 166 5413 5425
type(
  P_t.proof
)
ident(
  def p "p_parser.ml" 167 5467 5473 "p_parser.ml" 167 5467 5484
)
"p_parser.ml" 166 5413 5427 "p_parser.ml" 166 5413 5429
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 167 5467 5473 "p_parser.ml" 167 5467 5484
)
"p_parser.ml" 166 5413 5423 "p_parser.ml" 166 5413 5430
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 166 5413 5433 "p_parser.ml" 166 5413 5441
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  int_ref to_proof "p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
)
"p_parser.ml" 166 5413 5443 "p_parser.ml" 166 5413 5449
type(
  int
)
ident(
  int_ref currlv "p_parser.ml" 164 5353 5365 "p_parser.ml" 164 5353 5371
)
"p_parser.ml" 166 5413 5450 "p_parser.ml" 166 5413 5451
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"p_parser.ml" 166 5413 5452 "p_parser.ml" 166 5413 5453
type(
  int
)
"p_parser.ml" 166 5413 5443 "p_parser.ml" 166 5413 5453
type(
  int
)
"p_parser.ml" 166 5413 5454 "p_parser.ml" 166 5413 5456
type(
  int -> prestep Property.wrapped -> int Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 166 5413 5457 "p_parser.ml" 166 5413 5459
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 166 5413 5442 "p_parser.ml" 166 5413 5460
type(
  int Property.wrapped
)
"p_parser.ml" 166 5413 5461 "p_parser.ml" 166 5413 5463
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 166 5413 5433 "p_parser.ml" 166 5413 5463
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 167 5467 5478 "p_parser.ml" 167 5467 5479
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 166 5413 5424 "p_parser.ml" 166 5413 5425
)
"p_parser.ml" 167 5467 5474 "p_parser.ml" 167 5467 5479
type(
  step_or_qed
)
"p_parser.ml" 167 5467 5481 "p_parser.ml" 167 5467 5483
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 166 5413 5427 "p_parser.ml" 166 5413 5429
)
"p_parser.ml" 167 5467 5473 "p_parser.ml" 167 5467 5484
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 166 5413 5419 "p_parser.ml" 167 5467 5484
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 168 5485 5497 "p_parser.ml" 168 5485 5499
type(
  P_t.usable
)
ident(
  def us "p_parser.ml" 169 5503 5509 "p_parser.ml" 169 5503 5535
)
"p_parser.ml" 168 5485 5489 "p_parser.ml" 168 5485 5499
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 169 5503 5521 "p_parser.ml" 169 5503 5523
type(
  P_t.usable
)
ident(
  int_ref us "p_parser.ml" 168 5485 5497 "p_parser.ml" 168 5485 5499
)
"p_parser.ml" 169 5503 5516 "p_parser.ml" 169 5503 5523
type(
  P_t.step_
)
"p_parser.ml" 169 5503 5524 "p_parser.ml" 169 5503 5526
type(
  P_t.step_ -> prestep Property.wrapped -> P_t.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 169 5503 5527 "p_parser.ml" 169 5503 5529
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 169 5503 5515 "p_parser.ml" 169 5503 5530
type(
  P_t.step
)
"p_parser.ml" 169 5503 5510 "p_parser.ml" 169 5503 5530
type(
  step_or_qed
)
"p_parser.ml" 169 5503 5532 "p_parser.ml" 169 5503 5534
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 169 5503 5509 "p_parser.ml" 169 5503 5535
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 170 5536 5548 "p_parser.ml" 170 5536 5552
type(
  supp
)
ident(
  def supp "p_parser.ml" 171 5572 5578 "p_parser.ml" 172 5616 5655
)
"p_parser.ml" 170 5536 5554 "p_parser.ml" 170 5536 5557
type(
  only
)
ident(
  def onl "p_parser.ml" 171 5572 5578 "p_parser.ml" 172 5616 5655
)
"p_parser.ml" 170 5536 5559 "p_parser.ml" 170 5536 5561
type(
  P_t.usable
)
ident(
  def us "p_parser.ml" 171 5572 5578 "p_parser.ml" 172 5616 5655
)
"p_parser.ml" 170 5536 5563 "p_parser.ml" 170 5536 5567
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 171 5572 5578 "p_parser.ml" 172 5616 5655
)
"p_parser.ml" 170 5536 5540 "p_parser.ml" 170 5536 5568
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 171 5572 5582 "p_parser.ml" 171 5572 5583
type(
  P_t.step_ Property.wrapped
)
ident(
  def u "p_parser.ml" 172 5616 5622 "p_parser.ml" 172 5616 5655
)
"p_parser.ml" 171 5572 5591 "p_parser.ml" 171 5572 5593
type(
  P_t.usable
)
ident(
  int_ref us "p_parser.ml" 170 5536 5559 "p_parser.ml" 170 5536 5561
)
"p_parser.ml" 171 5572 5595 "p_parser.ml" 171 5572 5598
type(
  only
)
ident(
  int_ref onl "p_parser.ml" 170 5536 5554 "p_parser.ml" 170 5536 5557
)
"p_parser.ml" 171 5572 5599 "p_parser.ml" 171 5572 5600
type(
  only -> only -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"p_parser.ml" 171 5572 5601 "p_parser.ml" 171 5572 5605
type(
  only
)
"p_parser.ml" 171 5572 5595 "p_parser.ml" 171 5572 5605
type(
  bool
)
"p_parser.ml" 171 5572 5586 "p_parser.ml" 171 5572 5606
type(
  P_t.step_
)
"p_parser.ml" 171 5572 5607 "p_parser.ml" 171 5572 5609
type(
  P_t.step_ -> prestep Property.wrapped -> P_t.step_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 171 5572 5610 "p_parser.ml" 171 5572 5612
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 171 5572 5586 "p_parser.ml" 171 5572 5612
type(
  P_t.step_ Property.wrapped
)
"p_parser.ml" 172 5616 5629 "p_parser.ml" 172 5616 5637
type(
  supp -> Method.t option -> P_t.step -> P_t.step
)
ident(
  int_ref annotate "p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
)
"p_parser.ml" 172 5616 5638 "p_parser.ml" 172 5616 5642
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 170 5536 5548 "p_parser.ml" 170 5536 5552
)
"p_parser.ml" 172 5616 5643 "p_parser.ml" 172 5616 5647
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 170 5536 5563 "p_parser.ml" 170 5536 5567
)
"p_parser.ml" 172 5616 5648 "p_parser.ml" 172 5616 5649
type(
  P_t.step
)
ident(
  int_ref u "p_parser.ml" 171 5572 5582 "p_parser.ml" 171 5572 5583
)
"p_parser.ml" 172 5616 5628 "p_parser.ml" 172 5616 5650
type(
  P_t.step
)
"p_parser.ml" 172 5616 5623 "p_parser.ml" 172 5616 5650
type(
  step_or_qed
)
"p_parser.ml" 172 5616 5652 "p_parser.ml" 172 5616 5654
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 172 5616 5622 "p_parser.ml" 172 5616 5655
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 171 5572 5578 "p_parser.ml" 172 5616 5655
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 173 5656 5670 "p_parser.ml" 173 5656 5673
type(
  Expr.T.defn list
)
ident(
  def dfs "p_parser.ml" 174 5677 5683 "p_parser.ml" 174 5677 5712
)
"p_parser.ml" 173 5656 5660 "p_parser.ml" 173 5656 5673
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 174 5677 5697 "p_parser.ml" 174 5677 5700
type(
  Expr.T.defn list
)
ident(
  int_ref dfs "p_parser.ml" 173 5656 5670 "p_parser.ml" 173 5656 5673
)
"p_parser.ml" 174 5677 5690 "p_parser.ml" 174 5677 5700
type(
  P_t.step_
)
"p_parser.ml" 174 5677 5701 "p_parser.ml" 174 5677 5703
type(
  P_t.step_ -> prestep Property.wrapped -> P_t.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 174 5677 5704 "p_parser.ml" 174 5677 5706
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 174 5677 5689 "p_parser.ml" 174 5677 5707
type(
  P_t.step
)
"p_parser.ml" 174 5677 5684 "p_parser.ml" 174 5677 5707
type(
  step_or_qed
)
"p_parser.ml" 174 5677 5709 "p_parser.ml" 174 5677 5711
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 174 5677 5683 "p_parser.ml" 174 5677 5712
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 175 5713 5726 "p_parser.ml" 175 5713 5730
type(
  supp
)
ident(
  def supp "p_parser.ml" 176 5744 5750 "p_parser.ml" 177 5774 5813
)
"p_parser.ml" 175 5713 5732 "p_parser.ml" 175 5713 5733
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 176 5744 5750 "p_parser.ml" 177 5774 5813
)
"p_parser.ml" 175 5713 5735 "p_parser.ml" 175 5713 5739
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 176 5744 5750 "p_parser.ml" 177 5774 5813
)
"p_parser.ml" 175 5713 5717 "p_parser.ml" 175 5713 5740
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 176 5744 5754 "p_parser.ml" 176 5744 5755
type(
  P_t.step_ Property.wrapped
)
ident(
  def h "p_parser.ml" 177 5774 5780 "p_parser.ml" 177 5774 5813
)
"p_parser.ml" 176 5744 5763 "p_parser.ml" 176 5744 5764
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 175 5713 5732 "p_parser.ml" 175 5713 5733
)
"p_parser.ml" 176 5744 5758 "p_parser.ml" 176 5744 5764
type(
  P_t.step_
)
"p_parser.ml" 176 5744 5765 "p_parser.ml" 176 5744 5767
type(
  P_t.step_ -> prestep Property.wrapped -> P_t.step_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 176 5744 5768 "p_parser.ml" 176 5744 5770
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 176 5744 5758 "p_parser.ml" 176 5744 5770
type(
  P_t.step_ Property.wrapped
)
"p_parser.ml" 177 5774 5787 "p_parser.ml" 177 5774 5795
type(
  supp -> Method.t option -> P_t.step -> P_t.step
)
ident(
  int_ref annotate "p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
)
"p_parser.ml" 177 5774 5796 "p_parser.ml" 177 5774 5800
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 175 5713 5726 "p_parser.ml" 175 5713 5730
)
"p_parser.ml" 177 5774 5801 "p_parser.ml" 177 5774 5805
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 175 5713 5735 "p_parser.ml" 175 5713 5739
)
"p_parser.ml" 177 5774 5806 "p_parser.ml" 177 5774 5807
type(
  P_t.step
)
ident(
  int_ref h "p_parser.ml" 176 5744 5754 "p_parser.ml" 176 5744 5755
)
"p_parser.ml" 177 5774 5786 "p_parser.ml" 177 5774 5808
type(
  P_t.step
)
"p_parser.ml" 177 5774 5781 "p_parser.ml" 177 5774 5808
type(
  step_or_qed
)
"p_parser.ml" 177 5774 5810 "p_parser.ml" 177 5774 5812
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 177 5774 5780 "p_parser.ml" 177 5774 5813
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 176 5744 5750 "p_parser.ml" 177 5774 5813
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 178 5814 5827 "p_parser.ml" 178 5814 5831
type(
  supp
)
ident(
  def supp "p_parser.ml" 179 5846 5852 "p_parser.ml" 180 5877 5916
)
"p_parser.ml" 178 5814 5833 "p_parser.ml" 178 5814 5835
type(
  Expr.T.bound list
)
ident(
  def bs "p_parser.ml" 179 5846 5852 "p_parser.ml" 180 5877 5916
)
"p_parser.ml" 178 5814 5837 "p_parser.ml" 178 5814 5841
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 179 5846 5852 "p_parser.ml" 180 5877 5916
)
"p_parser.ml" 178 5814 5818 "p_parser.ml" 178 5814 5842
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 179 5846 5856 "p_parser.ml" 179 5846 5857
type(
  P_t.step_ Property.wrapped
)
ident(
  def t "p_parser.ml" 180 5877 5883 "p_parser.ml" 180 5877 5916
)
"p_parser.ml" 179 5846 5865 "p_parser.ml" 179 5846 5867
type(
  Expr.T.bound list
)
ident(
  int_ref bs "p_parser.ml" 178 5814 5833 "p_parser.ml" 178 5814 5835
)
"p_parser.ml" 179 5846 5860 "p_parser.ml" 179 5846 5867
type(
  P_t.step_
)
"p_parser.ml" 179 5846 5868 "p_parser.ml" 179 5846 5870
type(
  P_t.step_ -> prestep Property.wrapped -> P_t.step_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 179 5846 5871 "p_parser.ml" 179 5846 5873
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 179 5846 5860 "p_parser.ml" 179 5846 5873
type(
  P_t.step_ Property.wrapped
)
"p_parser.ml" 180 5877 5890 "p_parser.ml" 180 5877 5898
type(
  supp -> Method.t option -> P_t.step -> P_t.step
)
ident(
  int_ref annotate "p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
)
"p_parser.ml" 180 5877 5899 "p_parser.ml" 180 5877 5903
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 178 5814 5827 "p_parser.ml" 178 5814 5831
)
"p_parser.ml" 180 5877 5904 "p_parser.ml" 180 5877 5908
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 178 5814 5837 "p_parser.ml" 178 5814 5841
)
"p_parser.ml" 180 5877 5909 "p_parser.ml" 180 5877 5910
type(
  P_t.step
)
ident(
  int_ref t "p_parser.ml" 179 5846 5856 "p_parser.ml" 179 5846 5857
)
"p_parser.ml" 180 5877 5889 "p_parser.ml" 180 5877 5911
type(
  P_t.step
)
"p_parser.ml" 180 5877 5884 "p_parser.ml" 180 5877 5911
type(
  step_or_qed
)
"p_parser.ml" 180 5877 5913 "p_parser.ml" 180 5877 5915
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 180 5877 5883 "p_parser.ml" 180 5877 5916
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 179 5846 5852 "p_parser.ml" 180 5877 5916
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 181 5917 5933 "p_parser.ml" 181 5917 5937
type(
  supp
)
ident(
  def supp "p_parser.ml" 182 5952 5958 "p_parser.ml" 183 5986 6025
)
"p_parser.ml" 181 5917 5939 "p_parser.ml" 181 5917 5941
type(
  Expr.T.expr list
)
ident(
  def es "p_parser.ml" 182 5952 5958 "p_parser.ml" 183 5986 6025
)
"p_parser.ml" 181 5917 5943 "p_parser.ml" 181 5917 5947
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 182 5952 5958 "p_parser.ml" 183 5986 6025
)
"p_parser.ml" 181 5917 5921 "p_parser.ml" 181 5917 5948
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 182 5952 5962 "p_parser.ml" 182 5952 5963
type(
  P_t.step_ Property.wrapped
)
ident(
  def w "p_parser.ml" 183 5986 5992 "p_parser.ml" 183 5986 6025
)
"p_parser.ml" 182 5952 5974 "p_parser.ml" 182 5952 5976
type(
  Expr.T.expr list
)
ident(
  int_ref es "p_parser.ml" 181 5917 5939 "p_parser.ml" 181 5917 5941
)
"p_parser.ml" 182 5952 5966 "p_parser.ml" 182 5952 5976
type(
  P_t.step_
)
"p_parser.ml" 182 5952 5977 "p_parser.ml" 182 5952 5979
type(
  P_t.step_ -> prestep Property.wrapped -> P_t.step_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 182 5952 5980 "p_parser.ml" 182 5952 5982
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 182 5952 5966 "p_parser.ml" 182 5952 5982
type(
  P_t.step_ Property.wrapped
)
"p_parser.ml" 183 5986 5999 "p_parser.ml" 183 5986 6007
type(
  supp -> Method.t option -> P_t.step -> P_t.step
)
ident(
  int_ref annotate "p_parser.ml" 31 538 542 "p_parser.ml" 31 538 550
)
"p_parser.ml" 183 5986 6008 "p_parser.ml" 183 5986 6012
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 181 5917 5933 "p_parser.ml" 181 5917 5937
)
"p_parser.ml" 183 5986 6013 "p_parser.ml" 183 5986 6017
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 181 5917 5943 "p_parser.ml" 181 5917 5947
)
"p_parser.ml" 183 5986 6018 "p_parser.ml" 183 5986 6019
type(
  P_t.step
)
ident(
  int_ref w "p_parser.ml" 182 5952 5962 "p_parser.ml" 182 5952 5963
)
"p_parser.ml" 183 5986 5998 "p_parser.ml" 183 5986 6020
type(
  P_t.step
)
"p_parser.ml" 183 5986 5993 "p_parser.ml" 183 5986 6020
type(
  step_or_qed
)
"p_parser.ml" 183 5986 6022 "p_parser.ml" 183 5986 6024
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 183 5986 5992 "p_parser.ml" 183 5986 6025
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 182 5952 5958 "p_parser.ml" 183 5986 6025
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 184 6026 6040 "p_parser.ml" 184 6026 6042
type(
  Expr.T.sequent
)
ident(
  def sq "p_parser.ml" 185 6046 6052 "p_parser.ml" 187 6135 6174
)
"p_parser.ml" 184 6026 6030 "p_parser.ml" 184 6026 6042
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 185 6046 6057 "p_parser.ml" 185 6046 6058
type(
  P_t.proof
)
ident(
  def p "p_parser.ml" 186 6100 6106 "p_parser.ml" 187 6135 6174
)
"p_parser.ml" 185 6046 6060 "p_parser.ml" 185 6046 6062
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 186 6100 6106 "p_parser.ml" 187 6135 6174
)
"p_parser.ml" 185 6046 6056 "p_parser.ml" 185 6046 6063
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 185 6046 6066 "p_parser.ml" 185 6046 6074
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  int_ref to_proof "p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
)
"p_parser.ml" 185 6046 6076 "p_parser.ml" 185 6046 6082
type(
  int
)
ident(
  int_ref currlv "p_parser.ml" 164 5353 5365 "p_parser.ml" 164 5353 5371
)
"p_parser.ml" 185 6046 6083 "p_parser.ml" 185 6046 6084
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"p_parser.ml" 185 6046 6085 "p_parser.ml" 185 6046 6086
type(
  int
)
"p_parser.ml" 185 6046 6076 "p_parser.ml" 185 6046 6086
type(
  int
)
"p_parser.ml" 185 6046 6087 "p_parser.ml" 185 6046 6089
type(
  int -> prestep Property.wrapped -> int Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 185 6046 6090 "p_parser.ml" 185 6046 6092
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 185 6046 6075 "p_parser.ml" 185 6046 6093
type(
  int Property.wrapped
)
"p_parser.ml" 185 6046 6094 "p_parser.ml" 185 6046 6096
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 185 6046 6066 "p_parser.ml" 185 6046 6096
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 186 6100 6110 "p_parser.ml" 186 6100 6112
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  def st "p_parser.ml" 187 6135 6141 "p_parser.ml" 187 6135 6174
)
"p_parser.ml" 186 6100 6115 "p_parser.ml" 186 6100 6126
type(
  prestep Property.wrapped ->
  P_t.proof -> prestep Property.wrapped Property.wrapped
)
ident(
  int_ref enlarge_loc "p_parser.ml" 14 156 160 "p_parser.ml" 14 156 171
)
"p_parser.ml" 186 6100 6127 "p_parser.ml" 186 6100 6129
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 186 6100 6130 "p_parser.ml" 186 6100 6131
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 185 6046 6057 "p_parser.ml" 185 6046 6058
)
"p_parser.ml" 186 6100 6115 "p_parser.ml" 186 6100 6131
type(
  prestep Property.wrapped Property.wrapped
)
"p_parser.ml" 187 6135 6156 "p_parser.ml" 187 6135 6158
type(
  Expr.T.sequent
)
ident(
  int_ref sq "p_parser.ml" 184 6026 6040 "p_parser.ml" 184 6026 6042
)
"p_parser.ml" 187 6135 6160 "p_parser.ml" 187 6135 6161
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 185 6046 6057 "p_parser.ml" 185 6046 6058
)
"p_parser.ml" 187 6135 6148 "p_parser.ml" 187 6135 6162
type(
  P_t.step_
)
"p_parser.ml" 187 6135 6163 "p_parser.ml" 187 6135 6165
type(
  P_t.step_ -> prestep Property.wrapped Property.wrapped -> P_t.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 187 6135 6166 "p_parser.ml" 187 6135 6168
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 186 6100 6110 "p_parser.ml" 186 6100 6112
)
"p_parser.ml" 187 6135 6147 "p_parser.ml" 187 6135 6169
type(
  P_t.step
)
"p_parser.ml" 187 6135 6142 "p_parser.ml" 187 6135 6169
type(
  step_or_qed
)
"p_parser.ml" 187 6135 6171 "p_parser.ml" 187 6135 6173
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 185 6046 6060 "p_parser.ml" 185 6046 6062
)
"p_parser.ml" 187 6135 6141 "p_parser.ml" 187 6135 6174
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 186 6100 6106 "p_parser.ml" 187 6135 6174
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 185 6046 6052 "p_parser.ml" 187 6135 6174
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 188 6175 6191 "p_parser.ml" 188 6175 6193
type(
  Expr.T.sequent
)
ident(
  def sq "p_parser.ml" 189 6197 6203 "p_parser.ml" 191 6286 6327
)
"p_parser.ml" 188 6175 6179 "p_parser.ml" 188 6175 6193
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 189 6197 6208 "p_parser.ml" 189 6197 6209
type(
  P_t.proof
)
ident(
  def p "p_parser.ml" 190 6251 6257 "p_parser.ml" 191 6286 6327
)
"p_parser.ml" 189 6197 6211 "p_parser.ml" 189 6197 6213
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 190 6251 6257 "p_parser.ml" 191 6286 6327
)
"p_parser.ml" 189 6197 6207 "p_parser.ml" 189 6197 6214
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 189 6197 6217 "p_parser.ml" 189 6197 6225
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  int_ref to_proof "p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
)
"p_parser.ml" 189 6197 6227 "p_parser.ml" 189 6197 6233
type(
  int
)
ident(
  int_ref currlv "p_parser.ml" 164 5353 5365 "p_parser.ml" 164 5353 5371
)
"p_parser.ml" 189 6197 6234 "p_parser.ml" 189 6197 6235
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"p_parser.ml" 189 6197 6236 "p_parser.ml" 189 6197 6237
type(
  int
)
"p_parser.ml" 189 6197 6227 "p_parser.ml" 189 6197 6237
type(
  int
)
"p_parser.ml" 189 6197 6238 "p_parser.ml" 189 6197 6240
type(
  int -> prestep Property.wrapped -> int Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 189 6197 6241 "p_parser.ml" 189 6197 6243
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 189 6197 6226 "p_parser.ml" 189 6197 6244
type(
  int Property.wrapped
)
"p_parser.ml" 189 6197 6245 "p_parser.ml" 189 6197 6247
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 189 6197 6217 "p_parser.ml" 189 6197 6247
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 190 6251 6261 "p_parser.ml" 190 6251 6263
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  def st "p_parser.ml" 191 6286 6292 "p_parser.ml" 191 6286 6327
)
"p_parser.ml" 190 6251 6266 "p_parser.ml" 190 6251 6277
type(
  prestep Property.wrapped ->
  P_t.proof -> prestep Property.wrapped Property.wrapped
)
ident(
  int_ref enlarge_loc "p_parser.ml" 14 156 160 "p_parser.ml" 14 156 171
)
"p_parser.ml" 190 6251 6278 "p_parser.ml" 190 6251 6280
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 190 6251 6281 "p_parser.ml" 190 6251 6282
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 189 6197 6208 "p_parser.ml" 189 6197 6209
)
"p_parser.ml" 190 6251 6266 "p_parser.ml" 190 6251 6282
type(
  prestep Property.wrapped Property.wrapped
)
"p_parser.ml" 191 6286 6309 "p_parser.ml" 191 6286 6311
type(
  Expr.T.sequent
)
ident(
  int_ref sq "p_parser.ml" 188 6175 6191 "p_parser.ml" 188 6175 6193
)
"p_parser.ml" 191 6286 6313 "p_parser.ml" 191 6286 6314
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 189 6197 6208 "p_parser.ml" 189 6197 6209
)
"p_parser.ml" 191 6286 6299 "p_parser.ml" 191 6286 6315
type(
  P_t.step_
)
"p_parser.ml" 191 6286 6316 "p_parser.ml" 191 6286 6318
type(
  P_t.step_ -> prestep Property.wrapped Property.wrapped -> P_t.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 191 6286 6319 "p_parser.ml" 191 6286 6321
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 190 6251 6261 "p_parser.ml" 190 6251 6263
)
"p_parser.ml" 191 6286 6298 "p_parser.ml" 191 6286 6322
type(
  P_t.step
)
"p_parser.ml" 191 6286 6293 "p_parser.ml" 191 6286 6322
type(
  step_or_qed
)
"p_parser.ml" 191 6286 6324 "p_parser.ml" 191 6286 6326
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 189 6197 6211 "p_parser.ml" 189 6197 6213
)
"p_parser.ml" 191 6286 6292 "p_parser.ml" 191 6286 6327
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 190 6251 6257 "p_parser.ml" 191 6286 6327
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 189 6197 6203 "p_parser.ml" 191 6286 6327
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 192 6328 6340 "p_parser.ml" 192 6328 6341
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 193 6345 6351 "p_parser.ml" 195 6434 6471
)
"p_parser.ml" 192 6328 6332 "p_parser.ml" 192 6328 6341
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 193 6345 6356 "p_parser.ml" 193 6345 6357
type(
  P_t.proof
)
ident(
  def p "p_parser.ml" 194 6399 6405 "p_parser.ml" 195 6434 6471
)
"p_parser.ml" 193 6345 6359 "p_parser.ml" 193 6345 6361
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 194 6399 6405 "p_parser.ml" 195 6434 6471
)
"p_parser.ml" 193 6345 6355 "p_parser.ml" 193 6345 6362
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 193 6345 6365 "p_parser.ml" 193 6345 6373
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  int_ref to_proof "p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
)
"p_parser.ml" 193 6345 6375 "p_parser.ml" 193 6345 6381
type(
  int
)
ident(
  int_ref currlv "p_parser.ml" 164 5353 5365 "p_parser.ml" 164 5353 5371
)
"p_parser.ml" 193 6345 6382 "p_parser.ml" 193 6345 6383
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"p_parser.ml" 193 6345 6384 "p_parser.ml" 193 6345 6385
type(
  int
)
"p_parser.ml" 193 6345 6375 "p_parser.ml" 193 6345 6385
type(
  int
)
"p_parser.ml" 193 6345 6386 "p_parser.ml" 193 6345 6388
type(
  int -> prestep Property.wrapped -> int Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 193 6345 6389 "p_parser.ml" 193 6345 6391
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 193 6345 6374 "p_parser.ml" 193 6345 6392
type(
  int Property.wrapped
)
"p_parser.ml" 193 6345 6393 "p_parser.ml" 193 6345 6395
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 193 6345 6365 "p_parser.ml" 193 6345 6395
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 194 6399 6409 "p_parser.ml" 194 6399 6411
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  def st "p_parser.ml" 195 6434 6440 "p_parser.ml" 195 6434 6471
)
"p_parser.ml" 194 6399 6414 "p_parser.ml" 194 6399 6425
type(
  prestep Property.wrapped ->
  P_t.proof -> prestep Property.wrapped Property.wrapped
)
ident(
  int_ref enlarge_loc "p_parser.ml" 14 156 160 "p_parser.ml" 14 156 171
)
"p_parser.ml" 194 6399 6426 "p_parser.ml" 194 6399 6428
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 194 6399 6429 "p_parser.ml" 194 6399 6430
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 193 6345 6356 "p_parser.ml" 193 6345 6357
)
"p_parser.ml" 194 6399 6414 "p_parser.ml" 194 6399 6430
type(
  prestep Property.wrapped Property.wrapped
)
"p_parser.ml" 195 6434 6454 "p_parser.ml" 195 6434 6455
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 192 6328 6340 "p_parser.ml" 192 6328 6341
)
"p_parser.ml" 195 6434 6457 "p_parser.ml" 195 6434 6458
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 193 6345 6356 "p_parser.ml" 193 6345 6357
)
"p_parser.ml" 195 6434 6447 "p_parser.ml" 195 6434 6459
type(
  P_t.step_
)
"p_parser.ml" 195 6434 6460 "p_parser.ml" 195 6434 6462
type(
  P_t.step_ -> prestep Property.wrapped Property.wrapped -> P_t.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 195 6434 6463 "p_parser.ml" 195 6434 6465
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 194 6399 6409 "p_parser.ml" 194 6399 6411
)
"p_parser.ml" 195 6434 6446 "p_parser.ml" 195 6434 6466
type(
  P_t.step
)
"p_parser.ml" 195 6434 6441 "p_parser.ml" 195 6434 6466
type(
  step_or_qed
)
"p_parser.ml" 195 6434 6468 "p_parser.ml" 195 6434 6470
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 193 6345 6359 "p_parser.ml" 193 6345 6361
)
"p_parser.ml" 195 6434 6440 "p_parser.ml" 195 6434 6471
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 194 6399 6405 "p_parser.ml" 195 6434 6471
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 193 6345 6351 "p_parser.ml" 195 6434 6471
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 196 6472 6485 "p_parser.ml" 196 6472 6487
type(
  Expr.T.bound list
)
ident(
  def bs "p_parser.ml" 197 6495 6501 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 196 6472 6489 "p_parser.ml" 196 6472 6490
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 197 6495 6501 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 196 6472 6476 "p_parser.ml" 196 6472 6491
type(
  prestep
)
type(
  prestep
)
"p_parser.ml" 197 6495 6506 "p_parser.ml" 197 6495 6507
type(
  P_t.proof
)
ident(
  def p "p_parser.ml" 198 6549 6555 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 197 6495 6509 "p_parser.ml" 197 6495 6511
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 198 6549 6555 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 197 6495 6505 "p_parser.ml" 197 6495 6512
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 197 6495 6515 "p_parser.ml" 197 6495 6523
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  int_ref to_proof "p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
)
"p_parser.ml" 197 6495 6525 "p_parser.ml" 197 6495 6531
type(
  int
)
ident(
  int_ref currlv "p_parser.ml" 164 5353 5365 "p_parser.ml" 164 5353 5371
)
"p_parser.ml" 197 6495 6532 "p_parser.ml" 197 6495 6533
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"p_parser.ml" 197 6495 6534 "p_parser.ml" 197 6495 6535
type(
  int
)
"p_parser.ml" 197 6495 6525 "p_parser.ml" 197 6495 6535
type(
  int
)
"p_parser.ml" 197 6495 6536 "p_parser.ml" 197 6495 6538
type(
  int -> prestep Property.wrapped -> int Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 197 6495 6539 "p_parser.ml" 197 6495 6541
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 197 6495 6524 "p_parser.ml" 197 6495 6542
type(
  int Property.wrapped
)
"p_parser.ml" 197 6495 6543 "p_parser.ml" 197 6495 6545
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 164 5353 5375 "p_parser.ml" 164 5353 5377
)
"p_parser.ml" 197 6495 6515 "p_parser.ml" 197 6495 6545
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 198 6549 6559 "p_parser.ml" 198 6549 6561
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  def st "p_parser.ml" 199 6584 6590 "p_parser.ml" 199 6584 6624
)
"p_parser.ml" 198 6549 6564 "p_parser.ml" 198 6549 6575
type(
  prestep Property.wrapped ->
  P_t.proof -> prestep Property.wrapped Property.wrapped
)
ident(
  int_ref enlarge_loc "p_parser.ml" 14 156 160 "p_parser.ml" 14 156 171
)
"p_parser.ml" 198 6549 6576 "p_parser.ml" 198 6549 6578
type(
  prestep Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 164 5353 5372 "p_parser.ml" 164 5353 5374
)
"p_parser.ml" 198 6549 6579 "p_parser.ml" 198 6549 6580
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 197 6495 6506 "p_parser.ml" 197 6495 6507
)
"p_parser.ml" 198 6549 6564 "p_parser.ml" 198 6549 6580
type(
  prestep Property.wrapped Property.wrapped
)
"p_parser.ml" 199 6584 6603 "p_parser.ml" 199 6584 6605
type(
  Expr.T.bound list
)
ident(
  int_ref bs "p_parser.ml" 196 6472 6485 "p_parser.ml" 196 6472 6487
)
"p_parser.ml" 199 6584 6607 "p_parser.ml" 199 6584 6608
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 196 6472 6489 "p_parser.ml" 196 6472 6490
)
"p_parser.ml" 199 6584 6610 "p_parser.ml" 199 6584 6611
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 197 6495 6506 "p_parser.ml" 197 6495 6507
)
"p_parser.ml" 199 6584 6597 "p_parser.ml" 199 6584 6612
type(
  P_t.step_
)
"p_parser.ml" 199 6584 6613 "p_parser.ml" 199 6584 6615
type(
  P_t.step_ -> prestep Property.wrapped Property.wrapped -> P_t.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 199 6584 6616 "p_parser.ml" 199 6584 6618
type(
  prestep Property.wrapped Property.wrapped
)
ident(
  int_ref st "p_parser.ml" 198 6549 6559 "p_parser.ml" 198 6549 6561
)
"p_parser.ml" 199 6584 6596 "p_parser.ml" 199 6584 6619
type(
  P_t.step
)
"p_parser.ml" 199 6584 6591 "p_parser.ml" 199 6584 6619
type(
  step_or_qed
)
"p_parser.ml" 199 6584 6621 "p_parser.ml" 199 6584 6623
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 197 6495 6509 "p_parser.ml" 197 6495 6511
)
"p_parser.ml" 199 6584 6590 "p_parser.ml" 199 6584 6624
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 198 6549 6555 "p_parser.ml" 199 6584 6624
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 197 6495 6501 "p_parser.ml" 199 6584 6624
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 164 5353 5380 "p_parser.ml" 199 6584 6624
type(
  step_or_qed * preproof_ Property.wrapped list
)
"p_parser.ml" 201 6626 6630 "p_parser.ml" 201 6626 6638
type(
  preproof_ Property.wrapped list -> P_t.proof
)
ident(
  def toplevel "p_parser.ml" 218 7149 7149 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 201 6626 6639 "p_parser.ml" 201 6626 6641
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 202 6644 6646 "p_parser.ml" 216 7107 7147
)
"p_parser.ml" 202 6644 6650 "p_parser.ml" 202 6644 6652
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 211 6896 6898 "p_parser.ml" 216 7107 7147
)
"p_parser.ml" 202 6644 6661 "p_parser.ml" 202 6644 6663
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 201 6626 6639 "p_parser.ml" 201 6626 6641
)
"p_parser.ml" 203 6669 6675 "p_parser.ml" 203 6669 6677
type(
  preproof_ Property.wrapped list
)
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 203 6669 6681 "p_parser.ml" 203 6669 6689
type(
  string -> preproof_ Property.wrapped list
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"p_parser.ml" 203 6669 6690 "p_parser.ml" 203 6669 6700
type(
  string
)
"p_parser.ml" 203 6669 6681 "p_parser.ml" 203 6669 6700
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 204 6701 6707 "p_parser.ml" 204 6701 6708
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 205 6718 6726 "p_parser.ml" 209 6853 6890
)
"p_parser.ml" 204 6701 6712 "p_parser.ml" 204 6701 6714
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 205 6718 6726 "p_parser.ml" 209 6853 6890
)
"p_parser.ml" 204 6701 6707 "p_parser.ml" 204 6701 6714
type(
  preproof_ Property.wrapped list
)
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 205 6718 6730 "p_parser.ml" 205 6718 6732
type(
  preproof_
)
ident(
  def pc "p_parser.ml" 209 6853 6864 "p_parser.ml" 209 6853 6890
)
"p_parser.ml" 205 6718 6741 "p_parser.ml" 205 6718 6742
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 204 6701 6707 "p_parser.ml" 204 6701 6708
)
"p_parser.ml" 205 6718 6741 "p_parser.ml" 205 6718 6747
type(
  preproof_
)
"p_parser.ml" 206 6753 6774 "p_parser.ml" 206 6753 6775
type(
  bool
)
"p_parser.ml" 206 6753 6777 "p_parser.ml" 206 6753 6779
type(
  preno
)
ident(
  def pn "p_parser.ml" 207 6790 6804 "p_parser.ml" 207 6790 6828
)
"p_parser.ml" 206 6753 6781 "p_parser.ml" 206 6753 6785
type(
  prestep
)
ident(
  def pstp "p_parser.ml" 207 6790 6804 "p_parser.ml" 207 6790 6828
)
"p_parser.ml" 206 6753 6765 "p_parser.ml" 206 6753 6786
type(
  preproof_
)
type(
  preproof_
)
"p_parser.ml" 207 6790 6813 "p_parser.ml" 207 6790 6817
type(
  bool
)
"p_parser.ml" 207 6790 6819 "p_parser.ml" 207 6790 6821
type(
  preno
)
ident(
  int_ref pn "p_parser.ml" 206 6753 6777 "p_parser.ml" 206 6753 6779
)
"p_parser.ml" 207 6790 6823 "p_parser.ml" 207 6790 6827
type(
  prestep
)
ident(
  int_ref pstp "p_parser.ml" 206 6753 6781 "p_parser.ml" 206 6753 6785
)
"p_parser.ml" 207 6790 6804 "p_parser.ml" 207 6790 6828
type(
  preproof_
)
"p_parser.ml" 208 6829 6841 "p_parser.ml" 208 6829 6842
type(
  preproof_
)
type(
  preproof_
)
"p_parser.ml" 208 6829 6846 "p_parser.ml" 208 6829 6847
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 204 6701 6707 "p_parser.ml" 204 6701 6708
)
"p_parser.ml" 208 6829 6846 "p_parser.ml" 208 6829 6852
type(
  preproof_
)
"p_parser.ml" 205 6718 6735 "p_parser.ml" 208 6829 6852
type(
  preproof_
)
"p_parser.ml" 209 6853 6866 "p_parser.ml" 209 6853 6867
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 204 6701 6707 "p_parser.ml" 204 6701 6708
)
"p_parser.ml" 209 6853 6880 "p_parser.ml" 209 6853 6882
type(
  preproof_
)
ident(
  int_ref pc "p_parser.ml" 205 6718 6730 "p_parser.ml" 205 6718 6732
)
"p_parser.ml" 209 6853 6864 "p_parser.ml" 209 6853 6884
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 209 6853 6888 "p_parser.ml" 209 6853 6890
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 204 6701 6712 "p_parser.ml" 204 6701 6714
)
"p_parser.ml" 209 6853 6864 "p_parser.ml" 209 6853 6890
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 205 6718 6726 "p_parser.ml" 209 6853 6890
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 202 6644 6655 "p_parser.ml" 209 6853 6890
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 211 6896 6904 "p_parser.ml" 211 6896 6912
type(
  int Property.wrapped ->
  preproof_ Property.wrapped list ->
  P_t.proof * preproof_ Property.wrapped list
)
ident(
  int_ref to_proof "p_parser.ml" 66 1418 1426 "p_parser.ml" 66 1418 1434
)
"p_parser.ml" 211 6896 6914 "p_parser.ml" 211 6896 6915
type(
  int
)
"p_parser.ml" 211 6896 6916 "p_parser.ml" 211 6896 6918
type(
  int -> preproof_ Property.wrapped -> int Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 211 6896 6920 "p_parser.ml" 211 6896 6927
type(
  preproof_ Property.wrapped list -> preproof_ Property.wrapped
)
ident(
  int_ref Ext.List.hd "ext.mli" 8 132 134 "ext.mli" 8 132 156
)
"p_parser.ml" 211 6896 6928 "p_parser.ml" 211 6896 6930
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 202 6644 6650 "p_parser.ml" 202 6644 6652
)
"p_parser.ml" 211 6896 6919 "p_parser.ml" 211 6896 6931
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 211 6896 6913 "p_parser.ml" 211 6896 6932
type(
  int Property.wrapped
)
"p_parser.ml" 211 6896 6933 "p_parser.ml" 211 6896 6935
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 202 6644 6650 "p_parser.ml" 202 6644 6652
)
"p_parser.ml" 211 6896 6904 "p_parser.ml" 211 6896 6935
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 212 6941 6948 "p_parser.ml" 212 6941 6949
type(
  P_t.proof
)
ident(
  def p "p_parser.ml" 212 6941 6958 "p_parser.ml" 212 6941 6959
)
"p_parser.ml" 212 6941 6951 "p_parser.ml" 212 6941 6953
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 212 6941 6947 "p_parser.ml" 212 6941 6954
type(
  P_t.proof * preproof_ Property.wrapped list
)
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 212 6941 6958 "p_parser.ml" 212 6941 6959
type(
  P_t.proof
)
ident(
  int_ref p "p_parser.ml" 212 6941 6948 "p_parser.ml" 212 6941 6949
)
"p_parser.ml" 213 6960 6967 "p_parser.ml" 213 6960 6968
type(
  P_t.proof
)
"p_parser.ml" 213 6960 6970 "p_parser.ml" 213 6960 6971
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 214 6981 6989 "p_parser.ml" 216 7107 7147
)
"p_parser.ml" 213 6960 6975 "p_parser.ml" 213 6960 6976
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 213 6960 6970 "p_parser.ml" 213 6960 6976
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 213 6960 6966 "p_parser.ml" 213 6960 6977
type(
  P_t.proof * preproof_ Property.wrapped list
)
type(
  P_t.proof * preproof_ Property.wrapped list
)
"p_parser.ml" 214 6981 6989 "p_parser.ml" 214 6981 6999
type(
  preproof_ Property.wrapped -> string -> unit
)
ident(
  int_ref Errors.set "errors.mli" 53 1273 1273 "errors.mli" 53 1273 1319
)
"p_parser.ml" 214 6981 7000 "p_parser.ml" 214 6981 7001
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 213 6960 6970 "p_parser.ml" 213 6960 6971
)
"p_parser.ml" 214 6981 7002 "p_parser.ml" 214 6981 7038
type(
  string
)
"p_parser.ml" 214 6981 6989 "p_parser.ml" 214 6981 7038
type(
  unit
)
"p_parser.ml" 215 7041 7049 "p_parser.ml" 215 7041 7061
type(
  ?debug:string ->
  ?at:preproof_ Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit -> (unit, Format.formatter, unit) format -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"p_parser.ml" 215 7041 7066 "p_parser.ml" 215 7041 7067
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 213 6960 6970 "p_parser.ml" 213 6960 6971
)
type(
  preproof_ Property.wrapped option
)
"p_parser.ml" 215 7041 7068 "p_parser.ml" 215 7041 7104
type(
  (unit, Format.formatter, unit) format
)
"p_parser.ml" 215 7041 7049 "p_parser.ml" 215 7041 7104
type(
  unit
)
"p_parser.ml" 216 7107 7115 "p_parser.ml" 216 7107 7123
type(
  string -> P_t.proof
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"p_parser.ml" 216 7107 7124 "p_parser.ml" 216 7107 7147
type(
  string
)
"p_parser.ml" 216 7107 7115 "p_parser.ml" 216 7107 7147
type(
  P_t.proof
)
"p_parser.ml" 215 7041 7049 "p_parser.ml" 216 7107 7147
type(
  P_t.proof
)
"p_parser.ml" 214 6981 6989 "p_parser.ml" 216 7107 7147
type(
  P_t.proof
)
"p_parser.ml" 211 6896 6898 "p_parser.ml" 216 7107 7147
type(
  P_t.proof
)
"p_parser.ml" 202 6644 6646 "p_parser.ml" 216 7107 7147
type(
  P_t.proof
)
"p_parser.ml" 218 7149 7156 "p_parser.ml" 218 7149 7162
ident(
  def Parser "p_parser.ml" 373 11381 11384 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  def read_method "p_parser.ml" 225 7289 7291 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 223 7230 7250 "p_parser.ml" 223 7230 7258
type(
  (Tla_parser.pcx, Method.t) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.optional "pars.mli" 105 4006 4010 "pars.mli" 105 4006 4060
)
"p_parser.ml" 223 7230 7260 "p_parser.ml" 223 7230 7263
type(
  (Tla_parser.pcx, Method.t) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, Method.t) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 223 7230 7264 "p_parser.ml" 223 7230 7286
type(
  (Tla_parser.pcx, Method.t) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref Method_prs.read_method "method_prs.mli" 4 62 62 "method_prs.mli" 4 62 129
)
"p_parser.ml" 223 7230 7259 "p_parser.ml" 223 7230 7287
type(
  (Tla_parser.pcx, Method.t) Tla_parser.P.prs
)
"p_parser.ml" 223 7230 7250 "p_parser.ml" 223 7230 7287
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
"p_parser.ml" 225 7289 7295 "p_parser.ml" 225 7289 7303
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs lazy_t
)
ident(
  def suppress "p_parser.ml" 232 7425 7427 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 226 7317 7321 "p_parser.ml" 226 7317 7327
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs list ->
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 227 7330 7336 "p_parser.ml" 227 7330 7342
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.pragma "tla_parser.mli" 61 1696 1696 "tla_parser.mli" 62 1708 1746
)
"p_parser.ml" 227 7330 7344 "p_parser.ml" 227 7330 7349
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.punct "tla_parser.mli" 50 1338 1338 "tla_parser.mli" 50 1338 1378
)
"p_parser.ml" 227 7330 7350 "p_parser.ml" 227 7330 7353
type(
  string
)
"p_parser.ml" 227 7330 7344 "p_parser.ml" 227 7330 7353
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 227 7330 7354 "p_parser.ml" 227 7330 7357
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <|> ) "pars.mli" 87 2905 2909 "pars.mli" 87 2905 2967
)
"p_parser.ml" 227 7330 7358 "p_parser.ml" 227 7330 7363
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.ident "tla_parser.mli" 60 1655 1655 "tla_parser.mli" 60 1655 1695
)
"p_parser.ml" 227 7330 7364 "p_parser.ml" 227 7330 7374
type(
  string
)
"p_parser.ml" 227 7330 7358 "p_parser.ml" 227 7330 7374
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 227 7330 7343 "p_parser.ml" 227 7330 7375
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 227 7330 7336 "p_parser.ml" 227 7330 7375
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 227 7330 7376 "p_parser.ml" 227 7330 7379
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  supp -> (Tla_parser.pcx, supp) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <!> ) "pars.mli" 96 3473 3477 "pars.mli" 96 3473 3525
)
"p_parser.ml" 227 7330 7380 "p_parser.ml" 227 7330 7388
type(
  supp
)
"p_parser.ml" 227 7330 7336 "p_parser.ml" 227 7330 7388
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
"p_parser.ml" 228 7391 7397 "p_parser.ml" 228 7391 7404
type(
  supp -> (Tla_parser.pcx, supp) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.succeed "pars.mli" 73 2251 2255 "pars.mli" 73 2251 2287
)
"p_parser.ml" 228 7391 7405 "p_parser.ml" 228 7391 7409
type(
  supp
)
"p_parser.ml" 228 7391 7397 "p_parser.ml" 228 7391 7409
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
"p_parser.ml" 226 7317 7328 "p_parser.ml" 229 7412 7417
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs list
)
"p_parser.ml" 225 7289 7311 "p_parser.ml" 230 7418 7423
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
"p_parser.ml" 225 7289 7306 "p_parser.ml" 230 7418 7423
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs lazy_t
)
"p_parser.ml" 232 7425 7431 "p_parser.ml" 232 7425 7436
type(
  (Tla_parser.pcx, preno) Tla_parser.P.prs
)
ident(
  def preno "p_parser.ml" 245 7700 7702 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 233 7439 7443 "p_parser.ml" 233 7439 7447
type(
  (Tla_parser.Token.token_ -> preno option) ->
  (Tla_parser.pcx, preno) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.scan "tla_parser.mli" 56 1549 1549 "tla_parser.mli" 58 1594 1613
)
"p_parser.ml" 235 7469 7489 "p_parser.ml" 235 7469 7491
type(
  [ `Num of int | `Plus | `Star ]
)
ident(
  def sn "p_parser.ml" 235 7469 7504 "p_parser.ml" 240 7645 7658
)
"p_parser.ml" 235 7469 7493 "p_parser.ml" 235 7469 7495
type(
  string
)
ident(
  def sl "p_parser.ml" 235 7469 7504 "p_parser.ml" 240 7645 7658
)
"p_parser.ml" 235 7469 7497 "p_parser.ml" 235 7469 7499
type(
  int
)
ident(
  def nd "p_parser.ml" 235 7469 7504 "p_parser.ml" 240 7645 7658
)
"p_parser.ml" 235 7469 7479 "p_parser.ml" 235 7469 7500
type(
  Tla_parser.Token.token_
)
"p_parser.ml" 236 7515 7533 "p_parser.ml" 236 7515 7535
type(
  [ `Num of int | `Plus | `Star ]
)
ident(
  int_ref sn "p_parser.ml" 235 7469 7489 "p_parser.ml" 235 7469 7491
)
"p_parser.ml" 237 7541 7557 "p_parser.ml" 237 7541 7562
type(
  [ `Num of int | `Plus | `Star ]
)
type(
  [ `Num of int | `Plus | `Star ]
)
"p_parser.ml" 237 7541 7571 "p_parser.ml" 237 7541 7573
type(
  string
)
ident(
  int_ref sl "p_parser.ml" 235 7469 7493 "p_parser.ml" 235 7469 7495
)
"p_parser.ml" 237 7541 7566 "p_parser.ml" 237 7541 7573
type(
  preno
)
"p_parser.ml" 238 7574 7590 "p_parser.ml" 238 7574 7595
type(
  [ `Num of int | `Plus | `Star ]
)
type(
  [ `Num of int | `Plus | `Star ]
)
"p_parser.ml" 238 7574 7604 "p_parser.ml" 238 7574 7606
type(
  string
)
ident(
  int_ref sl "p_parser.ml" 235 7469 7493 "p_parser.ml" 235 7469 7495
)
"p_parser.ml" 238 7574 7599 "p_parser.ml" 238 7574 7606
type(
  preno
)
"p_parser.ml" 239 7607 7628 "p_parser.ml" 239 7607 7629
type(
  int
)
ident(
  def n "p_parser.ml" 239 7607 7633 "p_parser.ml" 239 7607 7644
)
"p_parser.ml" 239 7607 7623 "p_parser.ml" 239 7607 7629
type(
  [ `Num of int | `Plus | `Star ]
)
type(
  [ `Num of int | `Plus | `Star ]
)
"p_parser.ml" 239 7607 7638 "p_parser.ml" 239 7607 7639
type(
  int
)
ident(
  int_ref n "p_parser.ml" 239 7607 7628 "p_parser.ml" 239 7607 7629
)
"p_parser.ml" 239 7607 7641 "p_parser.ml" 239 7607 7643
type(
  string
)
ident(
  int_ref sl "p_parser.ml" 235 7469 7493 "p_parser.ml" 235 7469 7495
)
"p_parser.ml" 239 7607 7633 "p_parser.ml" 239 7607 7644
type(
  preno
)
"p_parser.ml" 235 7469 7509 "p_parser.ml" 240 7645 7658
type(
  preno
)
"p_parser.ml" 235 7469 7504 "p_parser.ml" 240 7645 7658
type(
  preno option
)
"p_parser.ml" 241 7659 7669 "p_parser.ml" 241 7659 7670
type(
  Tla_parser.Token.token_
)
"p_parser.ml" 242 7674 7686 "p_parser.ml" 242 7674 7690
type(
  preno option
)
"p_parser.ml" 233 7439 7448 "p_parser.ml" 243 7691 7698
type(
  Tla_parser.Token.token_ -> preno option
)
"p_parser.ml" 233 7439 7443 "p_parser.ml" 243 7691 7698
type(
  (Tla_parser.pcx, preno) Tla_parser.P.prs
)
"p_parser.ml" 245 7700 7706 "p_parser.ml" 245 7700 7710
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  def only "p_parser.ml" 249 7780 7782 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 246 7713 7717 "p_parser.ml" 246 7713 7723
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs list ->
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 246 7713 7726 "p_parser.ml" 246 7713 7729
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 246 7713 7730 "p_parser.ml" 246 7713 7736
type(
  string
)
"p_parser.ml" 246 7713 7726 "p_parser.ml" 246 7713 7736
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 246 7713 7737 "p_parser.ml" 246 7713 7740
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  only -> (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <!> ) "pars.mli" 96 3473 3477 "pars.mli" 96 3473 3525
)
"p_parser.ml" 246 7713 7741 "p_parser.ml" 246 7713 7745
type(
  only
)
"p_parser.ml" 246 7713 7726 "p_parser.ml" 246 7713 7745
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
"p_parser.ml" 247 7748 7761 "p_parser.ml" 247 7748 7768
type(
  only -> (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.succeed "pars.mli" 73 2251 2255 "pars.mli" 73 2251 2287
)
"p_parser.ml" 247 7748 7769 "p_parser.ml" 247 7748 7776
type(
  only
)
"p_parser.ml" 247 7748 7761 "p_parser.ml" 247 7748 7776
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
"p_parser.ml" 246 7713 7724 "p_parser.ml" 247 7748 7778
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs list
)
"p_parser.ml" 246 7713 7717 "p_parser.ml" 247 7748 7778
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
"p_parser.ml" 249 7780 7786 "p_parser.ml" 249 7780 7795
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs
)
ident(
  def proof_kwd "p_parser.ml" 253 7864 7866 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 250 7798 7802 "p_parser.ml" 250 7798 7808
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs list ->
  (Tla_parser.pcx, bool) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 250 7798 7811 "p_parser.ml" 250 7798 7814
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 250 7798 7815 "p_parser.ml" 250 7798 7822
type(
  string
)
"p_parser.ml" 250 7798 7811 "p_parser.ml" 250 7798 7822
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 250 7798 7823 "p_parser.ml" 250 7798 7826
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  bool -> (Tla_parser.pcx, bool) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <!> ) "pars.mli" 96 3473 3477 "pars.mli" 96 3473 3525
)
"p_parser.ml" 250 7798 7827 "p_parser.ml" 250 7798 7831
type(
  bool
)
"p_parser.ml" 250 7798 7811 "p_parser.ml" 250 7798 7831
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs
)
"p_parser.ml" 251 7834 7847 "p_parser.ml" 251 7834 7854
type(
  bool -> (Tla_parser.pcx, bool) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.succeed "pars.mli" 73 2251 2255 "pars.mli" 73 2251 2287
)
"p_parser.ml" 251 7834 7855 "p_parser.ml" 251 7834 7860
type(
  bool
)
"p_parser.ml" 251 7834 7847 "p_parser.ml" 251 7834 7860
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs
)
"p_parser.ml" 250 7798 7809 "p_parser.ml" 251 7834 7862
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs list
)
"p_parser.ml" 250 7798 7802 "p_parser.ml" 251 7834 7862
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs
)
"p_parser.ml" 253 7864 7870 "p_parser.ml" 253 7864 7877
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs lazy_t
)
ident(
  def sequent "p_parser.ml" 260 8033 8035 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 254 7891 7895 "p_parser.ml" 254 7891 7901
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs list ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 255 7904 7910 "p_parser.ml" 255 7904 7913
type(
  Expr.T.sequent Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 255 7904 7915 "p_parser.ml" 255 7904 7934
type(
  bool -> Expr.T.sequent Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.sequent "expr.mli" 672 17205 17209 "expr.mli" 672 17205 17244
)
"p_parser.ml" 255 7904 7935 "p_parser.ml" 255 7904 7940
type(
  bool
)
"p_parser.ml" 255 7904 7914 "p_parser.ml" 255 7904 7941
type(
  Expr.T.sequent Tla_parser.lprs
)
"p_parser.ml" 255 7904 7910 "p_parser.ml" 255 7904 7941
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
"p_parser.ml" 256 7943 7949 "p_parser.ml" 256 7943 7952
type(
  Expr.T.expr Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 256 7943 7954 "p_parser.ml" 256 7943 7958
type(
  bool -> Expr.T.expr Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.expr "expr.mli" 668 17053 17057 "expr.mli" 668 17053 17086
)
"p_parser.ml" 256 7943 7959 "p_parser.ml" 256 7943 7964
type(
  bool
)
"p_parser.ml" 256 7943 7953 "p_parser.ml" 256 7943 7965
type(
  Expr.T.expr Tla_parser.lprs
)
"p_parser.ml" 256 7943 7949 "p_parser.ml" 256 7943 7965
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 256 7943 7966 "p_parser.ml" 256 7943 7969
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Expr.T.expr -> Expr.T.sequent) ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 256 7943 7975 "p_parser.ml" 256 7943 7976
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 256 7943 7980 "p_parser.ml" 256 7943 8018
)
"p_parser.ml" 256 7943 7992 "p_parser.ml" 256 7943 8003
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"p_parser.ml" 256 7943 8015 "p_parser.ml" 256 7943 8016
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 256 7943 7975 "p_parser.ml" 256 7943 7976
)
"p_parser.ml" 256 7943 7980 "p_parser.ml" 256 7943 8018
type(
  Expr.T.sequent
)
"p_parser.ml" 256 7943 7970 "p_parser.ml" 256 7943 8019
type(
  Expr.T.expr -> Expr.T.sequent
)
"p_parser.ml" 256 7943 7949 "p_parser.ml" 256 7943 8019
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
"p_parser.ml" 254 7891 7902 "p_parser.ml" 257 8020 8025
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs list
)
"p_parser.ml" 253 7864 7885 "p_parser.ml" 258 8026 8031
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
"p_parser.ml" 253 7864 7880 "p_parser.ml" 258 8026 8031
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs lazy_t
)
"p_parser.ml" 260 8033 8043 "p_parser.ml" 260 8033 8051
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs lazy_t
)
ident(
  def preproof "p_parser.ml" 260 8033 8035 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 261 8065 8069 "p_parser.ml" 261 8065 8078
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs
)
ident(
  int_ref proof_kwd "p_parser.ml" 249 7780 7786 "p_parser.ml" 249 7780 7795
)
"p_parser.ml" 261 8065 8079 "p_parser.ml" 261 8065 8082
type(
  (Tla_parser.pcx, bool) Tla_parser.P.prs ->
  (bool -> (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs) ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>= ) "pars.mli" 91 3152 3156 "pars.mli" 91 3152 3222
)
"p_parser.ml" 261 8065 8087 "p_parser.ml" 261 8065 8089
type(
  bool
)
ident(
  def pk "p_parser.ml" 262 8093 8099 "p_parser.ml" 281 8682 8689
)
"p_parser.ml" 262 8093 8099 "p_parser.ml" 262 8093 8105
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs list ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 263 8108 8116 "p_parser.ml" 263 8108 8119
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 263 8108 8120 "p_parser.ml" 263 8108 8128
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref suppress "p_parser.ml" 225 7289 7295 "p_parser.ml" 225 7289 7303
)
"p_parser.ml" 263 8108 8116 "p_parser.ml" 263 8108 8128
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
"p_parser.ml" 263 8108 8129 "p_parser.ml" 263 8108 8132
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs ->
  (supp -> (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs) ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>= ) "pars.mli" 91 3152 3156 "pars.mli" 91 3152 3222
)
"p_parser.ml" 263 8108 8143 "p_parser.ml" 263 8108 8147
type(
  supp
)
ident(
  def supp "p_parser.ml" 264 8151 8161 "p_parser.ml" 272 8472 8483
)
"p_parser.ml" 264 8151 8161 "p_parser.ml" 264 8151 8167
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs list ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 265 8170 8182 "p_parser.ml" 265 8170 8188
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.locate "tla_parser.mli" 46 1196 1196 "tla_parser.mli" 47 1226 1261
)
"p_parser.ml" 265 8170 8190 "p_parser.ml" 265 8170 8193
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 265 8170 8194 "p_parser.ml" 265 8170 8198
type(
  string
)
"p_parser.ml" 265 8170 8189 "p_parser.ml" 265 8170 8199
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 265 8170 8182 "p_parser.ml" 265 8170 8199
type(
  (Tla_parser.pcx, string Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 265 8170 8200 "p_parser.ml" 265 8170 8204
type(
  (Tla_parser.pcx, string Property.wrapped) Tla_parser.P.prs ->
  (Tla_parser.pcx, only) Tla_parser.P.prs ->
  (Tla_parser.pcx, string Property.wrapped * only) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <**> ) "pars.mli" 90 3083 3087 "pars.mli" 90 3083 3151
)
"p_parser.ml" 265 8170 8205 "p_parser.ml" 265 8170 8209
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  int_ref only "p_parser.ml" 245 7700 7706 "p_parser.ml" 245 7700 7710
)
"p_parser.ml" 265 8170 8182 "p_parser.ml" 265 8170 8209
type(
  (Tla_parser.pcx, string Property.wrapped * only) Tla_parser.P.prs
)
"p_parser.ml" 265 8170 8210 "p_parser.ml" 265 8170 8214
type(
  (Tla_parser.pcx, string Property.wrapped * only) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs ->
  (Tla_parser.pcx, (string Property.wrapped * only) * P_t.usable)
  Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <**> ) "pars.mli" 90 3083 3087 "pars.mli" 90 3083 3151
)
"p_parser.ml" 265 8170 8215 "p_parser.ml" 265 8170 8218
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 265 8170 8219 "p_parser.ml" 265 8170 8226
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref usebody "p_parser.ml" 333 10369 10375 "p_parser.ml" 333 10369 10382
)
"p_parser.ml" 265 8170 8215 "p_parser.ml" 265 8170 8226
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 265 8170 8182 "p_parser.ml" 265 8170 8226
type(
  (Tla_parser.pcx, (string Property.wrapped * only) * P_t.usable)
  Tla_parser.P.prs
)
"p_parser.ml" 265 8170 8227 "p_parser.ml" 265 8170 8230
type(
  (Tla_parser.pcx, (string Property.wrapped * only) * P_t.usable)
  Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Tla_parser.pcx,
   ((string Property.wrapped * only) * P_t.usable) * Method.t option)
  Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <*> ) "pars.mli" 88 2968 2972 "pars.mli" 88 2968 3036
)
"p_parser.ml" 265 8170 8231 "p_parser.ml" 265 8170 8242
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref read_method "p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
)
"p_parser.ml" 265 8170 8182 "p_parser.ml" 265 8170 8242
type(
  (Tla_parser.pcx,
   ((string Property.wrapped * only) * P_t.usable) * Method.t option)
  Tla_parser.P.prs
)
"p_parser.ml" 266 8243 8255 "p_parser.ml" 266 8243 8258
type(
  (Tla_parser.pcx,
   ((string Property.wrapped * only) * P_t.usable) * Method.t option)
  Tla_parser.P.prs ->
  (((string Property.wrapped * only) * P_t.usable) * Method.t option ->
   preproof_ Property.wrapped) ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 266 8243 8267 "p_parser.ml" 266 8243 8269
type(
  string Property.wrapped
)
ident(
  def by "p_parser.ml" 266 8243 8291 "p_parser.ml" 266 8243 8324
)
"p_parser.ml" 266 8243 8271 "p_parser.ml" 266 8243 8274
type(
  only
)
ident(
  def onl "p_parser.ml" 266 8243 8291 "p_parser.ml" 266 8243 8324
)
"p_parser.ml" 266 8243 8266 "p_parser.ml" 266 8243 8275
type(
  string Property.wrapped * only
)
"p_parser.ml" 266 8243 8277 "p_parser.ml" 266 8243 8279
type(
  P_t.usable
)
ident(
  def us "p_parser.ml" 266 8243 8291 "p_parser.ml" 266 8243 8324
)
"p_parser.ml" 266 8243 8265 "p_parser.ml" 266 8243 8280
type(
  (string Property.wrapped * only) * P_t.usable
)
"p_parser.ml" 266 8243 8282 "p_parser.ml" 266 8243 8286
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 266 8243 8291 "p_parser.ml" 266 8243 8324
)
"p_parser.ml" 266 8243 8264 "p_parser.ml" 266 8243 8287
type(
  ((string Property.wrapped * only) * P_t.usable) * Method.t option
)
"p_parser.ml" 266 8243 8298 "p_parser.ml" 266 8243 8302
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 263 8108 8143 "p_parser.ml" 263 8108 8147
)
"p_parser.ml" 266 8243 8304 "p_parser.ml" 266 8243 8307
type(
  only
)
ident(
  int_ref onl "p_parser.ml" 266 8243 8271 "p_parser.ml" 266 8243 8274
)
"p_parser.ml" 266 8243 8309 "p_parser.ml" 266 8243 8311
type(
  P_t.usable
)
ident(
  int_ref us "p_parser.ml" 266 8243 8277 "p_parser.ml" 266 8243 8279
)
"p_parser.ml" 266 8243 8313 "p_parser.ml" 266 8243 8317
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 266 8243 8282 "p_parser.ml" 266 8243 8286
)
"p_parser.ml" 266 8243 8291 "p_parser.ml" 266 8243 8318
type(
  preproof_
)
"p_parser.ml" 266 8243 8319 "p_parser.ml" 266 8243 8321
type(
  preproof_ -> string Property.wrapped -> preproof_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"p_parser.ml" 266 8243 8322 "p_parser.ml" 266 8243 8324
type(
  string Property.wrapped
)
ident(
  int_ref by "p_parser.ml" 266 8243 8267 "p_parser.ml" 266 8243 8269
)
"p_parser.ml" 266 8243 8291 "p_parser.ml" 266 8243 8324
type(
  preproof_ Property.wrapped
)
"p_parser.ml" 266 8243 8259 "p_parser.ml" 266 8243 8325
type(
  ((string Property.wrapped * only) * P_t.usable) * Method.t option ->
  preproof_ Property.wrapped
)
"p_parser.ml" 265 8170 8182 "p_parser.ml" 266 8243 8325
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 268 8329 8341 "p_parser.ml" 268 8329 8347
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.locate "tla_parser.mli" 46 1196 1196 "tla_parser.mli" 47 1226 1261
)
"p_parser.ml" 269 8354 8368 "p_parser.ml" 269 8354 8371
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 269 8354 8372 "p_parser.ml" 269 8354 8381
type(
  string
)
"p_parser.ml" 269 8354 8368 "p_parser.ml" 269 8354 8381
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 269 8354 8382 "p_parser.ml" 269 8354 8385
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>> ) "pars.mli" 92 3223 3227 "pars.mli" 92 3223 3285
)
"p_parser.ml" 269 8354 8386 "p_parser.ml" 269 8354 8397
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref read_method "p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
)
"p_parser.ml" 269 8354 8368 "p_parser.ml" 269 8354 8397
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
"p_parser.ml" 270 8398 8412 "p_parser.ml" 270 8398 8415
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Method.t option -> preproof_) ->
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 270 8398 8421 "p_parser.ml" 270 8398 8425
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 270 8398 8429 "p_parser.ml" 270 8398 8452
)
"p_parser.ml" 270 8398 8441 "p_parser.ml" 270 8398 8445
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 263 8108 8143 "p_parser.ml" 263 8108 8147
)
"p_parser.ml" 270 8398 8447 "p_parser.ml" 270 8398 8451
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 270 8398 8421 "p_parser.ml" 270 8398 8425
)
"p_parser.ml" 270 8398 8429 "p_parser.ml" 270 8398 8452
type(
  preproof_
)
"p_parser.ml" 270 8398 8416 "p_parser.ml" 270 8398 8453
type(
  Method.t option -> preproof_
)
"p_parser.ml" 268 8329 8348 "p_parser.ml" 271 8454 8469
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
"p_parser.ml" 268 8329 8341 "p_parser.ml" 271 8454 8469
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 264 8151 8168 "p_parser.ml" 272 8472 8483
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs list
)
"p_parser.ml" 264 8151 8161 "p_parser.ml" 272 8472 8483
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 263 8108 8133 "p_parser.ml" 273 8484 8495
type(
  supp -> (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 263 8108 8116 "p_parser.ml" 273 8484 8495
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 275 8499 8507 "p_parser.ml" 275 8499 8513
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.locate "tla_parser.mli" 46 1196 1196 "tla_parser.mli" 47 1226 1261
)
"p_parser.ml" 275 8499 8515 "p_parser.ml" 275 8499 8518
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 275 8499 8519 "p_parser.ml" 275 8499 8528
type(
  string
)
"p_parser.ml" 275 8499 8515 "p_parser.ml" 275 8499 8528
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 275 8499 8529 "p_parser.ml" 275 8499 8532
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  preproof_ -> (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <!> ) "pars.mli" 96 3473 3477 "pars.mli" 96 3473 3525
)
"p_parser.ml" 275 8499 8545 "p_parser.ml" 275 8499 8553
type(
  P_t.omission
)
"p_parser.ml" 275 8499 8533 "p_parser.ml" 275 8499 8554
type(
  preproof_
)
"p_parser.ml" 275 8499 8514 "p_parser.ml" 275 8499 8555
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
"p_parser.ml" 275 8499 8507 "p_parser.ml" 275 8499 8555
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 277 8559 8567 "p_parser.ml" 277 8559 8573
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.locate "tla_parser.mli" 46 1196 1196 "tla_parser.mli" 47 1226 1261
)
"p_parser.ml" 278 8580 8590 "p_parser.ml" 278 8580 8595
type(
  (Tla_parser.pcx, preno) Tla_parser.P.prs
)
ident(
  int_ref preno "p_parser.ml" 232 7425 7431 "p_parser.ml" 232 7425 7436
)
"p_parser.ml" 278 8580 8596 "p_parser.ml" 278 8580 8600
type(
  (Tla_parser.pcx, preno) Tla_parser.P.prs ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs ->
  (Tla_parser.pcx, preno * prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <**> ) "pars.mli" 90 3083 3087 "pars.mli" 90 3083 3151
)
"p_parser.ml" 278 8580 8601 "p_parser.ml" 278 8580 8604
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 278 8580 8605 "p_parser.ml" 278 8580 8612
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref prestep "p_parser.ml" 284 8697 8703 "p_parser.ml" 284 8697 8710
)
"p_parser.ml" 278 8580 8601 "p_parser.ml" 278 8580 8612
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 278 8580 8590 "p_parser.ml" 278 8580 8612
type(
  (Tla_parser.pcx, preno * prestep) Tla_parser.P.prs
)
"p_parser.ml" 279 8613 8623 "p_parser.ml" 279 8613 8626
type(
  (Tla_parser.pcx, preno * prestep) Tla_parser.P.prs ->
  (preno * prestep -> preproof_) ->
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 279 8613 8633 "p_parser.ml" 279 8613 8635
type(
  preno
)
ident(
  def pn "p_parser.ml" 279 8613 8645 "p_parser.ml" 279 8613 8666
)
"p_parser.ml" 279 8613 8637 "p_parser.ml" 279 8613 8640
type(
  prestep
)
ident(
  def stp "p_parser.ml" 279 8613 8645 "p_parser.ml" 279 8613 8666
)
"p_parser.ml" 279 8613 8632 "p_parser.ml" 279 8613 8641
type(
  preno * prestep
)
"p_parser.ml" 279 8613 8654 "p_parser.ml" 279 8613 8656
type(
  bool
)
ident(
  int_ref pk "p_parser.ml" 261 8065 8087 "p_parser.ml" 261 8065 8089
)
"p_parser.ml" 279 8613 8658 "p_parser.ml" 279 8613 8660
type(
  preno
)
ident(
  int_ref pn "p_parser.ml" 279 8613 8633 "p_parser.ml" 279 8613 8635
)
"p_parser.ml" 279 8613 8662 "p_parser.ml" 279 8613 8665
type(
  prestep
)
ident(
  int_ref stp "p_parser.ml" 279 8613 8637 "p_parser.ml" 279 8613 8640
)
"p_parser.ml" 279 8613 8645 "p_parser.ml" 279 8613 8666
type(
  preproof_
)
"p_parser.ml" 279 8613 8627 "p_parser.ml" 279 8613 8667
type(
  preno * prestep -> preproof_
)
"p_parser.ml" 277 8559 8574 "p_parser.ml" 280 8668 8679
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
"p_parser.ml" 277 8559 8567 "p_parser.ml" 280 8668 8679
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 262 8093 8106 "p_parser.ml" 281 8682 8689
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs list
)
"p_parser.ml" 262 8093 8099 "p_parser.ml" 281 8682 8689
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 261 8065 8083 "p_parser.ml" 281 8682 8689
type(
  bool -> (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 260 8033 8059 "p_parser.ml" 282 8690 8695
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 260 8033 8054 "p_parser.ml" 282 8690 8695
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs lazy_t
)
"p_parser.ml" 284 8697 8703 "p_parser.ml" 284 8697 8710
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs Lazy.t
)
ident(
  def prestep "p_parser.ml" 260 8033 8035 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 285 8724 8728 "p_parser.ml" 285 8724 8734
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs list ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 286 8737 8743 "p_parser.ml" 286 8737 8746
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 286 8737 8747 "p_parser.ml" 286 8737 8752
type(
  string
)
"p_parser.ml" 286 8737 8743 "p_parser.ml" 286 8737 8752
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 286 8737 8753 "p_parser.ml" 286 8737 8756
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  prestep -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <!> ) "pars.mli" 96 3473 3477 "pars.mli" 96 3473 3525
)
"p_parser.ml" 286 8737 8757 "p_parser.ml" 286 8737 8763
type(
  prestep
)
"p_parser.ml" 286 8737 8743 "p_parser.ml" 286 8737 8763
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 288 8767 8773 "p_parser.ml" 288 8767 8776
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 288 8767 8777 "p_parser.ml" 288 8767 8783
type(
  string
)
"p_parser.ml" 288 8767 8773 "p_parser.ml" 288 8767 8783
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 288 8767 8784 "p_parser.ml" 288 8767 8787
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 288 8767 8788 "p_parser.ml" 288 8767 8791
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 288 8767 8792 "p_parser.ml" 288 8767 8799
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref usebody "p_parser.ml" 333 10369 10375 "p_parser.ml" 333 10369 10382
)
"p_parser.ml" 288 8767 8788 "p_parser.ml" 288 8767 8799
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 288 8767 8773 "p_parser.ml" 288 8767 8799
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 288 8767 8800 "p_parser.ml" 288 8767 8803
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs ->
  (P_t.usable -> prestep) -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 288 8767 8809 "p_parser.ml" 288 8767 8811
type(
  P_t.usable
)
ident(
  def us "p_parser.ml" 288 8767 8815 "p_parser.ml" 288 8767 8825
)
"p_parser.ml" 288 8767 8823 "p_parser.ml" 288 8767 8825
type(
  P_t.usable
)
ident(
  int_ref us "p_parser.ml" 288 8767 8809 "p_parser.ml" 288 8767 8811
)
"p_parser.ml" 288 8767 8815 "p_parser.ml" 288 8767 8825
type(
  prestep
)
"p_parser.ml" 288 8767 8804 "p_parser.ml" 288 8767 8826
type(
  P_t.usable -> prestep
)
"p_parser.ml" 288 8767 8773 "p_parser.ml" 288 8767 8826
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 290 8830 8836 "p_parser.ml" 290 8830 8839
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 290 8830 8840 "p_parser.ml" 290 8830 8850
type(
  string
)
"p_parser.ml" 290 8830 8836 "p_parser.ml" 290 8830 8850
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 290 8830 8851 "p_parser.ml" 290 8830 8854
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 290 8830 8855 "p_parser.ml" 290 8830 8858
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 290 8830 8859 "p_parser.ml" 290 8830 8866
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref sequent "p_parser.ml" 253 7864 7870 "p_parser.ml" 253 7864 7877
)
"p_parser.ml" 290 8830 8855 "p_parser.ml" 290 8830 8866
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
"p_parser.ml" 290 8830 8836 "p_parser.ml" 290 8830 8866
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
"p_parser.ml" 290 8830 8867 "p_parser.ml" 290 8830 8870
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs ->
  (Expr.T.sequent -> prestep) -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 290 8830 8876 "p_parser.ml" 290 8830 8878
type(
  Expr.T.sequent
)
ident(
  def sq "p_parser.ml" 290 8830 8882 "p_parser.ml" 290 8830 8896
)
"p_parser.ml" 290 8830 8894 "p_parser.ml" 290 8830 8896
type(
  Expr.T.sequent
)
ident(
  int_ref sq "p_parser.ml" 290 8830 8876 "p_parser.ml" 290 8830 8878
)
"p_parser.ml" 290 8830 8882 "p_parser.ml" 290 8830 8896
type(
  prestep
)
"p_parser.ml" 290 8830 8871 "p_parser.ml" 290 8830 8897
type(
  Expr.T.sequent -> prestep
)
"p_parser.ml" 290 8830 8836 "p_parser.ml" 290 8830 8897
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 292 8901 8907 "p_parser.ml" 292 8901 8910
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 292 8901 8911 "p_parser.ml" 292 8901 8917
type(
  string
)
"p_parser.ml" 292 8901 8907 "p_parser.ml" 292 8901 8917
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 292 8901 8918 "p_parser.ml" 292 8901 8921
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 292 8901 8922 "p_parser.ml" 292 8901 8925
type(
  Expr.T.expr Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 292 8901 8927 "p_parser.ml" 292 8901 8931
type(
  bool -> Expr.T.expr Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.expr "expr.mli" 668 17053 17057 "expr.mli" 668 17053 17086
)
"p_parser.ml" 292 8901 8932 "p_parser.ml" 292 8901 8937
type(
  bool
)
"p_parser.ml" 292 8901 8926 "p_parser.ml" 292 8901 8938
type(
  Expr.T.expr Tla_parser.lprs
)
"p_parser.ml" 292 8901 8922 "p_parser.ml" 292 8901 8938
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 292 8901 8907 "p_parser.ml" 292 8901 8938
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 292 8901 8939 "p_parser.ml" 292 8901 8942
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Expr.T.expr -> prestep) -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 292 8901 8948 "p_parser.ml" 292 8901 8949
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 292 8901 8953 "p_parser.ml" 292 8901 8962
)
"p_parser.ml" 292 8901 8961 "p_parser.ml" 292 8901 8962
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 292 8901 8948 "p_parser.ml" 292 8901 8949
)
"p_parser.ml" 292 8901 8953 "p_parser.ml" 292 8901 8962
type(
  prestep
)
"p_parser.ml" 292 8901 8943 "p_parser.ml" 292 8901 8963
type(
  Expr.T.expr -> prestep
)
"p_parser.ml" 292 8901 8907 "p_parser.ml" 292 8901 8963
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 8973 "p_parser.ml" 294 8967 8976
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 294 8967 8977 "p_parser.ml" 294 8967 8983
type(
  string
)
"p_parser.ml" 294 8967 8973 "p_parser.ml" 294 8967 8983
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 8984 "p_parser.ml" 294 8967 8987
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 294 8967 8988 "p_parser.ml" 294 8967 8991
type(
  Expr.T.bound list Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 294 8967 8993 "p_parser.ml" 294 8967 8999
type(
  bool -> Expr.T.bound list Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.bounds "expr.mli" 669 17087 17091 "expr.mli" 669 17087 17128
)
"p_parser.ml" 294 8967 9000 "p_parser.ml" 294 8967 9005
type(
  bool
)
"p_parser.ml" 294 8967 8992 "p_parser.ml" 294 8967 9006
type(
  Expr.T.bound list Tla_parser.lprs
)
"p_parser.ml" 294 8967 8988 "p_parser.ml" 294 8967 9006
type(
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 8973 "p_parser.ml" 294 8967 9006
type(
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 9007 "p_parser.ml" 294 8967 9011
type(
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.bound list * Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <**> ) "pars.mli" 90 3083 3087 "pars.mli" 90 3083 3151
)
"p_parser.ml" 294 8967 9013 "p_parser.ml" 294 8967 9018
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.punct "tla_parser.mli" 50 1338 1338 "tla_parser.mli" 50 1338 1378
)
"p_parser.ml" 294 8967 9019 "p_parser.ml" 294 8967 9022
type(
  string
)
"p_parser.ml" 294 8967 9013 "p_parser.ml" 294 8967 9022
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 9023 "p_parser.ml" 294 8967 9026
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>> ) "pars.mli" 92 3223 3227 "pars.mli" 92 3223 3285
)
"p_parser.ml" 294 8967 9027 "p_parser.ml" 294 8967 9030
type(
  Expr.T.expr Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 294 8967 9032 "p_parser.ml" 294 8967 9036
type(
  bool -> Expr.T.expr Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.expr "expr.mli" 668 17053 17057 "expr.mli" 668 17053 17086
)
"p_parser.ml" 294 8967 9037 "p_parser.ml" 294 8967 9042
type(
  bool
)
"p_parser.ml" 294 8967 9031 "p_parser.ml" 294 8967 9043
type(
  Expr.T.expr Tla_parser.lprs
)
"p_parser.ml" 294 8967 9027 "p_parser.ml" 294 8967 9043
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 9012 "p_parser.ml" 294 8967 9044
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 294 8967 8973 "p_parser.ml" 294 8967 9044
type(
  (Tla_parser.pcx, Expr.T.bound list * Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 295 9045 9051 "p_parser.ml" 295 9045 9054
type(
  (Tla_parser.pcx, Expr.T.bound list * Expr.T.expr) Tla_parser.P.prs ->
  (Expr.T.bound list * Expr.T.expr -> prestep) ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 295 9045 9061 "p_parser.ml" 295 9045 9063
type(
  Expr.T.bound list
)
ident(
  def bs "p_parser.ml" 295 9045 9071 "p_parser.ml" 295 9045 9086
)
"p_parser.ml" 295 9045 9065 "p_parser.ml" 295 9045 9066
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 295 9045 9071 "p_parser.ml" 295 9045 9086
)
"p_parser.ml" 295 9045 9060 "p_parser.ml" 295 9045 9067
type(
  Expr.T.bound list * Expr.T.expr
)
"p_parser.ml" 295 9045 9080 "p_parser.ml" 295 9045 9082
type(
  Expr.T.bound list
)
ident(
  int_ref bs "p_parser.ml" 295 9045 9061 "p_parser.ml" 295 9045 9063
)
"p_parser.ml" 295 9045 9084 "p_parser.ml" 295 9045 9085
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 295 9045 9065 "p_parser.ml" 295 9045 9066
)
"p_parser.ml" 295 9045 9071 "p_parser.ml" 295 9045 9086
type(
  prestep
)
"p_parser.ml" 295 9045 9055 "p_parser.ml" 295 9045 9087
type(
  Expr.T.bound list * Expr.T.expr -> prestep
)
"p_parser.ml" 294 8967 8973 "p_parser.ml" 295 9045 9087
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 297 9091 9097 "p_parser.ml" 297 9091 9100
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 297 9091 9101 "p_parser.ml" 297 9091 9109
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref suppress "p_parser.ml" 225 7289 7295 "p_parser.ml" 225 7289 7303
)
"p_parser.ml" 297 9091 9097 "p_parser.ml" 297 9091 9109
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs
)
"p_parser.ml" 297 9091 9110 "p_parser.ml" 297 9091 9113
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs ->
  (supp -> (Tla_parser.pcx, prestep) Tla_parser.P.prs) ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>= ) "pars.mli" 91 3152 3156 "pars.mli" 91 3152 3222
)
"p_parser.ml" 297 9091 9124 "p_parser.ml" 297 9091 9128
type(
  supp
)
ident(
  def supp "p_parser.ml" 298 9132 9140 "p_parser.ml" 310 9667 9676
)
"p_parser.ml" 298 9132 9140 "p_parser.ml" 298 9132 9146
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs list ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 299 9149 9159 "p_parser.ml" 299 9149 9162
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 299 9149 9163 "p_parser.ml" 299 9149 9168
type(
  string
)
"p_parser.ml" 299 9149 9159 "p_parser.ml" 299 9149 9168
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 299 9149 9169 "p_parser.ml" 299 9149 9172
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, only) Tla_parser.P.prs ->
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 299 9149 9173 "p_parser.ml" 299 9149 9177
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
ident(
  int_ref only "p_parser.ml" 245 7700 7706 "p_parser.ml" 245 7700 7710
)
"p_parser.ml" 299 9149 9159 "p_parser.ml" 299 9149 9177
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs
)
"p_parser.ml" 299 9149 9178 "p_parser.ml" 299 9149 9181
type(
  (Tla_parser.pcx, only) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs ->
  (Tla_parser.pcx, only * P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <*> ) "pars.mli" 88 2968 2972 "pars.mli" 88 2968 3036
)
"p_parser.ml" 299 9149 9182 "p_parser.ml" 299 9149 9185
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 299 9149 9186 "p_parser.ml" 299 9149 9193
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref usebody "p_parser.ml" 333 10369 10375 "p_parser.ml" 333 10369 10382
)
"p_parser.ml" 299 9149 9182 "p_parser.ml" 299 9149 9193
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 299 9149 9159 "p_parser.ml" 299 9149 9193
type(
  (Tla_parser.pcx, only * P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 299 9149 9194 "p_parser.ml" 299 9149 9197
type(
  (Tla_parser.pcx, only * P_t.usable) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Tla_parser.pcx, (only * P_t.usable) * Method.t option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <*> ) "pars.mli" 88 2968 2972 "pars.mli" 88 2968 3036
)
"p_parser.ml" 299 9149 9198 "p_parser.ml" 299 9149 9209
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref read_method "p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
)
"p_parser.ml" 299 9149 9159 "p_parser.ml" 299 9149 9209
type(
  (Tla_parser.pcx, (only * P_t.usable) * Method.t option) Tla_parser.P.prs
)
"p_parser.ml" 300 9210 9220 "p_parser.ml" 300 9210 9223
type(
  (Tla_parser.pcx, (only * P_t.usable) * Method.t option) Tla_parser.P.prs ->
  ((only * P_t.usable) * Method.t option -> prestep) ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 300 9210 9231 "p_parser.ml" 300 9210 9234
type(
  only
)
ident(
  def onl "p_parser.ml" 300 9210 9250 "p_parser.ml" 300 9210 9278
)
"p_parser.ml" 300 9210 9236 "p_parser.ml" 300 9210 9238
type(
  P_t.usable
)
ident(
  def us "p_parser.ml" 300 9210 9250 "p_parser.ml" 300 9210 9278
)
"p_parser.ml" 300 9210 9230 "p_parser.ml" 300 9210 9239
type(
  only * P_t.usable
)
"p_parser.ml" 300 9210 9241 "p_parser.ml" 300 9210 9245
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 300 9210 9250 "p_parser.ml" 300 9210 9278
)
"p_parser.ml" 300 9210 9229 "p_parser.ml" 300 9210 9246
type(
  (only * P_t.usable) * Method.t option
)
"p_parser.ml" 300 9210 9258 "p_parser.ml" 300 9210 9262
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 297 9091 9124 "p_parser.ml" 297 9091 9128
)
"p_parser.ml" 300 9210 9264 "p_parser.ml" 300 9210 9267
type(
  only
)
ident(
  int_ref onl "p_parser.ml" 300 9210 9231 "p_parser.ml" 300 9210 9234
)
"p_parser.ml" 300 9210 9269 "p_parser.ml" 300 9210 9271
type(
  P_t.usable
)
ident(
  int_ref us "p_parser.ml" 300 9210 9236 "p_parser.ml" 300 9210 9238
)
"p_parser.ml" 300 9210 9273 "p_parser.ml" 300 9210 9277
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 300 9210 9241 "p_parser.ml" 300 9210 9245
)
"p_parser.ml" 300 9210 9250 "p_parser.ml" 300 9210 9278
type(
  prestep
)
"p_parser.ml" 300 9210 9224 "p_parser.ml" 300 9210 9279
type(
  (only * P_t.usable) * Method.t option -> prestep
)
"p_parser.ml" 299 9149 9159 "p_parser.ml" 300 9210 9279
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 302 9283 9293 "p_parser.ml" 302 9283 9296
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 302 9283 9297 "p_parser.ml" 302 9283 9303
type(
  string
)
"p_parser.ml" 302 9283 9293 "p_parser.ml" 302 9283 9303
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 302 9283 9304 "p_parser.ml" 302 9283 9307
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 302 9283 9308 "p_parser.ml" 302 9283 9311
type(
  Expr.T.expr Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 302 9283 9313 "p_parser.ml" 302 9283 9317
type(
  bool -> Expr.T.expr Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.expr "expr.mli" 668 17053 17057 "expr.mli" 668 17053 17086
)
"p_parser.ml" 302 9283 9318 "p_parser.ml" 302 9283 9323
type(
  bool
)
"p_parser.ml" 302 9283 9312 "p_parser.ml" 302 9283 9324
type(
  Expr.T.expr Tla_parser.lprs
)
"p_parser.ml" 302 9283 9308 "p_parser.ml" 302 9283 9324
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 302 9283 9293 "p_parser.ml" 302 9283 9324
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 302 9283 9325 "p_parser.ml" 302 9283 9328
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr * Method.t option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <*> ) "pars.mli" 88 2968 2972 "pars.mli" 88 2968 3036
)
"p_parser.ml" 302 9283 9329 "p_parser.ml" 302 9283 9340
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref read_method "p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
)
"p_parser.ml" 302 9283 9293 "p_parser.ml" 302 9283 9340
type(
  (Tla_parser.pcx, Expr.T.expr * Method.t option) Tla_parser.P.prs
)
"p_parser.ml" 303 9341 9351 "p_parser.ml" 303 9341 9354
type(
  (Tla_parser.pcx, Expr.T.expr * Method.t option) Tla_parser.P.prs ->
  (Expr.T.expr * Method.t option -> prestep) ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 303 9341 9361 "p_parser.ml" 303 9341 9362
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 303 9341 9373 "p_parser.ml" 303 9341 9396
)
"p_parser.ml" 303 9341 9364 "p_parser.ml" 303 9341 9368
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 303 9341 9373 "p_parser.ml" 303 9341 9396
)
"p_parser.ml" 303 9341 9360 "p_parser.ml" 303 9341 9369
type(
  Expr.T.expr * Method.t option
)
"p_parser.ml" 303 9341 9382 "p_parser.ml" 303 9341 9386
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 297 9091 9124 "p_parser.ml" 297 9091 9128
)
"p_parser.ml" 303 9341 9388 "p_parser.ml" 303 9341 9389
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 303 9341 9361 "p_parser.ml" 303 9341 9362
)
"p_parser.ml" 303 9341 9391 "p_parser.ml" 303 9341 9395
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 303 9341 9364 "p_parser.ml" 303 9341 9368
)
"p_parser.ml" 303 9341 9373 "p_parser.ml" 303 9341 9396
type(
  prestep
)
"p_parser.ml" 303 9341 9355 "p_parser.ml" 303 9341 9397
type(
  Expr.T.expr * Method.t option -> prestep
)
"p_parser.ml" 302 9283 9293 "p_parser.ml" 303 9341 9397
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 305 9401 9411 "p_parser.ml" 305 9401 9414
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 305 9401 9415 "p_parser.ml" 305 9401 9421
type(
  string
)
"p_parser.ml" 305 9401 9411 "p_parser.ml" 305 9401 9421
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 305 9401 9422 "p_parser.ml" 305 9401 9425
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 305 9401 9426 "p_parser.ml" 305 9401 9429
type(
  Expr.T.bound list Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 305 9401 9431 "p_parser.ml" 305 9401 9437
type(
  bool -> Expr.T.bound list Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.bounds "expr.mli" 669 17087 17091 "expr.mli" 669 17087 17128
)
"p_parser.ml" 305 9401 9438 "p_parser.ml" 305 9401 9443
type(
  bool
)
"p_parser.ml" 305 9401 9430 "p_parser.ml" 305 9401 9444
type(
  Expr.T.bound list Tla_parser.lprs
)
"p_parser.ml" 305 9401 9426 "p_parser.ml" 305 9401 9444
type(
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
"p_parser.ml" 305 9401 9411 "p_parser.ml" 305 9401 9444
type(
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs
)
"p_parser.ml" 305 9401 9445 "p_parser.ml" 305 9401 9448
type(
  (Tla_parser.pcx, Expr.T.bound list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.bound list * Method.t option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <*> ) "pars.mli" 88 2968 2972 "pars.mli" 88 2968 3036
)
"p_parser.ml" 305 9401 9449 "p_parser.ml" 305 9401 9460
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref read_method "p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
)
"p_parser.ml" 305 9401 9411 "p_parser.ml" 305 9401 9460
type(
  (Tla_parser.pcx, Expr.T.bound list * Method.t option) Tla_parser.P.prs
)
"p_parser.ml" 306 9461 9471 "p_parser.ml" 306 9461 9474
type(
  (Tla_parser.pcx, Expr.T.bound list * Method.t option) Tla_parser.P.prs ->
  (Expr.T.bound list * Method.t option -> prestep) ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 306 9461 9481 "p_parser.ml" 306 9461 9483
type(
  Expr.T.bound list
)
ident(
  def bs "p_parser.ml" 306 9461 9494 "p_parser.ml" 306 9461 9518
)
"p_parser.ml" 306 9461 9485 "p_parser.ml" 306 9461 9489
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 306 9461 9494 "p_parser.ml" 306 9461 9518
)
"p_parser.ml" 306 9461 9480 "p_parser.ml" 306 9461 9490
type(
  Expr.T.bound list * Method.t option
)
"p_parser.ml" 306 9461 9503 "p_parser.ml" 306 9461 9507
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 297 9091 9124 "p_parser.ml" 297 9091 9128
)
"p_parser.ml" 306 9461 9509 "p_parser.ml" 306 9461 9511
type(
  Expr.T.bound list
)
ident(
  int_ref bs "p_parser.ml" 306 9461 9481 "p_parser.ml" 306 9461 9483
)
"p_parser.ml" 306 9461 9513 "p_parser.ml" 306 9461 9517
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 306 9461 9485 "p_parser.ml" 306 9461 9489
)
"p_parser.ml" 306 9461 9494 "p_parser.ml" 306 9461 9518
type(
  prestep
)
"p_parser.ml" 306 9461 9475 "p_parser.ml" 306 9461 9519
type(
  Expr.T.bound list * Method.t option -> prestep
)
"p_parser.ml" 305 9401 9411 "p_parser.ml" 306 9461 9519
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 308 9523 9533 "p_parser.ml" 308 9523 9536
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 308 9523 9537 "p_parser.ml" 308 9523 9546
type(
  string
)
"p_parser.ml" 308 9523 9533 "p_parser.ml" 308 9523 9546
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 308 9523 9547 "p_parser.ml" 308 9523 9550
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 308 9523 9551 "p_parser.ml" 308 9523 9555
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.sep1 "pars.mli" 113 4434 4438 "pars.mli" 113 4434 4500
)
"p_parser.ml" 308 9523 9557 "p_parser.ml" 308 9523 9562
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.punct "tla_parser.mli" 50 1338 1338 "tla_parser.mli" 50 1338 1378
)
"p_parser.ml" 308 9523 9563 "p_parser.ml" 308 9523 9566
type(
  string
)
"p_parser.ml" 308 9523 9556 "p_parser.ml" 308 9523 9567
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 308 9523 9569 "p_parser.ml" 308 9523 9572
type(
  Expr.T.expr Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 308 9523 9574 "p_parser.ml" 308 9523 9578
type(
  bool -> Expr.T.expr Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.expr "expr.mli" 668 17053 17057 "expr.mli" 668 17053 17086
)
"p_parser.ml" 308 9523 9579 "p_parser.ml" 308 9523 9584
type(
  bool
)
"p_parser.ml" 308 9523 9573 "p_parser.ml" 308 9523 9585
type(
  Expr.T.expr Tla_parser.lprs
)
"p_parser.ml" 308 9523 9568 "p_parser.ml" 308 9523 9586
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 308 9523 9551 "p_parser.ml" 308 9523 9586
type(
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs
)
"p_parser.ml" 308 9523 9533 "p_parser.ml" 308 9523 9586
type(
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs
)
"p_parser.ml" 308 9523 9587 "p_parser.ml" 308 9523 9590
type(
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr list * Method.t option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <*> ) "pars.mli" 88 2968 2972 "pars.mli" 88 2968 3036
)
"p_parser.ml" 308 9523 9591 "p_parser.ml" 308 9523 9602
type(
  (Tla_parser.pcx, Method.t option) Tla_parser.P.prs
)
ident(
  int_ref read_method "p_parser.ml" 223 7230 7236 "p_parser.ml" 223 7230 7247
)
"p_parser.ml" 308 9523 9533 "p_parser.ml" 308 9523 9602
type(
  (Tla_parser.pcx, Expr.T.expr list * Method.t option) Tla_parser.P.prs
)
"p_parser.ml" 309 9603 9613 "p_parser.ml" 309 9603 9616
type(
  (Tla_parser.pcx, Expr.T.expr list * Method.t option) Tla_parser.P.prs ->
  (Expr.T.expr list * Method.t option -> prestep) ->
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 309 9603 9623 "p_parser.ml" 309 9603 9625
type(
  Expr.T.expr list
)
ident(
  def es "p_parser.ml" 309 9603 9636 "p_parser.ml" 309 9603 9663
)
"p_parser.ml" 309 9603 9627 "p_parser.ml" 309 9603 9631
type(
  Method.t option
)
ident(
  def meth "p_parser.ml" 309 9603 9636 "p_parser.ml" 309 9603 9663
)
"p_parser.ml" 309 9603 9622 "p_parser.ml" 309 9603 9632
type(
  Expr.T.expr list * Method.t option
)
"p_parser.ml" 309 9603 9648 "p_parser.ml" 309 9603 9652
type(
  supp
)
ident(
  int_ref supp "p_parser.ml" 297 9091 9124 "p_parser.ml" 297 9091 9128
)
"p_parser.ml" 309 9603 9654 "p_parser.ml" 309 9603 9656
type(
  Expr.T.expr list
)
ident(
  int_ref es "p_parser.ml" 309 9603 9623 "p_parser.ml" 309 9603 9625
)
"p_parser.ml" 309 9603 9658 "p_parser.ml" 309 9603 9662
type(
  Method.t option
)
ident(
  int_ref meth "p_parser.ml" 309 9603 9627 "p_parser.ml" 309 9603 9631
)
"p_parser.ml" 309 9603 9636 "p_parser.ml" 309 9603 9663
type(
  prestep
)
"p_parser.ml" 309 9603 9617 "p_parser.ml" 309 9603 9664
type(
  Expr.T.expr list * Method.t option -> prestep
)
"p_parser.ml" 308 9523 9533 "p_parser.ml" 309 9603 9664
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 298 9132 9147 "p_parser.ml" 310 9667 9676
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs list
)
"p_parser.ml" 298 9132 9140 "p_parser.ml" 310 9667 9676
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 297 9091 9114 "p_parser.ml" 311 9677 9686
type(
  supp -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 297 9091 9097 "p_parser.ml" 311 9677 9686
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 313 9690 9696 "p_parser.ml" 313 9690 9703
type(
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.attempt "pars.mli" 104 3959 3963 "pars.mli" 104 3959 4005
)
"p_parser.ml" 313 9690 9705 "p_parser.ml" 313 9690 9713
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.optional "pars.mli" 105 4006 4010 "pars.mli" 105 4006 4060
)
"p_parser.ml" 313 9690 9715 "p_parser.ml" 313 9690 9718
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 313 9690 9719 "p_parser.ml" 313 9690 9727
type(
  string
)
"p_parser.ml" 313 9690 9714 "p_parser.ml" 313 9690 9728
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 313 9690 9705 "p_parser.ml" 313 9690 9728
type(
  (Tla_parser.pcx, string option) Tla_parser.P.prs
)
"p_parser.ml" 313 9690 9729 "p_parser.ml" 313 9690 9732
type(
  (Tla_parser.pcx, string option) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>> ) "pars.mli" 92 3223 3227 "pars.mli" 92 3223 3285
)
"p_parser.ml" 313 9690 9733 "p_parser.ml" 313 9690 9738
type(
  (Tla_parser.pcx, Expr.T.defn) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.star1 "pars.mli" 111 4318 4322 "pars.mli" 111 4318 4367
)
"p_parser.ml" 313 9690 9740 "p_parser.ml" 313 9690 9743
type(
  Expr.T.defn Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.defn) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 313 9690 9745 "p_parser.ml" 313 9690 9749
type(
  bool -> Expr.T.defn Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.defn "expr.mli" 670 17129 17133 "expr.mli" 670 17129 17162
)
"p_parser.ml" 313 9690 9750 "p_parser.ml" 313 9690 9755
type(
  bool
)
"p_parser.ml" 313 9690 9744 "p_parser.ml" 313 9690 9756
type(
  Expr.T.defn Tla_parser.lprs
)
"p_parser.ml" 313 9690 9739 "p_parser.ml" 313 9690 9757
type(
  (Tla_parser.pcx, Expr.T.defn) Tla_parser.P.prs
)
"p_parser.ml" 313 9690 9733 "p_parser.ml" 313 9690 9757
type(
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs
)
"p_parser.ml" 313 9690 9704 "p_parser.ml" 313 9690 9758
type(
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs
)
"p_parser.ml" 313 9690 9696 "p_parser.ml" 313 9690 9758
type(
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs
)
"p_parser.ml" 314 9759 9765 "p_parser.ml" 314 9759 9768
type(
  (Tla_parser.pcx, Expr.T.defn list) Tla_parser.P.prs ->
  (Expr.T.defn list -> prestep) -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 314 9759 9774 "p_parser.ml" 314 9759 9777
type(
  Expr.T.defn list
)
ident(
  def dfs "p_parser.ml" 314 9759 9781 "p_parser.ml" 314 9759 9794
)
"p_parser.ml" 314 9759 9791 "p_parser.ml" 314 9759 9794
type(
  Expr.T.defn list
)
ident(
  int_ref dfs "p_parser.ml" 314 9759 9774 "p_parser.ml" 314 9759 9777
)
"p_parser.ml" 314 9759 9781 "p_parser.ml" 314 9759 9794
type(
  prestep
)
"p_parser.ml" 314 9759 9769 "p_parser.ml" 314 9759 9795
type(
  Expr.T.defn list -> prestep
)
"p_parser.ml" 313 9690 9696 "p_parser.ml" 314 9759 9795
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 316 9799 9805 "p_parser.ml" 316 9799 9808
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 316 9799 9809 "p_parser.ml" 316 9799 9816
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref sequent "p_parser.ml" 253 7864 7870 "p_parser.ml" 253 7864 7877
)
"p_parser.ml" 316 9799 9805 "p_parser.ml" 316 9799 9816
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs
)
"p_parser.ml" 316 9799 9817 "p_parser.ml" 316 9799 9820
type(
  (Tla_parser.pcx, Expr.T.sequent) Tla_parser.P.prs ->
  (Expr.T.sequent -> prestep) -> (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 316 9799 9826 "p_parser.ml" 316 9799 9828
type(
  Expr.T.sequent
)
ident(
  def sq "p_parser.ml" 316 9799 9832 "p_parser.ml" 316 9799 9844
)
"p_parser.ml" 316 9799 9842 "p_parser.ml" 316 9799 9844
type(
  Expr.T.sequent
)
ident(
  int_ref sq "p_parser.ml" 316 9799 9826 "p_parser.ml" 316 9799 9828
)
"p_parser.ml" 316 9799 9832 "p_parser.ml" 316 9799 9844
type(
  prestep
)
"p_parser.ml" 316 9799 9821 "p_parser.ml" 316 9799 9845
type(
  Expr.T.sequent -> prestep
)
"p_parser.ml" 316 9799 9805 "p_parser.ml" 316 9799 9845
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 285 8724 8735 "p_parser.ml" 317 9848 9853
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs list
)
"p_parser.ml" 284 8697 8718 "p_parser.ml" 318 9854 9859
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs
)
"p_parser.ml" 284 8697 8713 "p_parser.ml" 318 9854 9859
type(
  (Tla_parser.pcx, prestep) Tla_parser.P.prs Lazy.t
)
"p_parser.ml" 328 10241 10247 "p_parser.ml" 328 10241 10266
type(
  Expr.T.expr -> Expr.T.expr
)
ident(
  def filter_usebody_fact "p_parser.ml" 260 8033 8035 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 328 10241 10267 "p_parser.ml" 328 10241 10268
type(
  Expr.T.expr
)
ident(
  def f "p_parser.ml" 329 10271 10275 "p_parser.ml" 331 10355 10367
)
"p_parser.ml" 329 10271 10281 "p_parser.ml" 329 10271 10282
type(
  Expr.T.expr
)
ident(
  int_ref f "p_parser.ml" 328 10241 10267 "p_parser.ml" 328 10241 10268
)
"p_parser.ml" 329 10271 10281 "p_parser.ml" 329 10271 10287
type(
  Expr.T.expr_
)
"p_parser.ml" 330 10293 10320 "p_parser.ml" 330 10293 10321
type(
  string
)
ident(
  def v "p_parser.ml" 330 10293 10338 "p_parser.ml" 330 10293 10354
)
"p_parser.ml" 330 10293 10313 "p_parser.ml" 330 10293 10321
type(
  Expr.T.expr_
)
"p_parser.ml" 330 10293 10305 "p_parser.ml" 330 10293 10322
type(
  Expr.T.expr
)
"p_parser.ml" 330 10293 10305 "p_parser.ml" 330 10293 10327
type(
  Expr.T.expr
)
ident(
  def e "p_parser.ml" 330 10293 10338 "p_parser.ml" 330 10293 10354
)
"p_parser.ml" 330 10293 10329 "p_parser.ml" 330 10293 10331
type(
  Expr.T.sel list
)
"p_parser.ml" 330 10293 10299 "p_parser.ml" 330 10293 10332
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"p_parser.ml" 330 10293 10338 "p_parser.ml" 330 10293 10339
type(
  string
)
ident(
  int_ref v "p_parser.ml" 330 10293 10320 "p_parser.ml" 330 10293 10321
)
"p_parser.ml" 330 10293 10341 "p_parser.ml" 330 10293 10342
type(
  int
)
"p_parser.ml" 330 10293 10338 "p_parser.ml" 330 10293 10343
type(
  char
)
"p_parser.ml" 330 10293 10344 "p_parser.ml" 330 10293 10345
type(
  char -> char -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"p_parser.ml" 330 10293 10346 "p_parser.ml" 330 10293 10349
type(
  char
)
"p_parser.ml" 330 10293 10338 "p_parser.ml" 330 10293 10349
type(
  bool
)
"p_parser.ml" 330 10293 10353 "p_parser.ml" 330 10293 10354
type(
  Expr.T.expr
)
ident(
  int_ref e "p_parser.ml" 330 10293 10305 "p_parser.ml" 330 10293 10327
)
"p_parser.ml" 331 10355 10361 "p_parser.ml" 331 10355 10362
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"p_parser.ml" 331 10355 10366 "p_parser.ml" 331 10355 10367
type(
  Expr.T.expr
)
ident(
  int_ref f "p_parser.ml" 328 10241 10267 "p_parser.ml" 328 10241 10268
)
"p_parser.ml" 329 10271 10275 "p_parser.ml" 331 10355 10367
type(
  Expr.T.expr
)
"p_parser.ml" 333 10369 10375 "p_parser.ml" 333 10369 10382
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
ident(
  def usebody "p_parser.ml" 260 8033 8035 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 334 10396 10404 "p_parser.ml" 334 10396 10408
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
ident(
  def defs "p_parser.ml" 337 10488 10492 "p_parser.ml" 344 10828 10841
)
"p_parser.ml" 335 10411 10418 "p_parser.ml" 335 10411 10421
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 335 10411 10422 "p_parser.ml" 335 10411 10427
type(
  string
)
"p_parser.ml" 335 10411 10418 "p_parser.ml" 335 10411 10427
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 335 10411 10428 "p_parser.ml" 335 10411 10431
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <|> ) "pars.mli" 87 2905 2909 "pars.mli" 87 2905 2967
)
"p_parser.ml" 335 10411 10432 "p_parser.ml" 335 10411 10435
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.kwd "tla_parser.mli" 54 1469 1469 "tla_parser.mli" 54 1469 1507
)
"p_parser.ml" 335 10411 10436 "p_parser.ml" 335 10411 10442
type(
  string
)
"p_parser.ml" 335 10411 10432 "p_parser.ml" 335 10411 10442
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 335 10411 10417 "p_parser.ml" 335 10411 10443
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 335 10411 10444 "p_parser.ml" 335 10411 10447
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >*> ) "pars.mli" 93 3286 3290 "pars.mli" 93 3286 3348
)
"p_parser.ml" 335 10411 10448 "p_parser.ml" 335 10411 10452
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.sep1 "pars.mli" 113 4434 4438 "pars.mli" 113 4434 4500
)
"p_parser.ml" 335 10411 10454 "p_parser.ml" 335 10411 10459
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.punct "tla_parser.mli" 50 1338 1338 "tla_parser.mli" 50 1338 1378
)
"p_parser.ml" 335 10411 10460 "p_parser.ml" 335 10411 10463
type(
  string
)
"p_parser.ml" 335 10411 10453 "p_parser.ml" 335 10411 10464
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 335 10411 10466 "p_parser.ml" 335 10411 10469
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 335 10411 10470 "p_parser.ml" 335 10411 10479
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref definable "p_parser.ml" 347 10849 10855 "p_parser.ml" 347 10849 10864
)
"p_parser.ml" 335 10411 10465 "p_parser.ml" 335 10411 10480
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 335 10411 10448 "p_parser.ml" 335 10411 10480
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 335 10411 10417 "p_parser.ml" 335 10411 10480
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 337 10488 10492 "p_parser.ml" 337 10488 10495
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs ->
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.sep "pars.mli" 112 4368 4372 "pars.mli" 112 4368 4433
)
"p_parser.ml" 337 10488 10497 "p_parser.ml" 337 10488 10502
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.punct "tla_parser.mli" 50 1338 1338 "tla_parser.mli" 50 1338 1378
)
"p_parser.ml" 337 10488 10503 "p_parser.ml" 337 10488 10506
type(
  string
)
"p_parser.ml" 337 10488 10496 "p_parser.ml" 337 10488 10507
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 337 10488 10509 "p_parser.ml" 337 10488 10512
type(
  Expr.T.expr Tla_parser.prs Lazy.t ->
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 337 10488 10514 "p_parser.ml" 337 10488 10518
type(
  bool -> Expr.T.expr Tla_parser.lprs
)
ident(
  int_ref Expr.Parser.expr "expr.mli" 668 17053 17057 "expr.mli" 668 17053 17086
)
"p_parser.ml" 337 10488 10519 "p_parser.ml" 337 10488 10524
type(
  bool
)
"p_parser.ml" 337 10488 10513 "p_parser.ml" 337 10488 10525
type(
  Expr.T.expr Tla_parser.lprs
)
"p_parser.ml" 337 10488 10508 "p_parser.ml" 337 10488 10526
type(
  (Tla_parser.pcx, Expr.T.expr) Tla_parser.P.prs
)
"p_parser.ml" 337 10488 10492 "p_parser.ml" 337 10488 10526
type(
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs
)
"p_parser.ml" 337 10488 10527 "p_parser.ml" 337 10488 10530
type(
  (Tla_parser.pcx, Expr.T.expr list) Tla_parser.P.prs ->
  (Expr.T.expr list -> (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs) ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( >>= ) "pars.mli" 91 3152 3156 "pars.mli" 91 3152 3222
)
"p_parser.ml" 338 10540 10548 "p_parser.ml" 338 10540 10550
type(
  Expr.T.expr list
)
"p_parser.ml" 339 10554 10564 "p_parser.ml" 339 10554 10568
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref defs "p_parser.ml" 334 10396 10404 "p_parser.ml" 334 10396 10408
)
"p_parser.ml" 339 10554 10569 "p_parser.ml" 339 10554 10572
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs ->
  (P_t.use_def Property.wrapped list -> P_t.usable) ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 339 10554 10578 "p_parser.ml" 339 10554 10580
type(
  P_t.use_def Property.wrapped list
)
ident(
  def ds "p_parser.ml" 339 10554 10584 "p_parser.ml" 339 10554 10610
)
"p_parser.ml" 339 10554 10594 "p_parser.ml" 339 10554 10596
type(
  Expr.T.expr list
)
"p_parser.ml" 339 10554 10606 "p_parser.ml" 339 10554 10608
type(
  P_t.use_def Property.wrapped list
)
ident(
  int_ref ds "p_parser.ml" 339 10554 10578 "p_parser.ml" 339 10554 10580
)
"p_parser.ml" 339 10554 10584 "p_parser.ml" 339 10554 10610
type(
  P_t.usable
)
"p_parser.ml" 339 10554 10573 "p_parser.ml" 339 10554 10611
type(
  P_t.use_def Property.wrapped list -> P_t.usable
)
"p_parser.ml" 339 10554 10564 "p_parser.ml" 339 10554 10611
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 340 10612 10620 "p_parser.ml" 340 10612 10622
type(
  Expr.T.expr list
)
ident(
  def fs "p_parser.ml" 341 10626 10636 "p_parser.ml" 344 10828 10841
)
"p_parser.ml" 341 10626 10636 "p_parser.ml" 341 10626 10644
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped list option) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.optional "pars.mli" 105 4006 4010 "pars.mli" 105 4006 4060
)
"p_parser.ml" 341 10626 10645 "p_parser.ml" 341 10626 10649
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref defs "p_parser.ml" 334 10396 10404 "p_parser.ml" 334 10396 10408
)
"p_parser.ml" 341 10626 10636 "p_parser.ml" 341 10626 10649
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list option) Tla_parser.P.prs
)
"p_parser.ml" 341 10626 10650 "p_parser.ml" 341 10626 10653
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped list option) Tla_parser.P.prs ->
  (P_t.use_def Property.wrapped list option -> P_t.usable) ->
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 342 10669 10683 "p_parser.ml" 342 10669 10687
type(
  P_t.use_def Property.wrapped list option
)
"p_parser.ml" 342 10669 10701 "p_parser.ml" 342 10669 10709
type(
  (Expr.T.expr -> Expr.T.expr) -> Expr.T.expr list -> Expr.T.expr list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"p_parser.ml" 342 10669 10710 "p_parser.ml" 342 10669 10729
type(
  Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref filter_usebody_fact "p_parser.ml" 328 10241 10247 "p_parser.ml" 328 10241 10266
)
"p_parser.ml" 342 10669 10730 "p_parser.ml" 342 10669 10732
type(
  Expr.T.expr list
)
ident(
  int_ref fs "p_parser.ml" 340 10612 10620 "p_parser.ml" 340 10612 10622
)
"p_parser.ml" 342 10669 10701 "p_parser.ml" 342 10669 10732
type(
  Expr.T.expr list
)
"p_parser.ml" 342 10669 10742 "p_parser.ml" 342 10669 10744
type(
  P_t.use_def Property.wrapped list
)
"p_parser.ml" 342 10669 10691 "p_parser.ml" 342 10669 10746
type(
  P_t.usable
)
"p_parser.ml" 343 10747 10766 "p_parser.ml" 343 10747 10768
type(
  P_t.use_def Property.wrapped list
)
ident(
  def ds "p_parser.ml" 343 10747 10772 "p_parser.ml" 343 10747 10827
)
"p_parser.ml" 343 10747 10761 "p_parser.ml" 343 10747 10768
type(
  P_t.use_def Property.wrapped list option
)
"p_parser.ml" 343 10747 10782 "p_parser.ml" 343 10747 10790
type(
  (Expr.T.expr -> Expr.T.expr) -> Expr.T.expr list -> Expr.T.expr list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"p_parser.ml" 343 10747 10791 "p_parser.ml" 343 10747 10810
type(
  Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref filter_usebody_fact "p_parser.ml" 328 10241 10247 "p_parser.ml" 328 10241 10266
)
"p_parser.ml" 343 10747 10811 "p_parser.ml" 343 10747 10813
type(
  Expr.T.expr list
)
ident(
  int_ref fs "p_parser.ml" 340 10612 10620 "p_parser.ml" 340 10612 10622
)
"p_parser.ml" 343 10747 10782 "p_parser.ml" 343 10747 10813
type(
  Expr.T.expr list
)
"p_parser.ml" 343 10747 10823 "p_parser.ml" 343 10747 10825
type(
  P_t.use_def Property.wrapped list
)
ident(
  int_ref ds "p_parser.ml" 343 10747 10766 "p_parser.ml" 343 10747 10768
)
"p_parser.ml" 343 10747 10772 "p_parser.ml" 343 10747 10827
type(
  P_t.usable
)
"p_parser.ml" 341 10626 10654 "p_parser.ml" 344 10828 10841
type(
  P_t.use_def Property.wrapped list option -> P_t.usable
)
"p_parser.ml" 341 10626 10636 "p_parser.ml" 344 10828 10841
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 337 10488 10531 "p_parser.ml" 344 10828 10841
type(
  Expr.T.expr list -> (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 337 10488 10492 "p_parser.ml" 344 10828 10841
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 333 10369 10390 "p_parser.ml" 345 10842 10847
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs
)
"p_parser.ml" 333 10369 10385 "p_parser.ml" 345 10842 10847
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
"p_parser.ml" 347 10849 10855 "p_parser.ml" 347 10849 10864
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs Lazy.t
)
ident(
  def definable "p_parser.ml" 260 8033 8035 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 348 10878 10882 "p_parser.ml" 348 10878 10888
type(
  (Tla_parser.pcx, P_t.use_def) Tla_parser.P.prs ->
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.locate "tla_parser.mli" 46 1196 1196 "tla_parser.mli" 47 1226 1261
)
"p_parser.ml" 349 10895 10901 "p_parser.ml" 349 10895 10905
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string) Tla_parser.P.prs ->
  (Tla_parser.pcx, string list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.sep1 "pars.mli" 113 4434 4438 "pars.mli" 113 4434 4500
)
"p_parser.ml" 349 10895 10907 "p_parser.ml" 349 10895 10912
type(
  string -> (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.punct "tla_parser.mli" 50 1338 1338 "tla_parser.mli" 50 1338 1378
)
"p_parser.ml" 349 10895 10913 "p_parser.ml" 349 10895 10916
type(
  string
)
"p_parser.ml" 349 10895 10906 "p_parser.ml" 349 10895 10917
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 349 10895 10919 "p_parser.ml" 349 10895 10925
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs list ->
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 349 10895 10928 "p_parser.ml" 349 10895 10933
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.anyop "tla_parser.mli" 51 1379 1379 "tla_parser.mli" 51 1379 1409
)
"p_parser.ml" 349 10895 10936 "p_parser.ml" 349 10895 10944
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.anyident "tla_parser.mli" 48 1262 1262 "tla_parser.mli" 48 1262 1295
)
"p_parser.ml" 349 10895 10926 "p_parser.ml" 349 10895 10946
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs list
)
"p_parser.ml" 349 10895 10918 "p_parser.ml" 349 10895 10947
type(
  (Tla_parser.pcx, string) Tla_parser.P.prs
)
"p_parser.ml" 349 10895 10901 "p_parser.ml" 349 10895 10947
type(
  (Tla_parser.pcx, string list) Tla_parser.P.prs
)
"p_parser.ml" 350 10948 10954 "p_parser.ml" 350 10948 10957
type(
  (Tla_parser.pcx, string list) Tla_parser.P.prs ->
  (string list -> P_t.use_def) ->
  (Tla_parser.pcx, P_t.use_def) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 350 10948 10963 "p_parser.ml" 350 10948 10966
type(
  string list
)
ident(
  def ids "p_parser.ml" 350 10948 10970 "p_parser.ml" 350 10948 10998
)
"p_parser.ml" 350 10948 10976 "p_parser.ml" 350 10948 10989
type(
  string -> string list -> string
)
ident(
  int_ref Stdlib.String.concat "string.mli" 132 5016 5016 "string.mli" 132 5016 5060
)
"p_parser.ml" 350 10948 10990 "p_parser.ml" 350 10948 10993
type(
  string
)
"p_parser.ml" 350 10948 10994 "p_parser.ml" 350 10948 10997
type(
  string list
)
ident(
  int_ref ids "p_parser.ml" 350 10948 10963 "p_parser.ml" 350 10948 10966
)
"p_parser.ml" 350 10948 10975 "p_parser.ml" 350 10948 10998
type(
  string
)
"p_parser.ml" 350 10948 10970 "p_parser.ml" 350 10948 10998
type(
  P_t.use_def
)
"p_parser.ml" 350 10948 10958 "p_parser.ml" 350 10948 10999
type(
  string list -> P_t.use_def
)
"p_parser.ml" 348 10878 10889 "p_parser.ml" 351 11000 11007
type(
  (Tla_parser.pcx, P_t.use_def) Tla_parser.P.prs
)
"p_parser.ml" 347 10849 10872 "p_parser.ml" 352 11008 11013
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 347 10849 10867 "p_parser.ml" 352 11008 11013
type(
  (Tla_parser.pcx, P_t.use_def Property.wrapped) Tla_parser.P.prs Lazy.t
)
"p_parser.ml" 354 11015 11025 "p_parser.ml" 354 11015 11034
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs Lazy.t
)
ident(
  def preproofs "p_parser.ml" 354 11015 11017 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 355 11048 11052 "p_parser.ml" 355 11048 11058
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs list ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 356 11061 11067 "p_parser.ml" 356 11061 11070
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 356 11061 11071 "p_parser.ml" 356 11061 11079
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref preproof "p_parser.ml" 260 8033 8043 "p_parser.ml" 260 8033 8051
)
"p_parser.ml" 356 11061 11067 "p_parser.ml" 356 11061 11079
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 356 11061 11080 "p_parser.ml" 356 11061 11084
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs ->
  (Tla_parser.pcx,
   preproof_ Property.wrapped * preproof_ Property.wrapped list)
  Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <**> ) "pars.mli" 90 3083 3087 "pars.mli" 90 3083 3151
)
"p_parser.ml" 356 11061 11085 "p_parser.ml" 356 11061 11088
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 356 11061 11089 "p_parser.ml" 356 11061 11098
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref preproofs "p_parser.ml" 354 11015 11025 "p_parser.ml" 354 11015 11034
)
"p_parser.ml" 356 11061 11085 "p_parser.ml" 356 11061 11098
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 356 11061 11067 "p_parser.ml" 356 11061 11098
type(
  (Tla_parser.pcx,
   preproof_ Property.wrapped * preproof_ Property.wrapped list)
  Tla_parser.P.prs
)
"p_parser.ml" 357 11099 11105 "p_parser.ml" 357 11099 11108
type(
  (Tla_parser.pcx,
   preproof_ Property.wrapped * preproof_ Property.wrapped list)
  Tla_parser.P.prs ->
  (preproof_ Property.wrapped * preproof_ Property.wrapped list ->
   preproof_ Property.wrapped list) ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 357 11099 11115 "p_parser.ml" 357 11099 11116
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 357 11099 11125 "p_parser.ml" 357 11099 11132
)
"p_parser.ml" 357 11099 11118 "p_parser.ml" 357 11099 11120
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 357 11099 11125 "p_parser.ml" 357 11099 11132
)
"p_parser.ml" 357 11099 11114 "p_parser.ml" 357 11099 11121
type(
  preproof_ Property.wrapped * preproof_ Property.wrapped list
)
"p_parser.ml" 357 11099 11125 "p_parser.ml" 357 11099 11126
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 357 11099 11115 "p_parser.ml" 357 11099 11116
)
"p_parser.ml" 357 11099 11130 "p_parser.ml" 357 11099 11132
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 357 11099 11118 "p_parser.ml" 357 11099 11120
)
"p_parser.ml" 357 11099 11125 "p_parser.ml" 357 11099 11132
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 357 11099 11109 "p_parser.ml" 357 11099 11133
type(
  preproof_ Property.wrapped * preproof_ Property.wrapped list ->
  preproof_ Property.wrapped list
)
"p_parser.ml" 356 11061 11067 "p_parser.ml" 357 11099 11133
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 359 11137 11143 "p_parser.ml" 359 11137 11150
type(
  preproof_ Property.wrapped list ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.succeed "pars.mli" 73 2251 2255 "pars.mli" 73 2251 2287
)
"p_parser.ml" 359 11137 11151 "p_parser.ml" 359 11137 11153
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 359 11137 11143 "p_parser.ml" 359 11137 11153
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 355 11048 11059 "p_parser.ml" 360 11156 11161
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs list
)
"p_parser.ml" 354 11015 11042 "p_parser.ml" 361 11162 11167
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 354 11015 11037 "p_parser.ml" 361 11162 11167
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs Lazy.t
)
"p_parser.ml" 363 11169 11175 "p_parser.ml" 363 11169 11180
type(
  (Tla_parser.pcx, P_t.proof) Tla_parser.P.prs lazy_t
)
ident(
  def proof "p_parser.ml" 371 11374 11379 "p_parser.ml" 373 11381 11384
)
"p_parser.ml" 364 11194 11198 "p_parser.ml" 364 11194 11204
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs list ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.choice "pars.mli" 106 4061 4065 "pars.mli" 106 4061 4111
)
"p_parser.ml" 365 11207 11213 "p_parser.ml" 365 11207 11216
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 365 11207 11217 "p_parser.ml" 365 11207 11225
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref preproof "p_parser.ml" 260 8033 8043 "p_parser.ml" 260 8033 8051
)
"p_parser.ml" 365 11207 11213 "p_parser.ml" 365 11207 11225
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 365 11207 11226 "p_parser.ml" 365 11207 11230
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs ->
  (Tla_parser.pcx,
   preproof_ Property.wrapped * preproof_ Property.wrapped list)
  Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <**> ) "pars.mli" 90 3083 3087 "pars.mli" 90 3083 3151
)
"p_parser.ml" 365 11207 11231 "p_parser.ml" 365 11207 11234
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs Lazy.t ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.use "pars.mli" 83 2710 2714 "pars.mli" 83 2710 2759
)
"p_parser.ml" 365 11207 11235 "p_parser.ml" 365 11207 11244
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref preproofs "p_parser.ml" 354 11015 11025 "p_parser.ml" 354 11015 11034
)
"p_parser.ml" 365 11207 11231 "p_parser.ml" 365 11207 11244
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 365 11207 11213 "p_parser.ml" 365 11207 11244
type(
  (Tla_parser.pcx,
   preproof_ Property.wrapped * preproof_ Property.wrapped list)
  Tla_parser.P.prs
)
"p_parser.ml" 366 11245 11251 "p_parser.ml" 366 11245 11254
type(
  (Tla_parser.pcx,
   preproof_ Property.wrapped * preproof_ Property.wrapped list)
  Tla_parser.P.prs ->
  (preproof_ Property.wrapped * preproof_ Property.wrapped list ->
   preproof_ Property.wrapped list) ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 366 11245 11261 "p_parser.ml" 366 11245 11262
type(
  preproof_ Property.wrapped
)
ident(
  def p "p_parser.ml" 366 11245 11271 "p_parser.ml" 366 11245 11278
)
"p_parser.ml" 366 11245 11264 "p_parser.ml" 366 11245 11266
type(
  preproof_ Property.wrapped list
)
ident(
  def ps "p_parser.ml" 366 11245 11271 "p_parser.ml" 366 11245 11278
)
"p_parser.ml" 366 11245 11260 "p_parser.ml" 366 11245 11267
type(
  preproof_ Property.wrapped * preproof_ Property.wrapped list
)
"p_parser.ml" 366 11245 11271 "p_parser.ml" 366 11245 11272
type(
  preproof_ Property.wrapped
)
ident(
  int_ref p "p_parser.ml" 366 11245 11261 "p_parser.ml" 366 11245 11262
)
"p_parser.ml" 366 11245 11276 "p_parser.ml" 366 11245 11278
type(
  preproof_ Property.wrapped list
)
ident(
  int_ref ps "p_parser.ml" 366 11245 11264 "p_parser.ml" 366 11245 11266
)
"p_parser.ml" 366 11245 11271 "p_parser.ml" 366 11245 11278
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 366 11245 11255 "p_parser.ml" 366 11245 11279
type(
  preproof_ Property.wrapped * preproof_ Property.wrapped list ->
  preproof_ Property.wrapped list
)
"p_parser.ml" 365 11207 11213 "p_parser.ml" 366 11245 11279
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 368 11283 11289 "p_parser.ml" 368 11283 11295
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs ->
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.locate "tla_parser.mli" 46 1196 1196 "tla_parser.mli" 47 1226 1261
)
"p_parser.ml" 368 11283 11297 "p_parser.ml" 368 11283 11304
type(
  preproof_ -> (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.succeed "pars.mli" 73 2251 2255 "pars.mli" 73 2251 2287
)
"p_parser.ml" 368 11283 11317 "p_parser.ml" 368 11283 11325
type(
  P_t.omission
)
"p_parser.ml" 368 11283 11305 "p_parser.ml" 368 11283 11326
type(
  preproof_
)
"p_parser.ml" 368 11283 11296 "p_parser.ml" 368 11283 11327
type(
  (Tla_parser.pcx, preproof_) Tla_parser.P.prs
)
"p_parser.ml" 368 11283 11289 "p_parser.ml" 368 11283 11327
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs
)
"p_parser.ml" 369 11328 11334 "p_parser.ml" 369 11328 11337
type(
  (Tla_parser.pcx, preproof_ Property.wrapped) Tla_parser.P.prs ->
  (preproof_ Property.wrapped -> preproof_ Property.wrapped list) ->
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 369 11328 11343 "p_parser.ml" 369 11328 11345
type(
  preproof_ Property.wrapped
)
ident(
  def pp "p_parser.ml" 369 11328 11349 "p_parser.ml" 369 11328 11353
)
"p_parser.ml" 369 11328 11350 "p_parser.ml" 369 11328 11352
type(
  preproof_ Property.wrapped
)
ident(
  int_ref pp "p_parser.ml" 369 11328 11343 "p_parser.ml" 369 11328 11345
)
"p_parser.ml" 369 11328 11349 "p_parser.ml" 369 11328 11353
type(
  preproof_ Property.wrapped list
)
"p_parser.ml" 369 11328 11338 "p_parser.ml" 369 11328 11354
type(
  preproof_ Property.wrapped -> preproof_ Property.wrapped list
)
"p_parser.ml" 368 11283 11289 "p_parser.ml" 369 11328 11354
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 364 11194 11205 "p_parser.ml" 370 11355 11360
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs list
)
"p_parser.ml" 364 11194 11198 "p_parser.ml" 370 11355 11360
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs
)
"p_parser.ml" 370 11355 11361 "p_parser.ml" 370 11355 11364
type(
  (Tla_parser.pcx, preproof_ Property.wrapped list) Tla_parser.P.prs ->
  (preproof_ Property.wrapped list -> P_t.proof) ->
  (Tla_parser.pcx, P_t.proof) Tla_parser.P.prs
)
ident(
  int_ref Tla_parser.P.( <$> ) "pars.mli" 95 3412 3416 "pars.mli" 95 3412 3472
)
"p_parser.ml" 370 11355 11365 "p_parser.ml" 370 11355 11373
type(
  preproof_ Property.wrapped list -> P_t.proof
)
ident(
  int_ref toplevel "p_parser.ml" 201 6626 6630 "p_parser.ml" 201 6626 6638
)
"p_parser.ml" 363 11169 11188 "p_parser.ml" 371 11374 11379
type(
  (Tla_parser.pcx, P_t.proof) Tla_parser.P.prs
)
"p_parser.ml" 363 11169 11183 "p_parser.ml" 371 11374 11379
type(
  (Tla_parser.pcx, P_t.proof) Tla_parser.P.prs lazy_t
)
"p_parser.ml" 375 11386 11390 "p_parser.ml" 375 11386 11397
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
ident(
  def usebody "p_parser.ml" 376 11415 11415 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 375 11386 11400 "p_parser.ml" 375 11386 11414
type(
  (Tla_parser.pcx, P_t.usable) Tla_parser.P.prs Lazy.t
)
ident(
  int_ref Parser.usebody "p_parser.ml" 333 10369 10375 "p_parser.ml" 333 10369 10382
)
"p_parser.ml" 376 11415 11419 "p_parser.ml" 376 11415 11424
type(
  (Tla_parser.pcx, P_t.proof) Tla_parser.P.prs lazy_t
)
ident(
  def proof "p_parser.ml" 377 11440 11440 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 376 11415 11427 "p_parser.ml" 376 11415 11439
type(
  (Tla_parser.pcx, P_t.proof) Tla_parser.P.prs lazy_t
)
ident(
  int_ref Parser.proof "p_parser.ml" 363 11169 11175 "p_parser.ml" 363 11169 11180
)
"p_parser.ml" 377 11440 11444 "p_parser.ml" 377 11440 11452
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs lazy_t
)
ident(
  def suppress "p_parser.ml" 377 11440 11470 "p_parser.ml" 0 0 -1
)
"p_parser.ml" 377 11440 11455 "p_parser.ml" 377 11440 11470
type(
  (Tla_parser.pcx, supp) Tla_parser.P.prs lazy_t
)
ident(
  int_ref Parser.suppress "p_parser.ml" 225 7289 7295 "p_parser.ml" 225 7289 7303
)
