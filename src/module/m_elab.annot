"m_elab.ml" 28 378 382 "m_elab.ml" 28 378 397
type(
  M_t.modunit list -> M_t.modunit list
)
ident(
  def localize_axioms "m_elab.ml" 77 2237 2237 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 28 378 398 "m_elab.ml" 28 378 402
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 29 405 407 "m_elab.ml" 73 2139 2153
)
"m_elab.ml" 29 405 415 "m_elab.ml" 29 405 419
type(
  M_t.modunit list -> M_t.modunit list -> M_t.modunit list
)
ident(
  def spin "m_elab.ml" 29 405 407 "m_elab.ml" 73 2139 2153
)
"m_elab.ml" 29 405 420 "m_elab.ml" 29 405 426
type(
  M_t.modunit list
)
ident(
  def prefix "m_elab.ml" 29 405 429 "m_elab.ml" 71 2122 2133
)
"m_elab.ml" 30 438 444 "m_elab.ml" 30 438 446
type(
  M_t.modunit list
)
"m_elab.ml" 30 438 450 "m_elab.ml" 30 438 458
type(
  M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref Ext.List.rev "ext.mli" 11 220 222 "ext.mli" 11 220 250
)
"m_elab.ml" 30 438 459 "m_elab.ml" 30 438 465
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 29 405 420 "m_elab.ml" 29 405 426
)
"m_elab.ml" 30 438 450 "m_elab.ml" 30 438 465
type(
  M_t.modunit list
)
"m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 32 485 493 "m_elab.ml" 71 2122 2133
)
"m_elab.ml" 31 466 478 "m_elab.ml" 31 466 481
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 32 485 493 "m_elab.ml" 71 2122 2133
)
"m_elab.ml" 31 466 472 "m_elab.ml" 31 466 481
type(
  M_t.modunit list
)
"m_elab.ml" 32 485 505 "m_elab.ml" 32 485 507
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
)
"m_elab.ml" 32 485 505 "m_elab.ml" 32 485 512
type(
  M_t.modunit_
)
"m_elab.ml" 33 518 535 "m_elab.ml" 33 518 537
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 34 545 557 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 33 518 539 "m_elab.ml" 33 518 540
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 34 545 557 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 33 518 528 "m_elab.ml" 33 518 541
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 34 545 562 "m_elab.ml" 34 545 568
type(
  M_t.modunit list
)
ident(
  def prefix "m_elab.ml" 47 1043 1055 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 34 545 570 "m_elab.ml" 34 545 571
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 47 1043 1055 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 34 545 561 "m_elab.ml" 34 545 572
type(
  M_t.modunit list * Expr.T.expr
)
"m_elab.ml" 37 703 723 "m_elab.ml" 37 703 725
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 33 518 535 "m_elab.ml" 33 518 537
)
"m_elab.ml" 38 731 747 "m_elab.ml" 38 731 751
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 39 755 774 "m_elab.ml" 39 755 780
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 29 405 420 "m_elab.ml" 29 405 426
)
"m_elab.ml" 39 755 782 "m_elab.ml" 39 755 790
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 39 755 792 "m_elab.ml" 39 755 797
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 39 755 798 "m_elab.ml" 39 755 799
type(
  int
)
"m_elab.ml" 39 755 791 "m_elab.ml" 39 755 800
type(
  Expr.Subst.sub
)
"m_elab.ml" 39 755 801 "m_elab.ml" 39 755 802
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 33 518 539 "m_elab.ml" 33 518 540
)
"m_elab.ml" 39 755 782 "m_elab.ml" 39 755 802
type(
  Expr.T.expr
)
"m_elab.ml" 39 755 773 "m_elab.ml" 39 755 803
type(
  M_t.modunit list * Expr.T.expr
)
"m_elab.ml" 40 804 825 "m_elab.ml" 40 804 827
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 41 831 849 "m_elab.ml" 45 997 1027
)
"m_elab.ml" 40 804 820 "m_elab.ml" 40 804 827
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 42 862 895 "m_elab.ml" 42 862 897
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 40 804 825 "m_elab.ml" 40 804 827
)
"m_elab.ml" 42 862 899 "m_elab.ml" 42 862 900
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 33 518 539 "m_elab.ml" 33 518 540
)
"m_elab.ml" 42 862 885 "m_elab.ml" 42 862 901
type(
  Expr.T.defn_
)
"m_elab.ml" 42 862 902 "m_elab.ml" 42 862 904
type(
  Expr.T.defn_ -> M_t.modunit -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 42 862 905 "m_elab.ml" 42 862 907
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
)
"m_elab.ml" 42 862 885 "m_elab.ml" 42 862 907
type(
  Expr.T.defn
)
"m_elab.ml" 42 862 915 "m_elab.ml" 42 862 921
type(
  Expr.T.time
)
"m_elab.ml" 42 862 909 "m_elab.ml" 42 862 921
type(
  Expr.T.wheredef
)
"m_elab.ml" 42 862 923 "m_elab.ml" 42 862 930
type(
  Expr.T.visibility
)
"m_elab.ml" 42 862 932 "m_elab.ml" 42 862 938
type(
  Expr.T.export
)
"m_elab.ml" 41 831 851 "m_elab.ml" 42 862 939
type(
  M_t.modunit_
)
"m_elab.ml" 43 940 960 "m_elab.ml" 43 940 962
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 43 940 963 "m_elab.ml" 43 940 965
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
)
"m_elab.ml" 41 831 850 "m_elab.ml" 43 940 966
type(
  M_t.modunit
)
"m_elab.ml" 44 967 989 "m_elab.ml" 44 967 995
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 29 405 420 "m_elab.ml" 29 405 426
)
"m_elab.ml" 41 831 850 "m_elab.ml" 44 967 995
type(
  M_t.modunit list
)
"m_elab.ml" 45 997 1019 "m_elab.ml" 45 997 1020
type(
  int
)
"m_elab.ml" 45 997 1016 "m_elab.ml" 45 997 1020
type(
  Expr.T.expr_
)
"m_elab.ml" 45 997 1021 "m_elab.ml" 45 997 1023
type(
  Expr.T.expr_ -> M_t.modunit -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 45 997 1024 "m_elab.ml" 45 997 1026
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
)
"m_elab.ml" 45 997 1016 "m_elab.ml" 45 997 1026
type(
  Expr.T.expr
)
"m_elab.ml" 41 831 849 "m_elab.ml" 45 997 1027
type(
  M_t.modunit list * Expr.T.expr
)
"m_elab.ml" 37 703 717 "m_elab.ml" 45 997 1027
type(
  M_t.modunit list * Expr.T.expr
)
"m_elab.ml" 47 1043 1059 "m_elab.ml" 47 1043 1060
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def h "m_elab.ml" 48 1098 1110 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 47 1043 1069 "m_elab.ml" 47 1043 1070
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 34 545 570 "m_elab.ml" 34 545 571
)
"m_elab.ml" 47 1043 1072 "m_elab.ml" 47 1043 1079
type(
  Expr.T.visibility
)
"m_elab.ml" 47 1043 1081 "m_elab.ml" 47 1043 1087
type(
  Expr.T.time
)
"m_elab.ml" 47 1043 1063 "m_elab.ml" 47 1043 1088
type(
  Expr.T.hyp_
)
"m_elab.ml" 47 1043 1089 "m_elab.ml" 47 1043 1091
type(
  Expr.T.hyp_ -> M_t.modunit -> Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 47 1043 1092 "m_elab.ml" 47 1043 1094
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
)
"m_elab.ml" 47 1043 1063 "m_elab.ml" 47 1043 1094
type(
  Expr.T.hyp_ Property.wrapped
)
"m_elab.ml" 48 1098 1118 "m_elab.ml" 48 1098 1127
type(
  M_t.modunit list -> int -> M_t.modunit list -> M_t.modunit list
)
ident(
  def insert_ax "m_elab.ml" 48 1098 1110 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 48 1098 1128 "m_elab.ml" 48 1098 1134
type(
  M_t.modunit list
)
ident(
  def rinits "m_elab.ml" 48 1098 1135 "m_elab.ml" 64 1896 1915
)
"m_elab.ml" 48 1098 1135 "m_elab.ml" 48 1098 1136
type(
  int
)
ident(
  def n "m_elab.ml" 48 1098 1139 "m_elab.ml" 64 1896 1915
)
"m_elab.ml" 49 1148 1164 "m_elab.ml" 49 1148 1166
type(
  M_t.modunit list
)
"m_elab.ml" 49 1148 1170 "m_elab.ml" 49 1148 1178
type(
  M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref Ext.List.rev "ext.mli" 11 220 222 "ext.mli" 11 220 250
)
"m_elab.ml" 49 1148 1179 "m_elab.ml" 49 1148 1185
type(
  M_t.modunit list
)
ident(
  int_ref rinits "m_elab.ml" 48 1098 1128 "m_elab.ml" 48 1098 1134
)
"m_elab.ml" 49 1148 1170 "m_elab.ml" 49 1148 1185
type(
  M_t.modunit list
)
"m_elab.ml" 50 1186 1202 "m_elab.ml" 50 1186 1204
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 51 1215 1233 "m_elab.ml" 64 1896 1915
)
"m_elab.ml" 50 1186 1208 "m_elab.ml" 50 1186 1211
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 51 1215 1233 "m_elab.ml" 64 1896 1915
)
"m_elab.ml" 50 1186 1202 "m_elab.ml" 50 1186 1211
type(
  M_t.modunit list
)
"m_elab.ml" 51 1215 1245 "m_elab.ml" 51 1215 1247
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 50 1186 1202 "m_elab.ml" 50 1186 1204
)
"m_elab.ml" 51 1215 1245 "m_elab.ml" 51 1215 1252
type(
  M_t.modunit_
)
"m_elab.ml" 52 1258 1287 "m_elab.ml" 52 1258 1289
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 52 1258 1291 "m_elab.ml" 52 1258 1293
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 52 1258 1295 "m_elab.ml" 52 1258 1299
type(
  int
)
ident(
  def naxs "m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 52 1258 1301 "m_elab.ml" 52 1258 1304
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 52 1258 1305 "m_elab.ml" 52 1258 1313
type(
  Proof.T.proof
)
ident(
  def prf_orig "m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 52 1258 1315 "m_elab.ml" 52 1258 1319
type(
  M_t.summary
)
ident(
  def summ "m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 52 1258 1278 "m_elab.ml" 52 1258 1320
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 53 1324 1350 "m_elab.ml" 53 1324 1351
type(
  Expr.T.hyp
)
ident(
  def h "m_elab.ml" 54 1377 1399 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 53 1324 1354 "m_elab.ml" 53 1324 1361
type(
  Expr.Subst.sub -> Expr.T.hyp -> Expr.T.hyp
)
ident(
  int_ref Expr.Subst.app_hyp "expr.mli" 468 11661 11665 "expr.mli" 470 11700 11715
)
"m_elab.ml" 53 1324 1363 "m_elab.ml" 53 1324 1368
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 53 1324 1369 "m_elab.ml" 53 1324 1370
type(
  int
)
ident(
  int_ref n "m_elab.ml" 48 1098 1135 "m_elab.ml" 48 1098 1136
)
"m_elab.ml" 53 1324 1362 "m_elab.ml" 53 1324 1371
type(
  Expr.Subst.sub
)
"m_elab.ml" 53 1324 1372 "m_elab.ml" 53 1324 1373
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 47 1043 1059 "m_elab.ml" 47 1043 1060
)
"m_elab.ml" 53 1324 1354 "m_elab.ml" 53 1324 1373
type(
  Expr.T.hyp
)
"m_elab.ml" 54 1377 1403 "m_elab.ml" 54 1377 1405
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 55 1436 1458 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 54 1377 1408 "m_elab.ml" 54 1377 1419
type(
  Expr.Subst.sub -> Expr.T.sequent -> Expr.T.sequent
)
ident(
  int_ref Expr.Subst.app_sequent "expr.mli" 465 11594 11598 "expr.mli" 467 11641 11660
)
"m_elab.ml" 54 1377 1421 "m_elab.ml" 54 1377 1426
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 54 1377 1427 "m_elab.ml" 54 1377 1428
type(
  int
)
"m_elab.ml" 54 1377 1420 "m_elab.ml" 54 1377 1429
type(
  Expr.Subst.sub
)
"m_elab.ml" 54 1377 1430 "m_elab.ml" 54 1377 1432
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 52 1258 1291 "m_elab.ml" 52 1258 1293
)
"m_elab.ml" 54 1377 1408 "m_elab.ml" 54 1377 1432
type(
  Expr.T.sequent
)
"m_elab.ml" 55 1436 1462 "m_elab.ml" 55 1436 1464
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 56 1516 1538 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 55 1436 1469 "m_elab.ml" 55 1436 1471
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 54 1377 1403 "m_elab.ml" 54 1377 1405
)
"m_elab.ml" 55 1436 1487 "m_elab.ml" 55 1436 1497
type(
  Expr.T.hyp -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.cons "deque.mli" 12 187 187 "deque.mli" 12 187 219
)
"m_elab.ml" 55 1436 1498 "m_elab.ml" 55 1436 1499
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 53 1324 1350 "m_elab.ml" 53 1324 1351
)
"m_elab.ml" 55 1436 1500 "m_elab.ml" 55 1436 1502
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 54 1377 1403 "m_elab.ml" 54 1377 1405
)
"m_elab.ml" 55 1436 1500 "m_elab.ml" 55 1436 1510
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 55 1436 1487 "m_elab.ml" 55 1436 1510
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 55 1436 1467 "m_elab.ml" 55 1436 1512
type(
  Expr.T.sequent
)
"m_elab.ml" 56 1516 1542 "m_elab.ml" 56 1516 1544
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 59 1650 1672 "m_elab.ml" 61 1766 1801
)
"m_elab.ml" 57 1547 1580 "m_elab.ml" 57 1547 1582
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 52 1258 1287 "m_elab.ml" 52 1258 1289
)
"m_elab.ml" 57 1547 1584 "m_elab.ml" 57 1547 1586
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 55 1436 1462 "m_elab.ml" 55 1436 1464
)
"m_elab.ml" 57 1547 1588 "m_elab.ml" 57 1547 1592
type(
  int
)
ident(
  int_ref naxs "m_elab.ml" 52 1258 1295 "m_elab.ml" 52 1258 1299
)
"m_elab.ml" 57 1547 1593 "m_elab.ml" 57 1547 1594
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 57 1547 1595 "m_elab.ml" 57 1547 1596
type(
  int
)
"m_elab.ml" 57 1547 1588 "m_elab.ml" 57 1547 1596
type(
  int
)
"m_elab.ml" 57 1547 1598 "m_elab.ml" 57 1547 1601
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 52 1258 1301 "m_elab.ml" 52 1258 1304
)
"m_elab.ml" 57 1547 1603 "m_elab.ml" 57 1547 1611
type(
  Proof.T.proof
)
ident(
  int_ref prf_orig "m_elab.ml" 52 1258 1305 "m_elab.ml" 52 1258 1313
)
"m_elab.ml" 57 1547 1613 "m_elab.ml" 57 1547 1617
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 52 1258 1315 "m_elab.ml" 52 1258 1319
)
"m_elab.ml" 57 1547 1571 "m_elab.ml" 57 1547 1618
type(
  M_t.modunit_
)
"m_elab.ml" 57 1547 1619 "m_elab.ml" 57 1547 1621
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 57 1547 1622 "m_elab.ml" 57 1547 1624
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 50 1186 1202 "m_elab.ml" 50 1186 1204
)
"m_elab.ml" 57 1547 1571 "m_elab.ml" 57 1547 1624
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 59 1650 1672 "m_elab.ml" 59 1650 1681
type(
  M_t.modunit list -> int -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref insert_ax "m_elab.ml" 48 1098 1118 "m_elab.ml" 48 1098 1127
)
"m_elab.ml" 59 1650 1683 "m_elab.ml" 59 1650 1685
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 56 1516 1542 "m_elab.ml" 56 1516 1544
)
"m_elab.ml" 59 1650 1689 "m_elab.ml" 59 1650 1695
type(
  M_t.modunit list
)
ident(
  int_ref rinits "m_elab.ml" 48 1098 1128 "m_elab.ml" 48 1098 1134
)
"m_elab.ml" 59 1650 1682 "m_elab.ml" 59 1650 1696
type(
  M_t.modunit list
)
"m_elab.ml" 60 1697 1733 "m_elab.ml" 60 1697 1735
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 52 1258 1287 "m_elab.ml" 52 1258 1289
)
"m_elab.ml" 60 1697 1736 "m_elab.ml" 60 1697 1737
type(
  Util.hint option -> Util.hint option -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 60 1697 1738 "m_elab.ml" 60 1697 1742
type(
  Util.hint option
)
"m_elab.ml" 60 1697 1733 "m_elab.ml" 60 1697 1742
type(
  bool
)
"m_elab.ml" 60 1697 1748 "m_elab.ml" 60 1697 1749
type(
  int
)
ident(
  int_ref n "m_elab.ml" 48 1098 1135 "m_elab.ml" 48 1098 1136
)
"m_elab.ml" 60 1697 1750 "m_elab.ml" 60 1697 1751
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 60 1697 1752 "m_elab.ml" 60 1697 1753
type(
  int
)
"m_elab.ml" 60 1697 1748 "m_elab.ml" 60 1697 1753
type(
  int
)
"m_elab.ml" 60 1697 1759 "m_elab.ml" 60 1697 1760
type(
  int
)
ident(
  int_ref n "m_elab.ml" 48 1098 1135 "m_elab.ml" 48 1098 1136
)
"m_elab.ml" 60 1697 1761 "m_elab.ml" 60 1697 1762
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 60 1697 1763 "m_elab.ml" 60 1697 1764
type(
  int
)
"m_elab.ml" 60 1697 1759 "m_elab.ml" 60 1697 1764
type(
  int
)
"m_elab.ml" 60 1697 1729 "m_elab.ml" 60 1697 1765
type(
  int
)
"m_elab.ml" 61 1766 1798 "m_elab.ml" 61 1766 1801
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 50 1186 1208 "m_elab.ml" 50 1186 1211
)
"m_elab.ml" 59 1650 1672 "m_elab.ml" 61 1766 1801
type(
  M_t.modunit list
)
"m_elab.ml" 56 1516 1538 "m_elab.ml" 61 1766 1801
type(
  M_t.modunit list
)
"m_elab.ml" 55 1436 1458 "m_elab.ml" 61 1766 1801
type(
  M_t.modunit list
)
"m_elab.ml" 54 1377 1399 "m_elab.ml" 61 1766 1801
type(
  M_t.modunit list
)
"m_elab.ml" 53 1324 1346 "m_elab.ml" 61 1766 1801
type(
  M_t.modunit list
)
"m_elab.ml" 62 1802 1822 "m_elab.ml" 62 1802 1823
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 63 1827 1849 "m_elab.ml" 63 1827 1858
type(
  M_t.modunit list -> int -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref insert_ax "m_elab.ml" 48 1098 1118 "m_elab.ml" 48 1098 1127
)
"m_elab.ml" 63 1827 1860 "m_elab.ml" 63 1827 1862
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 50 1186 1202 "m_elab.ml" 50 1186 1204
)
"m_elab.ml" 63 1827 1866 "m_elab.ml" 63 1827 1872
type(
  M_t.modunit list
)
ident(
  int_ref rinits "m_elab.ml" 48 1098 1128 "m_elab.ml" 48 1098 1134
)
"m_elab.ml" 63 1827 1859 "m_elab.ml" 63 1827 1873
type(
  M_t.modunit list
)
"m_elab.ml" 63 1827 1875 "m_elab.ml" 63 1827 1876
type(
  int
)
ident(
  int_ref n "m_elab.ml" 48 1098 1135 "m_elab.ml" 48 1098 1136
)
"m_elab.ml" 63 1827 1877 "m_elab.ml" 63 1827 1878
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 63 1827 1879 "m_elab.ml" 63 1827 1887
type(
  M_t.modunit -> int
)
ident(
  int_ref M_t.hyp_size "m_t.mli" 71 1738 1738 "m_t.mli" 71 1738 1766
)
"m_elab.ml" 63 1827 1888 "m_elab.ml" 63 1827 1890
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 50 1186 1202 "m_elab.ml" 50 1186 1204
)
"m_elab.ml" 63 1827 1879 "m_elab.ml" 63 1827 1890
type(
  int
)
"m_elab.ml" 63 1827 1874 "m_elab.ml" 63 1827 1891
type(
  int
)
"m_elab.ml" 63 1827 1892 "m_elab.ml" 63 1827 1895
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 50 1186 1208 "m_elab.ml" 50 1186 1211
)
"m_elab.ml" 63 1827 1849 "m_elab.ml" 63 1827 1895
type(
  M_t.modunit list
)
"m_elab.ml" 51 1215 1233 "m_elab.ml" 64 1896 1915
type(
  M_t.modunit list
)
"m_elab.ml" 48 1098 1139 "m_elab.ml" 64 1896 1915
type(
  M_t.modunit list -> M_t.modunit list
)
"m_elab.ml" 66 1931 1947 "m_elab.ml" 66 1931 1950
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 67 1975 1987 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 66 1931 1953 "m_elab.ml" 66 1931 1962
type(
  M_t.modunit list -> int -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref insert_ax "m_elab.ml" 48 1098 1118 "m_elab.ml" 48 1098 1127
)
"m_elab.ml" 66 1931 1963 "m_elab.ml" 66 1931 1965
type(
  M_t.modunit list
)
"m_elab.ml" 66 1931 1966 "m_elab.ml" 66 1931 1967
type(
  int
)
"m_elab.ml" 66 1931 1968 "m_elab.ml" 66 1931 1971
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 31 466 478 "m_elab.ml" 31 466 481
)
"m_elab.ml" 66 1931 1953 "m_elab.ml" 66 1931 1971
type(
  M_t.modunit list
)
"m_elab.ml" 67 1975 1992 "m_elab.ml" 67 1975 1993
type(
  Expr.Subst.sub
)
"m_elab.ml" 67 1975 1995 "m_elab.ml" 67 1975 1998
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 68 2043 2055 "m_elab.ml" 68 2043 2070
)
"m_elab.ml" 67 1975 1991 "m_elab.ml" 67 1975 1999
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 67 1975 2002 "m_elab.ml" 67 1975 2022
type(
  Expr.Subst.sub -> M_t.modunit list -> Expr.Subst.sub * M_t.modunit list
)
ident(
  int_ref M_subst.app_modunits "m_subst.mli" 7 98 98 "m_subst.mli" 7 98 157
)
"m_elab.ml" 67 1975 2024 "m_elab.ml" 67 1975 2029
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 67 1975 2030 "m_elab.ml" 67 1975 2034
type(
  int
)
"m_elab.ml" 67 1975 2023 "m_elab.ml" 67 1975 2035
type(
  Expr.Subst.sub
)
"m_elab.ml" 67 1975 2036 "m_elab.ml" 67 1975 2039
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 66 1931 1947 "m_elab.ml" 66 1931 1950
)
"m_elab.ml" 67 1975 2002 "m_elab.ml" 67 1975 2039
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 68 2043 2055 "m_elab.ml" 68 2043 2059
type(
  M_t.modunit list -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref spin "m_elab.ml" 29 405 415 "m_elab.ml" 29 405 419
)
"m_elab.ml" 68 2043 2060 "m_elab.ml" 68 2043 2066
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 34 545 562 "m_elab.ml" 34 545 568
)
"m_elab.ml" 68 2043 2067 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 67 1975 1995 "m_elab.ml" 67 1975 1998
)
"m_elab.ml" 68 2043 2055 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
"m_elab.ml" 67 1975 1987 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
"m_elab.ml" 66 1931 1943 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
"m_elab.ml" 48 1098 1110 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
"m_elab.ml" 47 1043 1055 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
"m_elab.ml" 34 545 557 "m_elab.ml" 68 2043 2070
type(
  M_t.modunit list
)
"m_elab.ml" 69 2071 2081 "m_elab.ml" 69 2071 2082
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 70 2086 2098 "m_elab.ml" 70 2086 2102
type(
  M_t.modunit list -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref spin "m_elab.ml" 29 405 415 "m_elab.ml" 29 405 419
)
"m_elab.ml" 70 2086 2104 "m_elab.ml" 70 2086 2106
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 31 466 472 "m_elab.ml" 31 466 474
)
"m_elab.ml" 70 2086 2110 "m_elab.ml" 70 2086 2116
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 29 405 420 "m_elab.ml" 29 405 426
)
"m_elab.ml" 70 2086 2103 "m_elab.ml" 70 2086 2117
type(
  M_t.modunit list
)
"m_elab.ml" 70 2086 2118 "m_elab.ml" 70 2086 2121
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 31 466 478 "m_elab.ml" 31 466 481
)
"m_elab.ml" 70 2086 2098 "m_elab.ml" 70 2086 2121
type(
  M_t.modunit list
)
"m_elab.ml" 32 485 493 "m_elab.ml" 71 2122 2133
type(
  M_t.modunit list
)
"m_elab.ml" 29 405 429 "m_elab.ml" 71 2122 2133
type(
  M_t.modunit list -> M_t.modunit list
)
"m_elab.ml" 73 2139 2141 "m_elab.ml" 73 2139 2145
type(
  M_t.modunit list -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref spin "m_elab.ml" 29 405 415 "m_elab.ml" 29 405 419
)
"m_elab.ml" 73 2139 2146 "m_elab.ml" 73 2139 2148
type(
  M_t.modunit list
)
"m_elab.ml" 73 2139 2149 "m_elab.ml" 73 2139 2153
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 28 378 398 "m_elab.ml" 28 378 402
)
"m_elab.ml" 73 2139 2141 "m_elab.ml" 73 2139 2153
type(
  M_t.modunit list
)
"m_elab.ml" 29 405 407 "m_elab.ml" 73 2139 2153
type(
  M_t.modunit list
)
"m_elab.ml" 77 2237 2241 "m_elab.ml" 77 2237 2253
type(
  int ref
)
ident(
  def salt_counter "m_elab.ml" 78 2262 2262 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 77 2237 2256 "m_elab.ml" 77 2237 2259
type(
  int -> int ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 77 2237 2260 "m_elab.ml" 77 2237 2261
type(
  int
)
"m_elab.ml" 77 2237 2256 "m_elab.ml" 77 2237 2261
type(
  int ref
)
"m_elab.ml" 78 2262 2266 "m_elab.ml" 78 2262 2270
type(
  string Property.wrapped -> string Property.wrapped
)
ident(
  def salt "m_elab.ml" 83 2362 2362 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 78 2262 2271 "m_elab.ml" 78 2262 2276
type(
  string Property.wrapped
)
ident(
  def oname "m_elab.ml" 79 2279 2281 "m_elab.ml" 80 2300 2359
)
"m_elab.ml" 79 2279 2281 "m_elab.ml" 79 2279 2285
type(
  int ref -> unit
)
ident(
  int_ref Stdlib.incr "stdlib.mli" 1227 46731 46731 "stdlib.mli" 1227 46731 46772
)
"m_elab.ml" 79 2279 2286 "m_elab.ml" 79 2279 2298
type(
  int ref
)
ident(
  int_ref salt_counter "m_elab.ml" 77 2237 2241 "m_elab.ml" 77 2237 2253
)
"m_elab.ml" 79 2279 2281 "m_elab.ml" 79 2279 2298
type(
  unit
)
"m_elab.ml" 80 2300 2303 "m_elab.ml" 80 2300 2308
type(
  string Property.wrapped
)
ident(
  int_ref oname "m_elab.ml" 78 2262 2271 "m_elab.ml" 78 2262 2276
)
"m_elab.ml" 80 2300 2303 "m_elab.ml" 80 2300 2313
type(
  string
)
"m_elab.ml" 80 2300 2314 "m_elab.ml" 80 2300 2315
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 80 2300 2316 "m_elab.ml" 80 2300 2319
type(
  string
)
"m_elab.ml" 80 2300 2320 "m_elab.ml" 80 2300 2321
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 80 2300 2322 "m_elab.ml" 80 2300 2335
type(
  int -> string
)
ident(
  int_ref Stdlib.string_of_int "stdlib.mli" 750 27897 27897 "stdlib.mli" 750 27897 27930
)
"m_elab.ml" 80 2300 2336 "m_elab.ml" 80 2300 2337
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 80 2300 2337 "m_elab.ml" 80 2300 2349
type(
  int ref
)
ident(
  int_ref salt_counter "m_elab.ml" 77 2237 2241 "m_elab.ml" 77 2237 2253
)
"m_elab.ml" 80 2300 2336 "m_elab.ml" 80 2300 2349
type(
  int
)
"m_elab.ml" 80 2300 2322 "m_elab.ml" 80 2300 2349
type(
  string
)
"m_elab.ml" 80 2300 2316 "m_elab.ml" 80 2300 2349
type(
  string
)
"m_elab.ml" 80 2300 2302 "m_elab.ml" 80 2300 2350
type(
  string
)
"m_elab.ml" 80 2300 2351 "m_elab.ml" 80 2300 2353
type(
  string -> string Property.wrapped -> string Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 80 2300 2354 "m_elab.ml" 80 2300 2359
type(
  string Property.wrapped
)
ident(
  int_ref oname "m_elab.ml" 78 2262 2271 "m_elab.ml" 78 2262 2276
)
"m_elab.ml" 80 2300 2302 "m_elab.ml" 80 2300 2359
type(
  string Property.wrapped
)
"m_elab.ml" 79 2279 2281 "m_elab.ml" 80 2300 2359
type(
  string Property.wrapped
)
"m_elab.ml" 83 2362 2369 "m_elab.ml" 83 2362 2378
ident(
  def StringMap "m_elab.ml" 83 2362 2393 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 84 2418 2425 "m_elab.ml" 84 2418 2434
ident(
  def StringSet "m_elab.ml" 84 2418 2449 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 88 2486 2493 "m_elab.ml" 88 2486 2495
ident(
  def HC "m_elab.ml" 91 2570 2573 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 90 2521 2527 "m_elab.ml" 90 2521 2534
type(
  'a Property.wrapped -> 'a Property.wrapped -> int
)
ident(
  def compare "m_elab.ml" 90 2521 2569 "m_elab.ml" 91 2570 2573
)
"m_elab.ml" 90 2521 2535 "m_elab.ml" 90 2521 2536
type(
  'a Property.wrapped
)
ident(
  def x "m_elab.ml" 90 2521 2537 "m_elab.ml" 90 2521 2569
)
"m_elab.ml" 90 2521 2537 "m_elab.ml" 90 2521 2538
type(
  'a Property.wrapped
)
ident(
  def y "m_elab.ml" 90 2521 2541 "m_elab.ml" 90 2521 2569
)
"m_elab.ml" 90 2521 2541 "m_elab.ml" 90 2521 2555
type(
  'a -> 'a -> int
)
ident(
  int_ref Stdlib.compare "stdlib.mli" 162 6792 6792 "stdlib.mli" 162 6792 6839
)
"m_elab.ml" 90 2521 2556 "m_elab.ml" 90 2521 2557
type(
  'a Property.wrapped
)
ident(
  int_ref x "m_elab.ml" 90 2521 2535 "m_elab.ml" 90 2521 2536
)
"m_elab.ml" 90 2521 2556 "m_elab.ml" 90 2521 2562
type(
  'a
)
"m_elab.ml" 90 2521 2563 "m_elab.ml" 90 2521 2564
type(
  'a Property.wrapped
)
ident(
  int_ref y "m_elab.ml" 90 2521 2537 "m_elab.ml" 90 2521 2538
)
"m_elab.ml" 90 2521 2563 "m_elab.ml" 90 2521 2569
type(
  'a
)
"m_elab.ml" 90 2521 2541 "m_elab.ml" 90 2521 2569
type(
  int
)
"m_elab.ml" 93 2575 2582 "m_elab.ml" 93 2575 2589
ident(
  def HintMap "m_elab.ml" 93 2575 2604 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 94 2625 2632 "m_elab.ml" 94 2625 2639
ident(
  def HintSet "m_elab.ml" 94 2625 2654 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 97 2677 2681 "m_elab.ml" 97 2677 2698
type(
  M_t.mule -> StringSet.t
)
ident(
  def module_parameters "m_elab.ml" 120 3608 3608 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 97 2677 2700 "m_elab.ml" 97 2677 2710
type(
  M_t.mule
)
type(
  M_t.mule
)
ident(
  def tla_module "m_elab.ml" 102 2890 2894 "m_elab.ml" 117 3558 3605
)
"m_elab.ml" 102 2890 2902 "m_elab.ml" 102 2890 2906
type(
  StringSet.t -> M_t.modunit_ Property.wrapped list -> StringSet.t
)
ident(
  def scan "m_elab.ml" 102 2890 2894 "m_elab.ml" 117 3558 3605
)
"m_elab.ml" 102 2890 2907 "m_elab.ml" 102 2890 2913
type(
  StringSet.t
)
ident(
  def params "m_elab.ml" 102 2890 2916 "m_elab.ml" 116 3518 3554
)
"m_elab.ml" 103 2925 2935 "m_elab.ml" 103 2925 2937
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 103 2925 2941 "m_elab.ml" 103 2925 2947
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 102 2890 2907 "m_elab.ml" 102 2890 2913
)
"m_elab.ml" 104 2948 2958 "m_elab.ml" 104 2948 2969
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def module_unit "m_elab.ml" 105 2989 3001 "m_elab.ml" 116 3518 3554
)
"m_elab.ml" 104 2948 2973 "m_elab.ml" 104 2948 2985
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  def module_units "m_elab.ml" 105 2989 3001 "m_elab.ml" 116 3518 3554
)
"m_elab.ml" 104 2948 2958 "m_elab.ml" 104 2948 2985
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 105 2989 3005 "m_elab.ml" 105 2989 3011
type(
  StringSet.t
)
ident(
  def params "m_elab.ml" 116 3518 3530 "m_elab.ml" 116 3518 3554
)
"m_elab.ml" 105 2989 3026 "m_elab.ml" 105 2989 3037
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref module_unit "m_elab.ml" 104 2948 2958 "m_elab.ml" 104 2948 2969
)
"m_elab.ml" 105 2989 3026 "m_elab.ml" 105 2989 3042
type(
  M_t.modunit_
)
"m_elab.ml" 106 3048 3076 "m_elab.ml" 106 3048 3085
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  def constants "m_elab.ml" 107 3089 3109 "m_elab.ml" 109 3207 3260
)
"m_elab.ml" 106 3048 3066 "m_elab.ml" 106 3048 3085
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 107 3089 3113 "m_elab.ml" 107 3089 3114
type(
  StringSet.t -> StringSet.elt Property.wrapped * 'a -> StringSet.t
)
ident(
  def f "m_elab.ml" 109 3207 3227 "m_elab.ml" 109 3207 3260
)
"m_elab.ml" 107 3089 3121 "m_elab.ml" 107 3089 3127
type(
  StringSet.t
)
ident(
  def params "m_elab.ml" 107 3089 3128 "m_elab.ml" 108 3141 3203
)
"m_elab.ml" 107 3089 3129 "m_elab.ml" 107 3089 3133
type(
  StringSet.elt Property.wrapped
)
ident(
  def name "m_elab.ml" 108 3141 3173 "m_elab.ml" 108 3141 3203
)
"m_elab.ml" 107 3089 3135 "m_elab.ml" 107 3089 3136
type(
  'a
)
"m_elab.ml" 107 3089 3128 "m_elab.ml" 107 3089 3137
type(
  StringSet.elt Property.wrapped * 'a
)
"m_elab.ml" 108 3141 3173 "m_elab.ml" 108 3141 3186
type(
  StringSet.elt -> StringSet.t -> StringSet.t
)
ident(
  int_ref StringSet.add "set.mli" 83 3129 3133 "set.mli" 83 3129 3155
)
"m_elab.ml" 108 3141 3187 "m_elab.ml" 108 3141 3191
type(
  StringSet.elt Property.wrapped
)
ident(
  int_ref name "m_elab.ml" 107 3089 3129 "m_elab.ml" 107 3089 3133
)
"m_elab.ml" 108 3141 3187 "m_elab.ml" 108 3141 3196
type(
  StringSet.elt
)
"m_elab.ml" 108 3141 3197 "m_elab.ml" 108 3141 3203
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 107 3089 3121 "m_elab.ml" 107 3089 3127
)
"m_elab.ml" 108 3141 3173 "m_elab.ml" 108 3141 3203
type(
  StringSet.t
)
"m_elab.ml" 107 3089 3117 "m_elab.ml" 108 3141 3203
type(
  StringSet.t -> StringSet.elt Property.wrapped * 'a -> StringSet.t
)
"m_elab.ml" 109 3207 3227 "m_elab.ml" 109 3207 3241
type(
  (StringSet.t -> Util.hint * Expr.T.shape -> StringSet.t) ->
  StringSet.t -> (Util.hint * Expr.T.shape) list -> StringSet.t
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"m_elab.ml" 109 3207 3242 "m_elab.ml" 109 3207 3243
type(
  StringSet.t -> Util.hint * Expr.T.shape -> StringSet.t
)
ident(
  int_ref f "m_elab.ml" 107 3089 3113 "m_elab.ml" 107 3089 3114
)
"m_elab.ml" 109 3207 3244 "m_elab.ml" 109 3207 3250
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 102 2890 2907 "m_elab.ml" 102 2890 2913
)
"m_elab.ml" 109 3207 3251 "m_elab.ml" 109 3207 3260
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  int_ref constants "m_elab.ml" 106 3048 3076 "m_elab.ml" 106 3048 3085
)
"m_elab.ml" 109 3207 3227 "m_elab.ml" 109 3207 3260
type(
  StringSet.t
)
"m_elab.ml" 107 3089 3109 "m_elab.ml" 109 3207 3260
type(
  StringSet.t
)
"m_elab.ml" 110 3261 3289 "m_elab.ml" 110 3261 3298
type(
  Util.hints
)
ident(
  def variables "m_elab.ml" 111 3302 3322 "m_elab.ml" 113 3415 3468
)
"m_elab.ml" 110 3261 3279 "m_elab.ml" 110 3261 3298
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 111 3302 3326 "m_elab.ml" 111 3302 3327
type(
  StringSet.t -> StringSet.elt Property.wrapped -> StringSet.t
)
ident(
  def f "m_elab.ml" 113 3415 3435 "m_elab.ml" 113 3415 3468
)
"m_elab.ml" 111 3302 3334 "m_elab.ml" 111 3302 3340
type(
  StringSet.t
)
ident(
  def params "m_elab.ml" 111 3302 3341 "m_elab.ml" 112 3349 3411
)
"m_elab.ml" 111 3302 3341 "m_elab.ml" 111 3302 3345
type(
  StringSet.elt Property.wrapped
)
ident(
  def name "m_elab.ml" 112 3349 3381 "m_elab.ml" 112 3349 3411
)
"m_elab.ml" 112 3349 3381 "m_elab.ml" 112 3349 3394
type(
  StringSet.elt -> StringSet.t -> StringSet.t
)
ident(
  int_ref StringSet.add "set.mli" 83 3129 3133 "set.mli" 83 3129 3155
)
"m_elab.ml" 112 3349 3395 "m_elab.ml" 112 3349 3399
type(
  StringSet.elt Property.wrapped
)
ident(
  int_ref name "m_elab.ml" 111 3302 3341 "m_elab.ml" 111 3302 3345
)
"m_elab.ml" 112 3349 3395 "m_elab.ml" 112 3349 3404
type(
  StringSet.elt
)
"m_elab.ml" 112 3349 3405 "m_elab.ml" 112 3349 3411
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 111 3302 3334 "m_elab.ml" 111 3302 3340
)
"m_elab.ml" 112 3349 3381 "m_elab.ml" 112 3349 3411
type(
  StringSet.t
)
"m_elab.ml" 111 3302 3330 "m_elab.ml" 112 3349 3411
type(
  StringSet.t -> StringSet.elt Property.wrapped -> StringSet.t
)
"m_elab.ml" 113 3415 3435 "m_elab.ml" 113 3415 3449
type(
  (StringSet.t -> Util.hint -> StringSet.t) ->
  StringSet.t -> Util.hints -> StringSet.t
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"m_elab.ml" 113 3415 3450 "m_elab.ml" 113 3415 3451
type(
  StringSet.t -> Util.hint -> StringSet.t
)
ident(
  int_ref f "m_elab.ml" 111 3302 3326 "m_elab.ml" 111 3302 3327
)
"m_elab.ml" 113 3415 3452 "m_elab.ml" 113 3415 3458
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 102 2890 2907 "m_elab.ml" 102 2890 2913
)
"m_elab.ml" 113 3415 3459 "m_elab.ml" 113 3415 3468
type(
  Util.hints
)
ident(
  int_ref variables "m_elab.ml" 110 3261 3289 "m_elab.ml" 110 3261 3298
)
"m_elab.ml" 113 3415 3435 "m_elab.ml" 113 3415 3468
type(
  StringSet.t
)
"m_elab.ml" 111 3302 3322 "m_elab.ml" 113 3415 3468
type(
  StringSet.t
)
"m_elab.ml" 114 3469 3487 "m_elab.ml" 114 3469 3488
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 114 3469 3492 "m_elab.ml" 114 3469 3498
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 102 2890 2907 "m_elab.ml" 102 2890 2913
)
"m_elab.ml" 105 2989 3014 "m_elab.ml" 115 3499 3514
type(
  StringSet.t
)
"m_elab.ml" 116 3518 3530 "m_elab.ml" 116 3518 3534
type(
  StringSet.t -> M_t.modunit_ Property.wrapped list -> StringSet.t
)
ident(
  int_ref scan "m_elab.ml" 102 2890 2902 "m_elab.ml" 102 2890 2906
)
"m_elab.ml" 116 3518 3535 "m_elab.ml" 116 3518 3541
type(
  StringSet.t
)
ident(
  int_ref params "m_elab.ml" 105 2989 3005 "m_elab.ml" 105 2989 3011
)
"m_elab.ml" 116 3518 3542 "m_elab.ml" 116 3518 3554
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref module_units "m_elab.ml" 104 2948 2973 "m_elab.ml" 104 2948 2985
)
"m_elab.ml" 116 3518 3530 "m_elab.ml" 116 3518 3554
type(
  StringSet.t
)
"m_elab.ml" 105 2989 3001 "m_elab.ml" 116 3518 3554
type(
  StringSet.t
)
"m_elab.ml" 102 2890 2916 "m_elab.ml" 116 3518 3554
type(
  M_t.modunit_ Property.wrapped list -> StringSet.t
)
"m_elab.ml" 117 3558 3564 "m_elab.ml" 117 3558 3568
type(
  StringSet.t -> M_t.modunit list -> StringSet.t
)
ident(
  int_ref scan "m_elab.ml" 102 2890 2902 "m_elab.ml" 102 2890 2906
)
"m_elab.ml" 117 3558 3569 "m_elab.ml" 117 3558 3584
type(
  StringSet.t
)
ident(
  int_ref StringSet.empty "set.mli" 74 2915 2919 "set.mli" 74 2915 2931
)
"m_elab.ml" 117 3558 3585 "m_elab.ml" 117 3558 3595
type(
  M_t.mule
)
ident(
  int_ref tla_module "m_elab.ml" 97 2677 2700 "m_elab.ml" 97 2677 2710
)
"m_elab.ml" 117 3558 3585 "m_elab.ml" 117 3558 3600
type(
  M_t.mule_
)
"m_elab.ml" 117 3558 3585 "m_elab.ml" 117 3558 3605
type(
  M_t.modunit list
)
"m_elab.ml" 117 3558 3564 "m_elab.ml" 117 3558 3605
type(
  StringSet.t
)
"m_elab.ml" 102 2890 2894 "m_elab.ml" 117 3558 3605
type(
  StringSet.t
)
"m_elab.ml" 120 3608 3612 "m_elab.ml" 120 3608 3636
type(
  Expr.T.instance Property.wrapped -> M_t.modctx -> M_t.mule
)
ident(
  def find_instantiated_module "m_elab.ml" 136 4107 4107 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 121 3637 3646 "m_elab.ml" 121 3637 3654
type(
  Expr.T.instance Property.wrapped
)
type(
  Expr.T.instance Property.wrapped
)
ident(
  def instance "m_elab.ml" 122 3681 3689 "m_elab.ml" 133 4086 4104
)
"m_elab.ml" 122 3681 3690 "m_elab.ml" 122 3681 3693
type(
  M_t.modctx
)
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 124 3731 3735 "m_elab.ml" 133 4086 4104
)
"m_elab.ml" 124 3731 3739 "m_elab.ml" 124 3731 3750
type(
  string
)
ident(
  def module_name "m_elab.ml" 125 3779 3783 "m_elab.ml" 133 4086 4104
)
"m_elab.ml" 124 3731 3753 "m_elab.ml" 124 3731 3761
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 121 3637 3646 "m_elab.ml" 121 3637 3654
)
"m_elab.ml" 124 3731 3753 "m_elab.ml" 124 3731 3766
type(
  Expr.T.instance
)
"m_elab.ml" 124 3731 3753 "m_elab.ml" 124 3731 3775
type(
  string
)
"m_elab.ml" 125 3779 3787 "m_elab.ml" 125 3779 3799
type(
  bool
)
ident(
  def found_module "m_elab.ml" 126 3835 3839 "m_elab.ml" 133 4086 4104
)
"m_elab.ml" 125 3779 3802 "m_elab.ml" 125 3779 3815
type(
  StringMap.key -> M_t.mule StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 125 3779 3816 "m_elab.ml" 125 3779 3827
type(
  StringMap.key
)
ident(
  int_ref module_name "m_elab.ml" 124 3731 3739 "m_elab.ml" 124 3731 3750
)
"m_elab.ml" 125 3779 3828 "m_elab.ml" 125 3779 3831
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 122 3681 3690 "m_elab.ml" 122 3681 3693
)
"m_elab.ml" 125 3779 3802 "m_elab.ml" 125 3779 3831
type(
  bool
)
"m_elab.ml" 126 3835 3842 "m_elab.ml" 126 3835 3845
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"m_elab.ml" 126 3835 3846 "m_elab.ml" 126 3835 3858
type(
  bool
)
ident(
  int_ref found_module "m_elab.ml" 125 3779 3787 "m_elab.ml" 125 3779 3799
)
"m_elab.ml" 126 3835 3842 "m_elab.ml" 126 3835 3858
type(
  bool
)
"m_elab.ml" 127 3870 3878 "m_elab.ml" 127 3870 3888
type(
  ?at:Expr.T.instance Property.wrapped ->
  (string -> unit, unit, string, unit) format4 -> string -> unit
)
ident(
  int_ref Errors.err "errors.mli" 28 640 640 "errors.mli" 30 673 715
)
"m_elab.ml" 127 3870 3893 "m_elab.ml" 127 3870 3901
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 121 3637 3646 "m_elab.ml" 121 3637 3654
)
type(
  Expr.T.instance Property.wrapped option
)
"m_elab.ml" 128 3902 3914 "m_elab.ml" 128 3902 3935
type(
  (string -> unit, unit, string, unit) format4
)
"m_elab.ml" 129 3936 3948 "m_elab.ml" 129 3936 3959
type(
  string
)
ident(
  int_ref module_name "m_elab.ml" 124 3731 3739 "m_elab.ml" 124 3731 3750
)
"m_elab.ml" 127 3870 3878 "m_elab.ml" 129 3936 3959
type(
  unit
)
"m_elab.ml" 130 3961 3969 "m_elab.ml" 130 3961 3977
type(
  string -> M_t.mule
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 130 3961 3978 "m_elab.ml" 130 3961 4013
type(
  string
)
"m_elab.ml" 130 3961 3969 "m_elab.ml" 130 3961 4013
type(
  M_t.mule
)
"m_elab.ml" 126 3835 3864 "m_elab.ml" 131 4014 4021
type(
  M_t.mule
)
"m_elab.ml" 132 4027 4039 "m_elab.ml" 132 4027 4049
type(
  M_t.mule
)
ident(
  def tla_module "m_elab.ml" 133 4086 4094 "m_elab.ml" 133 4086 4104
)
"m_elab.ml" 132 4027 4052 "m_elab.ml" 132 4027 4066
type(
  StringMap.key -> M_t.mule StringMap.t -> M_t.mule
)
ident(
  int_ref StringMap.find "map.mli" 278 11157 11161 "map.mli" 278 11157 11188
)
"m_elab.ml" 132 4027 4067 "m_elab.ml" 132 4027 4078
type(
  StringMap.key
)
ident(
  int_ref module_name "m_elab.ml" 124 3731 3739 "m_elab.ml" 124 3731 3750
)
"m_elab.ml" 132 4027 4079 "m_elab.ml" 132 4027 4082
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 122 3681 3690 "m_elab.ml" 122 3681 3693
)
"m_elab.ml" 132 4027 4052 "m_elab.ml" 132 4027 4082
type(
  M_t.mule
)
"m_elab.ml" 133 4086 4094 "m_elab.ml" 133 4086 4104
type(
  M_t.mule
)
ident(
  int_ref tla_module "m_elab.ml" 132 4027 4039 "m_elab.ml" 132 4027 4049
)
"m_elab.ml" 132 4027 4035 "m_elab.ml" 133 4086 4104
type(
  M_t.mule
)
"m_elab.ml" 126 3835 3839 "m_elab.ml" 133 4086 4104
type(
  M_t.mule
)
"m_elab.ml" 125 3779 3783 "m_elab.ml" 133 4086 4104
type(
  M_t.mule
)
"m_elab.ml" 124 3731 3735 "m_elab.ml" 133 4086 4104
type(
  M_t.mule
)
"m_elab.ml" 136 4107 4111 "m_elab.ml" 136 4107 4139
type(
  Expr.T.instance Property.wrapped -> Expr.T.expr HintMap.t
)
ident(
  def instance_substitution_to_map "m_elab.ml" 147 4528 4528 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 137 4140 4149 "m_elab.ml" 137 4140 4157
type(
  Expr.T.instance Property.wrapped
)
type(
  Expr.T.instance Property.wrapped
)
ident(
  def instance "m_elab.ml" 139 4252 4256 "m_elab.ml" 144 4505 4525
)
"m_elab.ml" 139 4252 4261 "m_elab.ml" 139 4252 4282
type(
  (Util.hint * Expr.T.expr) list
)
type(
  (Util.hint * Expr.T.expr) list
)
ident(
  def instance_substitution "m_elab.ml" 141 4347 4351 "m_elab.ml" 144 4505 4525
)
"m_elab.ml" 140 4313 4321 "m_elab.ml" 140 4313 4329
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 137 4140 4149 "m_elab.ml" 137 4140 4157
)
"m_elab.ml" 140 4313 4321 "m_elab.ml" 140 4313 4334
type(
  Expr.T.instance
)
"m_elab.ml" 140 4313 4321 "m_elab.ml" 140 4313 4343
type(
  (Util.hint * Expr.T.expr) list
)
"m_elab.ml" 141 4347 4355 "m_elab.ml" 141 4347 4356
type(
  'a HintMap.t -> HintMap.key * 'a -> 'a HintMap.t
)
ident(
  def f "m_elab.ml" 142 4414 4418 "m_elab.ml" 144 4505 4525
)
"m_elab.ml" 141 4347 4363 "m_elab.ml" 141 4347 4368
type(
  'a HintMap.t
)
ident(
  def subst "m_elab.ml" 141 4347 4369 "m_elab.ml" 141 4347 4410
)
"m_elab.ml" 141 4347 4370 "m_elab.ml" 141 4347 4373
type(
  HintMap.key
)
ident(
  def var "m_elab.ml" 141 4347 4384 "m_elab.ml" 141 4347 4410
)
"m_elab.ml" 141 4347 4375 "m_elab.ml" 141 4347 4379
type(
  'a
)
ident(
  def expr "m_elab.ml" 141 4347 4384 "m_elab.ml" 141 4347 4410
)
"m_elab.ml" 141 4347 4369 "m_elab.ml" 141 4347 4380
type(
  HintMap.key * 'a
)
"m_elab.ml" 141 4347 4384 "m_elab.ml" 141 4347 4395
type(
  HintMap.key -> 'a -> 'a HintMap.t -> 'a HintMap.t
)
ident(
  int_ref HintMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 141 4347 4396 "m_elab.ml" 141 4347 4399
type(
  HintMap.key
)
ident(
  int_ref var "m_elab.ml" 141 4347 4370 "m_elab.ml" 141 4347 4373
)
"m_elab.ml" 141 4347 4400 "m_elab.ml" 141 4347 4404
type(
  'a
)
ident(
  int_ref expr "m_elab.ml" 141 4347 4375 "m_elab.ml" 141 4347 4379
)
"m_elab.ml" 141 4347 4405 "m_elab.ml" 141 4347 4410
type(
  'a HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 141 4347 4363 "m_elab.ml" 141 4347 4368
)
"m_elab.ml" 141 4347 4384 "m_elab.ml" 141 4347 4410
type(
  'a HintMap.t
)
"m_elab.ml" 141 4347 4359 "m_elab.ml" 141 4347 4410
type(
  'a HintMap.t -> HintMap.key * 'a -> 'a HintMap.t
)
"m_elab.ml" 142 4414 4422 "m_elab.ml" 142 4414 4438
type(
  Expr.T.expr HintMap.t
)
ident(
  def substitution_map "m_elab.ml" 144 4505 4509 "m_elab.ml" 144 4505 4525
)
"m_elab.ml" 143 4441 4449 "m_elab.ml" 143 4441 4463
type(
  (Expr.T.expr HintMap.t ->
   HintMap.key * Expr.T.expr -> Expr.T.expr HintMap.t) ->
  Expr.T.expr HintMap.t ->
  (HintMap.key * Expr.T.expr) list -> Expr.T.expr HintMap.t
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"m_elab.ml" 143 4441 4464 "m_elab.ml" 143 4441 4465
type(
  Expr.T.expr HintMap.t -> HintMap.key * Expr.T.expr -> Expr.T.expr HintMap.t
)
ident(
  int_ref f "m_elab.ml" 141 4347 4355 "m_elab.ml" 141 4347 4356
)
"m_elab.ml" 143 4441 4466 "m_elab.ml" 143 4441 4479
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref HintMap.empty "map.mli" 73 2950 2954 "map.mli" 73 2950 2969
)
"m_elab.ml" 143 4441 4480 "m_elab.ml" 143 4441 4501
type(
  (HintMap.key * Expr.T.expr) list
)
ident(
  int_ref instance_substitution "m_elab.ml" 139 4252 4261 "m_elab.ml" 139 4252 4282
)
"m_elab.ml" 143 4441 4449 "m_elab.ml" 143 4441 4501
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 144 4505 4509 "m_elab.ml" 144 4505 4525
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref substitution_map "m_elab.ml" 142 4414 4422 "m_elab.ml" 142 4414 4438
)
"m_elab.ml" 142 4414 4418 "m_elab.ml" 144 4505 4525
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 141 4347 4351 "m_elab.ml" 144 4505 4525
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 139 4252 4256 "m_elab.ml" 144 4505 4525
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 147 4528 4532 "m_elab.ml" 147 4528 4580
type(
  'a HintMap.t -> StringSet.t -> string -> unit
)
ident(
  def assert_instance_substitutes_declared_identifiers "m_elab.ml" 167 5267 5267 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 148 4581 4589 "m_elab.ml" 148 4581 4605
type(
  'a HintMap.t
)
ident(
  def substitution_map "m_elab.ml" 149 4606 4614 "m_elab.ml" 164 5225 5264
)
"m_elab.ml" 149 4606 4614 "m_elab.ml" 149 4606 4631
type(
  StringSet.t
)
ident(
  def module_parameters "m_elab.ml" 150 4632 4640 "m_elab.ml" 164 5225 5264
)
"m_elab.ml" 150 4632 4641 "m_elab.ml" 150 4632 4652
type(
  string
)
type(
  string
)
ident(
  def module_name "m_elab.ml" 155 4786 4790 "m_elab.ml" 164 5225 5264
)
"m_elab.ml" 155 4786 4794 "m_elab.ml" 155 4786 4799
type(
  Util.hint -> 'b -> unit
)
ident(
  def check "m_elab.ml" 164 5225 5229 "m_elab.ml" 164 5225 5264
)
"m_elab.ml" 155 4786 4801 "m_elab.ml" 155 4786 4803
type(
  Util.hint
)
type(
  Util.hint
)
ident(
  def op "m_elab.ml" 155 4786 4811 "m_elab.ml" 162 5202 5213
)
"m_elab.ml" 155 4786 4811 "m_elab.ml" 155 4786 4812
type(
  'b
)
"m_elab.ml" 156 4815 4826 "m_elab.ml" 156 4815 4829
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"m_elab.ml" 156 4815 4831 "m_elab.ml" 156 4815 4844
type(
  StringSet.elt -> StringSet.t -> bool
)
ident(
  int_ref StringSet.mem "set.mli" 80 3035 3039 "set.mli" 80 3035 3064
)
"m_elab.ml" 156 4815 4845 "m_elab.ml" 156 4815 4847
type(
  Util.hint
)
ident(
  int_ref op "m_elab.ml" 155 4786 4801 "m_elab.ml" 155 4786 4803
)
"m_elab.ml" 156 4815 4845 "m_elab.ml" 156 4815 4852
type(
  StringSet.elt
)
"m_elab.ml" 156 4815 4853 "m_elab.ml" 156 4815 4870
type(
  StringSet.t
)
ident(
  int_ref module_parameters "m_elab.ml" 149 4606 4614 "m_elab.ml" 149 4606 4631
)
"m_elab.ml" 156 4815 4830 "m_elab.ml" 156 4815 4871
type(
  bool
)
"m_elab.ml" 156 4815 4826 "m_elab.ml" 156 4815 4871
type(
  bool
)
"m_elab.ml" 157 4883 4895 "m_elab.ml" 157 4883 4905
type(
  ?at:Util.hint ->
  (string -> unit, unit, string, unit) format4 -> string -> unit
)
ident(
  int_ref Errors.err "errors.mli" 28 640 640 "errors.mli" 30 673 715
)
"m_elab.ml" 157 4883 4910 "m_elab.ml" 157 4883 4912
type(
  Util.hint
)
ident(
  int_ref op "m_elab.ml" 155 4786 4801 "m_elab.ml" 155 4786 4803
)
type(
  Util.hint option
)
"m_elab.ml" 157 4883 4913 "m_elab.ml" 157 4883 4917
type(
  (string -> unit, unit, string, unit) format4
)
"m_elab.ml" 158 4920 4936 "m_elab.ml" 158 4920 4948
type(
  string
)
"m_elab.ml" 158 4920 4949 "m_elab.ml" 158 4920 4950
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 158 4920 4951 "m_elab.ml" 158 4920 4953
type(
  Util.hint
)
ident(
  int_ref op "m_elab.ml" 155 4786 4801 "m_elab.ml" 155 4786 4803
)
"m_elab.ml" 158 4920 4951 "m_elab.ml" 158 4920 4958
type(
  StringSet.elt
)
"m_elab.ml" 158 4920 4959 "m_elab.ml" 158 4920 4960
type(
  StringSet.elt -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 158 4920 4961 "m_elab.ml" 158 4920 4988
type(
  string
)
"m_elab.ml" 158 4920 4989 "m_elab.ml" 158 4920 4990
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 159 4991 5007 "m_elab.ml" 159 4991 5019
type(
  string
)
"m_elab.ml" 159 4991 5020 "m_elab.ml" 159 4991 5021
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 159 4991 5022 "m_elab.ml" 159 4991 5033
type(
  string
)
ident(
  int_ref module_name "m_elab.ml" 150 4632 4641 "m_elab.ml" 150 4632 4652
)
"m_elab.ml" 159 4991 5034 "m_elab.ml" 159 4991 5035
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 159 4991 5036 "m_elab.ml" 159 4991 5046
type(
  string
)
"m_elab.ml" 159 4991 5047 "m_elab.ml" 159 4991 5048
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 160 5049 5065 "m_elab.ml" 160 5049 5101
type(
  string
)
"m_elab.ml" 160 5049 5102 "m_elab.ml" 160 5049 5103
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 160 5049 5104 "m_elab.ml" 160 5049 5115
type(
  string
)
ident(
  int_ref module_name "m_elab.ml" 150 4632 4641 "m_elab.ml" 150 4632 4652
)
"m_elab.ml" 160 5049 5116 "m_elab.ml" 160 5049 5117
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 160 5049 5118 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 160 5049 5104 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 160 5049 5065 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 159 4991 5036 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 159 4991 5022 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 159 4991 5007 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 158 4920 4961 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 158 4920 4951 "m_elab.ml" 160 5049 5122
type(
  string
)
"m_elab.ml" 157 4883 4918 "m_elab.ml" 160 5049 5123
type(
  string
)
"m_elab.ml" 157 4883 4895 "m_elab.ml" 160 5049 5123
type(
  unit
)
"m_elab.ml" 161 5125 5137 "m_elab.ml" 161 5125 5145
type(
  string -> unit
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 161 5125 5146 "m_elab.ml" 161 5125 5201
type(
  string
)
"m_elab.ml" 161 5125 5137 "m_elab.ml" 161 5125 5201
type(
  unit
)
"m_elab.ml" 156 4815 4877 "m_elab.ml" 162 5202 5213
type(
  unit
)
"m_elab.ml" 156 4815 4823 "m_elab.ml" 162 5202 5213
type(
  unit
)
"m_elab.ml" 164 5225 5229 "m_elab.ml" 164 5225 5241
type(
  (HintMap.key -> 'a -> unit) -> 'a HintMap.t -> unit
)
ident(
  int_ref HintMap.iter "map.mli" 154 6537 6541 "map.mli" 154 6537 6586
)
"m_elab.ml" 164 5225 5242 "m_elab.ml" 164 5225 5247
type(
  HintMap.key -> 'a -> unit
)
ident(
  int_ref check "m_elab.ml" 155 4786 4794 "m_elab.ml" 155 4786 4799
)
"m_elab.ml" 164 5225 5248 "m_elab.ml" 164 5225 5264
type(
  'a HintMap.t
)
ident(
  int_ref substitution_map "m_elab.ml" 148 4581 4589 "m_elab.ml" 148 4581 4605
)
"m_elab.ml" 164 5225 5229 "m_elab.ml" 164 5225 5264
type(
  unit
)
"m_elab.ml" 155 4786 4790 "m_elab.ml" 164 5225 5264
type(
  unit
)
"m_elab.ml" 167 5267 5271 "m_elab.ml" 167 5267 5285
type(
  Expr.T.ctx -> Util.hints -> Expr.T.ctx
)
ident(
  def extend_context "m_elab.ml" 185 5823 5823 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 168 5286 5295 "m_elab.ml" 168 5286 5297
type(
  Expr.T.ctx
)
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 169 5311 5319 "m_elab.ml" 182 5778 5820
)
"m_elab.ml" 169 5311 5320 "m_elab.ml" 169 5311 5333
type(
  Util.hints
)
type(
  Util.hints
)
ident(
  def instance_args "m_elab.ml" 177 5586 5590 "m_elab.ml" 182 5778 5820
)
"m_elab.ml" 177 5586 5594 "m_elab.ml" 177 5586 5600
type(
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Util.hint -> Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def extend "m_elab.ml" 182 5778 5782 "m_elab.ml" 182 5778 5820
)
"m_elab.ml" 177 5586 5601 "m_elab.ml" 177 5586 5603
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def cx "m_elab.ml" 177 5586 5604 "m_elab.ml" 180 5712 5738
)
"m_elab.ml" 177 5586 5604 "m_elab.ml" 177 5586 5605
type(
  Util.hint
)
ident(
  def v "m_elab.ml" 178 5608 5616 "m_elab.ml" 180 5712 5738
)
"m_elab.ml" 178 5608 5620 "m_elab.ml" 178 5608 5628
type(
  Expr.T.hyp_
)
ident(
  def fresh_op "m_elab.ml" 179 5676 5684 "m_elab.ml" 180 5712 5738
)
"m_elab.ml" 178 5608 5638 "m_elab.ml" 178 5608 5639
type(
  Util.hint
)
ident(
  int_ref v "m_elab.ml" 177 5586 5604 "m_elab.ml" 177 5586 5605
)
"m_elab.ml" 178 5608 5641 "m_elab.ml" 178 5608 5651
type(
  Expr.T.shape
)
"m_elab.ml" 178 5608 5653 "m_elab.ml" 178 5608 5660
type(
  Expr.T.kind
)
"m_elab.ml" 178 5608 5662 "m_elab.ml" 178 5608 5671
type(
  Expr.T.hdom
)
"m_elab.ml" 178 5608 5631 "m_elab.ml" 178 5608 5672
type(
  Expr.T.hyp_
)
"m_elab.ml" 179 5676 5688 "m_elab.ml" 179 5676 5692
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def decl "m_elab.ml" 180 5712 5720 "m_elab.ml" 180 5712 5738
)
"m_elab.ml" 179 5676 5695 "m_elab.ml" 179 5676 5703
type(
  Expr.T.hyp_
)
ident(
  int_ref fresh_op "m_elab.ml" 178 5608 5620 "m_elab.ml" 178 5608 5628
)
"m_elab.ml" 179 5676 5704 "m_elab.ml" 179 5676 5706
type(
  Expr.T.hyp_ -> Util.hint -> Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 179 5676 5707 "m_elab.ml" 179 5676 5708
type(
  Util.hint
)
ident(
  int_ref v "m_elab.ml" 177 5586 5604 "m_elab.ml" 177 5586 5605
)
"m_elab.ml" 179 5676 5695 "m_elab.ml" 179 5676 5708
type(
  Expr.T.hyp_ Property.wrapped
)
"m_elab.ml" 180 5712 5720 "m_elab.ml" 180 5712 5730
type(
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped -> Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref Deque.snoc "deque.mli" 13 220 220 "deque.mli" 13 220 252
)
"m_elab.ml" 180 5712 5731 "m_elab.ml" 180 5712 5733
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 177 5586 5601 "m_elab.ml" 177 5586 5603
)
"m_elab.ml" 180 5712 5734 "m_elab.ml" 180 5712 5738
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref decl "m_elab.ml" 179 5676 5688 "m_elab.ml" 179 5676 5692
)
"m_elab.ml" 180 5712 5720 "m_elab.ml" 180 5712 5738
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 179 5676 5684 "m_elab.ml" 180 5712 5738
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 178 5608 5616 "m_elab.ml" 180 5712 5738
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 182 5778 5782 "m_elab.ml" 182 5778 5796
type(
  (Expr.T.ctx -> Util.hint -> Expr.T.ctx) ->
  Expr.T.ctx -> Util.hints -> Expr.T.ctx
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"m_elab.ml" 182 5778 5797 "m_elab.ml" 182 5778 5803
type(
  Expr.T.ctx -> Util.hint -> Expr.T.ctx
)
ident(
  int_ref extend "m_elab.ml" 177 5586 5594 "m_elab.ml" 177 5586 5600
)
"m_elab.ml" 182 5778 5804 "m_elab.ml" 182 5778 5806
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 168 5286 5295 "m_elab.ml" 168 5286 5297
)
"m_elab.ml" 182 5778 5807 "m_elab.ml" 182 5778 5820
type(
  Util.hints
)
ident(
  int_ref instance_args "m_elab.ml" 169 5311 5320 "m_elab.ml" 169 5311 5333
)
"m_elab.ml" 182 5778 5782 "m_elab.ml" 182 5778 5820
type(
  Expr.T.ctx
)
"m_elab.ml" 177 5586 5590 "m_elab.ml" 182 5778 5820
type(
  Expr.T.ctx
)
"m_elab.ml" 185 5823 5827 "m_elab.ml" 185 5823 5857
type(
  Expr.T.instance Property.wrapped ->
  Expr.T.expr_ Property.wrapped HintMap.t ->
  StringSet.t ->
  Expr.T.hyp Deque.dq -> Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  def complete_with_statement_params "m_elab.ml" 208 6608 6608 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 186 5858 5866 "m_elab.ml" 186 5858 5870
type(
  Expr.T.instance Property.wrapped
)
ident(
  def inst "m_elab.ml" 187 5871 5879 "m_elab.ml" 205 6550 6605
)
"m_elab.ml" 187 5871 5879 "m_elab.ml" 187 5871 5895
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  def substitution_map "m_elab.ml" 188 5896 5904 "m_elab.ml" 205 6550 6605
)
"m_elab.ml" 188 5896 5905 "m_elab.ml" 188 5896 5922
type(
  StringSet.t
)
type(
  StringSet.t
)
ident(
  def module_parameters "m_elab.ml" 189 5937 5945 "m_elab.ml" 205 6550 6605
)
"m_elab.ml" 189 5937 5945 "m_elab.ml" 189 5937 5947
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 192 6026 6030 "m_elab.ml" 205 6550 6605
)
"m_elab.ml" 192 6026 6034 "m_elab.ml" 192 6026 6035
type(
  string ->
  Expr.T.expr_ Property.wrapped HintMap.t ->
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  def f "m_elab.ml" 205 6550 6554 "m_elab.ml" 205 6550 6605
)
"m_elab.ml" 192 6026 6036 "m_elab.ml" 192 6026 6037
type(
  string
)
ident(
  def s "m_elab.ml" 192 6026 6038 "m_elab.ml" 203 6482 6542
)
"m_elab.ml" 192 6026 6038 "m_elab.ml" 192 6026 6043
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  def subst "m_elab.ml" 193 6046 6054 "m_elab.ml" 203 6482 6542
)
"m_elab.ml" 193 6046 6057 "m_elab.ml" 193 6046 6068
type(
  HintMap.key -> Expr.T.expr_ Property.wrapped HintMap.t -> bool
)
ident(
  int_ref HintMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 193 6046 6070 "m_elab.ml" 193 6046 6071
type(
  string
)
ident(
  int_ref s "m_elab.ml" 192 6026 6036 "m_elab.ml" 192 6026 6037
)
"m_elab.ml" 193 6046 6072 "m_elab.ml" 193 6046 6074
type(
  string -> Expr.T.instance Property.wrapped -> HintMap.key
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 193 6046 6075 "m_elab.ml" 193 6046 6079
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 186 5858 5866 "m_elab.ml" 186 5858 5870
)
"m_elab.ml" 193 6046 6069 "m_elab.ml" 193 6046 6080
type(
  HintMap.key
)
"m_elab.ml" 193 6046 6081 "m_elab.ml" 193 6046 6086
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 192 6026 6038 "m_elab.ml" 192 6026 6043
)
"m_elab.ml" 193 6046 6057 "m_elab.ml" 193 6046 6086
type(
  bool
)
"m_elab.ml" 194 6092 6104 "m_elab.ml" 194 6092 6109
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 192 6026 6038 "m_elab.ml" 192 6026 6043
)
"m_elab.ml" 196 6123 6141 "m_elab.ml" 196 6123 6151
type(
  ?backwards:bool ->
  Expr.T.hyp Deque.dq -> (Expr.T.hyp -> bool) -> (int * Expr.T.hyp) option
)
ident(
  int_ref Deque.find "deque.mli" 23 579 579 "deque.mli" 23 579 652
)
"m_elab.ml" 196 6123 6152 "m_elab.ml" 196 6123 6154
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 189 5937 5945 "m_elab.ml" 189 5937 5947
)
"m_elab.ml" 196 6123 6156 "m_elab.ml" 196 6123 6178
type(
  string -> Expr.T.hyp -> bool
)
ident(
  int_ref Expr.Anon.hyp_is_named "expr.mli" 659 16894 16898 "expr.mli" 659 16894 16937
)
"m_elab.ml" 196 6123 6179 "m_elab.ml" 196 6123 6180
type(
  string
)
ident(
  int_ref s "m_elab.ml" 192 6026 6036 "m_elab.ml" 192 6026 6037
)
"m_elab.ml" 196 6123 6155 "m_elab.ml" 196 6123 6181
type(
  Expr.T.hyp -> bool
)
"m_elab.ml" 196 6123 6141 "m_elab.ml" 196 6123 6181
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 197 6187 6201 "m_elab.ml" 197 6187 6205
type(
  (int * Expr.T.hyp) option
)
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 198 6209 6225 "m_elab.ml" 198 6209 6235
type(
  ?at:Expr.T.instance Property.wrapped ->
  (string -> unit, unit, string, unit) format4 -> string -> unit
)
ident(
  int_ref Errors.err "errors.mli" 28 640 640 "errors.mli" 30 673 715
)
"m_elab.ml" 198 6209 6240 "m_elab.ml" 198 6209 6244
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 186 5858 5866 "m_elab.ml" 186 5858 5870
)
type(
  Expr.T.instance Property.wrapped option
)
"m_elab.ml" 198 6209 6245 "m_elab.ml" 198 6209 6249
type(
  (string -> unit, unit, string, unit) format4
)
"m_elab.ml" 199 6252 6272 "m_elab.ml" 199 6252 6293
type(
  string
)
"m_elab.ml" 199 6252 6294 "m_elab.ml" 199 6252 6295
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 199 6252 6296 "m_elab.ml" 199 6252 6297
type(
  string
)
ident(
  int_ref s "m_elab.ml" 192 6026 6036 "m_elab.ml" 192 6026 6037
)
"m_elab.ml" 199 6252 6298 "m_elab.ml" 199 6252 6299
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 199 6252 6300 "m_elab.ml" 199 6252 6314
type(
  string
)
"m_elab.ml" 199 6252 6315 "m_elab.ml" 199 6252 6316
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 200 6317 6337 "m_elab.ml" 200 6317 6341
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 186 5858 5866 "m_elab.ml" 186 5858 5870
)
"m_elab.ml" 200 6317 6337 "m_elab.ml" 200 6317 6346
type(
  Expr.T.instance
)
"m_elab.ml" 200 6317 6337 "m_elab.ml" 200 6317 6355
type(
  string
)
"m_elab.ml" 200 6317 6356 "m_elab.ml" 200 6317 6357
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 200 6317 6358 "m_elab.ml" 200 6317 6385
type(
  string
)
"m_elab.ml" 200 6317 6337 "m_elab.ml" 200 6317 6385
type(
  string
)
"m_elab.ml" 199 6252 6300 "m_elab.ml" 200 6317 6385
type(
  string
)
"m_elab.ml" 199 6252 6296 "m_elab.ml" 200 6317 6385
type(
  string
)
"m_elab.ml" 198 6209 6250 "m_elab.ml" 200 6317 6386
type(
  string
)
"m_elab.ml" 198 6209 6225 "m_elab.ml" 200 6317 6386
type(
  unit
)
"m_elab.ml" 201 6388 6404 "m_elab.ml" 201 6388 6412
type(
  string -> Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 201 6388 6413 "m_elab.ml" 201 6388 6457
type(
  string
)
"m_elab.ml" 201 6388 6404 "m_elab.ml" 201 6388 6457
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 198 6209 6225 "m_elab.ml" 201 6388 6457
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 202 6458 6477 "m_elab.ml" 202 6458 6478
type(
  int * Expr.T.hyp
)
"m_elab.ml" 202 6458 6472 "m_elab.ml" 202 6458 6478
type(
  (int * Expr.T.hyp) option
)
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 203 6482 6494 "m_elab.ml" 203 6482 6505
type(
  HintMap.key ->
  Expr.T.expr_ Property.wrapped ->
  Expr.T.expr_ Property.wrapped HintMap.t ->
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref HintMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 203 6482 6507 "m_elab.ml" 203 6482 6508
type(
  string
)
ident(
  int_ref s "m_elab.ml" 192 6026 6036 "m_elab.ml" 192 6026 6037
)
"m_elab.ml" 203 6482 6509 "m_elab.ml" 203 6482 6511
type(
  string -> Expr.T.instance Property.wrapped -> HintMap.key
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 203 6482 6512 "m_elab.ml" 203 6482 6516
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 186 5858 5866 "m_elab.ml" 186 5858 5870
)
"m_elab.ml" 203 6482 6506 "m_elab.ml" 203 6482 6517
type(
  HintMap.key
)
"m_elab.ml" 203 6482 6526 "m_elab.ml" 203 6482 6527
type(
  string
)
ident(
  int_ref s "m_elab.ml" 192 6026 6036 "m_elab.ml" 192 6026 6037
)
"m_elab.ml" 203 6482 6519 "m_elab.ml" 203 6482 6527
type(
  Expr.T.expr_
)
"m_elab.ml" 203 6482 6528 "m_elab.ml" 203 6482 6530
type(
  Expr.T.expr_ ->
  Expr.T.instance Property.wrapped -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 203 6482 6531 "m_elab.ml" 203 6482 6535
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 186 5858 5866 "m_elab.ml" 186 5858 5870
)
"m_elab.ml" 203 6482 6518 "m_elab.ml" 203 6482 6536
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 203 6482 6537 "m_elab.ml" 203 6482 6542
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 192 6026 6038 "m_elab.ml" 192 6026 6043
)
"m_elab.ml" 203 6482 6494 "m_elab.ml" 203 6482 6542
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 196 6123 6135 "m_elab.ml" 203 6482 6542
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 193 6046 6054 "m_elab.ml" 203 6482 6542
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 205 6550 6554 "m_elab.ml" 205 6550 6568
type(
  (StringSet.elt ->
   Expr.T.expr_ Property.wrapped HintMap.t ->
   Expr.T.expr_ Property.wrapped HintMap.t) ->
  StringSet.t ->
  Expr.T.expr_ Property.wrapped HintMap.t ->
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref StringSet.fold "set.mli" 141 5301 5305 "set.mli" 141 5301 5349
)
"m_elab.ml" 205 6550 6569 "m_elab.ml" 205 6550 6570
type(
  StringSet.elt ->
  Expr.T.expr_ Property.wrapped HintMap.t ->
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref f "m_elab.ml" 192 6026 6034 "m_elab.ml" 192 6026 6035
)
"m_elab.ml" 205 6550 6571 "m_elab.ml" 205 6550 6588
type(
  StringSet.t
)
ident(
  int_ref module_parameters "m_elab.ml" 188 5896 5905 "m_elab.ml" 188 5896 5922
)
"m_elab.ml" 205 6550 6589 "m_elab.ml" 205 6550 6605
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
ident(
  int_ref substitution_map "m_elab.ml" 187 5871 5879 "m_elab.ml" 187 5871 5895
)
"m_elab.ml" 205 6550 6554 "m_elab.ml" 205 6550 6605
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 192 6026 6030 "m_elab.ml" 205 6550 6605
type(
  Expr.T.expr_ Property.wrapped HintMap.t
)
"m_elab.ml" 208 6608 6612 "m_elab.ml" 208 6608 6634
type(
  < expr : 'a list * 'b -> 'c -> 'd; .. > ->
  'b -> 'c HintMap.t -> 'd HintMap.t
)
ident(
  def anonymize_substitution "m_elab.ml" 212 6696 6696 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 208 6608 6635 "m_elab.ml" 208 6608 6639
type(
  < expr : 'a list * 'b -> 'c -> 'd; .. > as 'e
)
ident(
  def anon "m_elab.ml" 208 6608 6640 "m_elab.ml" 209 6651 6693
)
"m_elab.ml" 208 6608 6640 "m_elab.ml" 208 6608 6642
type(
  'b
)
ident(
  def cx "m_elab.ml" 208 6608 6643 "m_elab.ml" 209 6651 6693
)
"m_elab.ml" 208 6608 6643 "m_elab.ml" 208 6608 6648
type(
  'c HintMap.t
)
ident(
  def subst "m_elab.ml" 209 6651 6655 "m_elab.ml" 209 6651 6693
)
"m_elab.ml" 209 6651 6655 "m_elab.ml" 209 6651 6666
type(
  ('c -> 'd) -> 'c HintMap.t -> 'd HintMap.t
)
ident(
  int_ref HintMap.map "map.mli" 323 12975 12979 "map.mli" 323 12975 13014
)
"m_elab.ml" 209 6651 6668 "m_elab.ml" 209 6651 6672
type(
  'e
)
ident(
  int_ref anon "m_elab.ml" 208 6608 6635 "m_elab.ml" 208 6608 6639
)
"m_elab.ml" 209 6651 6668 "m_elab.ml" 209 6651 6677
type(
  'a list * 'b -> 'c -> 'd
)
"m_elab.ml" 209 6651 6679 "m_elab.ml" 209 6651 6681
type(
  'a list
)
"m_elab.ml" 209 6651 6683 "m_elab.ml" 209 6651 6685
type(
  'b
)
ident(
  int_ref cx "m_elab.ml" 208 6608 6640 "m_elab.ml" 208 6608 6642
)
"m_elab.ml" 209 6651 6678 "m_elab.ml" 209 6651 6686
type(
  'a list * 'b
)
"m_elab.ml" 209 6651 6667 "m_elab.ml" 209 6651 6687
type(
  'c -> 'd
)
"m_elab.ml" 209 6651 6688 "m_elab.ml" 209 6651 6693
type(
  'c HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 208 6608 6643 "m_elab.ml" 208 6608 6648
)
"m_elab.ml" 209 6651 6655 "m_elab.ml" 209 6651 6693
type(
  'd HintMap.t
)
"m_elab.ml" 212 6696 6700 "m_elab.ml" 212 6696 6709
type(
  M_t.modunit_ Property.wrapped -> M_t.modunit_ Property.wrapped
)
ident(
  def remove_pf "m_elab.ml" 220 6928 6928 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 212 6696 6710 "m_elab.ml" 212 6696 6712
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 214 6756 6760 "m_elab.ml" 217 6912 6925
)
"m_elab.ml" 214 6756 6766 "m_elab.ml" 214 6756 6768
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 212 6696 6710 "m_elab.ml" 212 6696 6712
)
"m_elab.ml" 214 6756 6766 "m_elab.ml" 214 6756 6773
type(
  M_t.modunit_
)
"m_elab.ml" 215 6779 6794 "m_elab.ml" 215 6779 6796
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
)
"m_elab.ml" 215 6779 6798 "m_elab.ml" 215 6779 6800
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
)
"m_elab.ml" 215 6779 6802 "m_elab.ml" 215 6779 6806
type(
  int
)
ident(
  def naxs "m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
)
"m_elab.ml" 215 6779 6808 "m_elab.ml" 215 6779 6811
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
)
"m_elab.ml" 215 6779 6813 "m_elab.ml" 215 6779 6821
type(
  Proof.T.proof
)
ident(
  def prf_orig "m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
)
"m_elab.ml" 215 6779 6823 "m_elab.ml" 215 6779 6827
type(
  M_t.summary
)
ident(
  def summ "m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
)
"m_elab.ml" 215 6779 6785 "m_elab.ml" 215 6779 6828
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 216 6832 6849 "m_elab.ml" 216 6832 6851
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 215 6779 6794 "m_elab.ml" 215 6779 6796
)
"m_elab.ml" 216 6832 6853 "m_elab.ml" 216 6832 6855
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 215 6779 6798 "m_elab.ml" 215 6779 6800
)
"m_elab.ml" 216 6832 6857 "m_elab.ml" 216 6832 6861
type(
  int
)
ident(
  int_ref naxs "m_elab.ml" 215 6779 6802 "m_elab.ml" 215 6779 6806
)
"m_elab.ml" 216 6832 6872 "m_elab.ml" 216 6832 6880
type(
  Proof.T.omission
)
"m_elab.ml" 216 6832 6864 "m_elab.ml" 216 6832 6880
type(
  Proof.T.proof_
)
"m_elab.ml" 216 6832 6881 "m_elab.ml" 216 6832 6883
type(
  Proof.T.proof_ -> Proof.T.proof -> Proof.T.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 216 6832 6884 "m_elab.ml" 216 6832 6887
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 215 6779 6808 "m_elab.ml" 215 6779 6811
)
"m_elab.ml" 216 6832 6863 "m_elab.ml" 216 6832 6888
type(
  Proof.T.proof
)
"m_elab.ml" 216 6832 6890 "m_elab.ml" 216 6832 6898
type(
  Proof.T.proof
)
ident(
  int_ref prf_orig "m_elab.ml" 215 6779 6813 "m_elab.ml" 215 6779 6821
)
"m_elab.ml" 216 6832 6900 "m_elab.ml" 216 6832 6904
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 215 6779 6823 "m_elab.ml" 215 6779 6827
)
"m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6905
type(
  M_t.modunit_
)
"m_elab.ml" 216 6832 6906 "m_elab.ml" 216 6832 6908
type(
  M_t.modunit_ ->
  M_t.modunit_ Property.wrapped -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 216 6832 6909 "m_elab.ml" 216 6832 6911
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 212 6696 6710 "m_elab.ml" 212 6696 6712
)
"m_elab.ml" 216 6832 6840 "m_elab.ml" 216 6832 6911
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 217 6912 6918 "m_elab.ml" 217 6912 6919
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 217 6912 6923 "m_elab.ml" 217 6912 6925
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 212 6696 6710 "m_elab.ml" 212 6696 6712
)
"m_elab.ml" 214 6756 6760 "m_elab.ml" 217 6912 6925
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 220 6928 6932 "m_elab.ml" 220 6928 6945
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  def lambdify_expr "m_elab.ml" 235 7378 7378 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 220 6928 6946 "m_elab.ml" 220 6928 6948
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 220 6928 6949 "m_elab.ml" 232 7363 7375
)
"m_elab.ml" 220 6928 6949 "m_elab.ml" 220 6928 6953
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 225 7106 7110 "m_elab.ml" 232 7363 7375
)
"m_elab.ml" 225 7106 7114 "m_elab.ml" 225 7106 7130
type(
  bool
)
ident(
  def lambdify_enabled "m_elab.ml" 226 7141 7145 "m_elab.ml" 232 7363 7375
)
"m_elab.ml" 225 7106 7133 "m_elab.ml" 225 7106 7137
type(
  bool
)
"m_elab.ml" 226 7141 7149 "m_elab.ml" 226 7141 7162
type(
  bool
)
ident(
  def lambdify_cdot "m_elab.ml" 227 7173 7177 "m_elab.ml" 232 7363 7375
)
"m_elab.ml" 226 7141 7165 "m_elab.ml" 226 7141 7169
type(
  bool
)
"m_elab.ml" 227 7173 7181 "m_elab.ml" 227 7173 7188
type(
  bool
)
ident(
  def autouse "m_elab.ml" 228 7199 7203 "m_elab.ml" 232 7363 7375
)
"m_elab.ml" 227 7173 7191 "m_elab.ml" 227 7173 7195
type(
  bool
)
"m_elab.ml" 228 7199 7207 "m_elab.ml" 228 7199 7211
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 232 7363 7371 "m_elab.ml" 232 7363 7375
)
"m_elab.ml" 228 7199 7214 "m_elab.ml" 228 7199 7234
type(
  Expr.T.ctx ->
  Expr.T.expr ->
  lambdify_enabled:bool -> lambdify_cdot:bool -> autouse:bool -> Expr.T.expr
)
ident(
  int_ref Expr.Action.lambdify "expr.mli" 727 18423 18427 "expr.mli" 732 18551 18567
)
"m_elab.ml" 228 7199 7235 "m_elab.ml" 228 7199 7237
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 220 6928 6946 "m_elab.ml" 220 6928 6948
)
"m_elab.ml" 228 7199 7238 "m_elab.ml" 228 7199 7242
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 220 6928 6949 "m_elab.ml" 220 6928 6953
)
"m_elab.ml" 229 7243 7273 "m_elab.ml" 229 7243 7289
type(
  bool
)
ident(
  int_ref lambdify_enabled "m_elab.ml" 225 7106 7114 "m_elab.ml" 225 7106 7130
)
"m_elab.ml" 230 7290 7317 "m_elab.ml" 230 7290 7330
type(
  bool
)
ident(
  int_ref lambdify_cdot "m_elab.ml" 226 7141 7149 "m_elab.ml" 226 7141 7162
)
"m_elab.ml" 231 7331 7352 "m_elab.ml" 231 7331 7359
type(
  bool
)
ident(
  int_ref autouse "m_elab.ml" 227 7173 7181 "m_elab.ml" 227 7173 7188
)
"m_elab.ml" 228 7199 7214 "m_elab.ml" 231 7331 7359
type(
  Expr.T.expr
)
"m_elab.ml" 232 7363 7371 "m_elab.ml" 232 7363 7375
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 228 7199 7207 "m_elab.ml" 228 7199 7211
)
"m_elab.ml" 228 7199 7203 "m_elab.ml" 232 7363 7375
type(
  Expr.T.expr
)
"m_elab.ml" 227 7173 7177 "m_elab.ml" 232 7363 7375
type(
  Expr.T.expr
)
"m_elab.ml" 226 7141 7145 "m_elab.ml" 232 7363 7375
type(
  Expr.T.expr
)
"m_elab.ml" 225 7106 7110 "m_elab.ml" 232 7363 7375
type(
  Expr.T.expr
)
"m_elab.ml" 235 7378 7382 "m_elab.ml" 235 7378 7401
type(
  Expr.T.ctx ->
  Expr.T.defn_ Property.wrapped -> Expr.T.defn_ Property.wrapped
)
ident(
  def lambdify_definition "m_elab.ml" 254 8021 8021 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 235 7378 7402 "m_elab.ml" 235 7378 7404
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 235 7378 7405 "m_elab.ml" 251 7991 8018
)
"m_elab.ml" 235 7378 7405 "m_elab.ml" 235 7378 7407
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  def df "m_elab.ml" 236 7410 7414 "m_elab.ml" 251 7991 8018
)
"m_elab.ml" 236 7410 7418 "m_elab.ml" 236 7410 7422
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 240 7551 7555 "m_elab.ml" 251 7991 8018
)
"m_elab.ml" 236 7410 7431 "m_elab.ml" 236 7410 7433
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 235 7378 7405 "m_elab.ml" 235 7378 7407
)
"m_elab.ml" 236 7410 7431 "m_elab.ml" 236 7410 7438
type(
  Expr.T.defn_
)
"m_elab.ml" 237 7444 7464 "m_elab.ml" 237 7444 7465
type(
  Util.hint
)
"m_elab.ml" 237 7444 7467 "m_elab.ml" 237 7444 7471
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 237 7444 7476 "m_elab.ml" 237 7444 7480
)
"m_elab.ml" 237 7444 7454 "m_elab.ml" 237 7444 7472
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 237 7444 7476 "m_elab.ml" 237 7444 7480
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 237 7444 7467 "m_elab.ml" 237 7444 7471
)
"m_elab.ml" 238 7481 7500 "m_elab.ml" 238 7481 7501
type(
  Util.hint
)
"m_elab.ml" 238 7481 7503 "m_elab.ml" 238 7481 7507
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 238 7481 7515 "m_elab.ml" 238 7481 7519
)
"m_elab.ml" 238 7481 7509 "m_elab.ml" 238 7481 7510
type(
  (Util.hint * Expr.T.backend_args) list list
)
"m_elab.ml" 238 7481 7491 "m_elab.ml" 238 7481 7511
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 238 7481 7515 "m_elab.ml" 238 7481 7519
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 238 7481 7503 "m_elab.ml" 238 7481 7507
)
"m_elab.ml" 239 7520 7530 "m_elab.ml" 239 7520 7531
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 239 7520 7542 "m_elab.ml" 239 7520 7547
type(
  bool
)
"m_elab.ml" 239 7520 7535 "m_elab.ml" 239 7520 7547
type(
  Expr.T.expr
)
"m_elab.ml" 236 7410 7425 "m_elab.ml" 239 7520 7547
type(
  Expr.T.expr
)
"m_elab.ml" 240 7551 7559 "m_elab.ml" 240 7551 7563
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 246 7765 7769 "m_elab.ml" 251 7991 8018
)
"m_elab.ml" 240 7551 7572 "m_elab.ml" 240 7551 7576
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 236 7410 7418 "m_elab.ml" 236 7410 7422
)
"m_elab.ml" 240 7551 7572 "m_elab.ml" 240 7551 7581
type(
  Expr.T.expr_
)
"m_elab.ml" 241 7587 7604 "m_elab.ml" 241 7587 7605
type(
  Expr.T.expr
)
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 241 7587 7597 "m_elab.ml" 241 7587 7605
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 242 7630 7640 "m_elab.ml" 242 7630 7641
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 241 7587 7597 "m_elab.ml" 242 7630 7641
type(
  Expr.T.expr_
)
"m_elab.ml" 243 7660 7676 "m_elab.ml" 243 7660 7680
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 244 7708 7720 "m_elab.ml" 244 7708 7753
)
"m_elab.ml" 243 7660 7683 "m_elab.ml" 243 7660 7696
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref lambdify_expr "m_elab.ml" 220 6928 6932 "m_elab.ml" 220 6928 6945
)
"m_elab.ml" 243 7660 7697 "m_elab.ml" 243 7660 7699
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 235 7378 7402 "m_elab.ml" 235 7378 7404
)
"m_elab.ml" 243 7660 7700 "m_elab.ml" 243 7660 7704
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 236 7410 7418 "m_elab.ml" 236 7410 7422
)
"m_elab.ml" 243 7660 7683 "m_elab.ml" 243 7660 7704
type(
  Expr.T.expr
)
"m_elab.ml" 244 7708 7720 "m_elab.ml" 244 7708 7745
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Levels.rm_expr_level "expr.mli" 714 18199 18203 "expr.mli" 715 18222 18249
)
"m_elab.ml" 244 7708 7746 "m_elab.ml" 244 7708 7748
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 235 7378 7402 "m_elab.ml" 235 7378 7404
)
"m_elab.ml" 244 7708 7749 "m_elab.ml" 244 7708 7753
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 243 7660 7676 "m_elab.ml" 243 7660 7680
)
"m_elab.ml" 244 7708 7720 "m_elab.ml" 244 7708 7753
type(
  Expr.T.expr
)
"m_elab.ml" 243 7660 7672 "m_elab.ml" 244 7708 7753
type(
  Expr.T.expr
)
"m_elab.ml" 240 7551 7566 "m_elab.ml" 244 7708 7753
type(
  Expr.T.expr
)
"m_elab.ml" 246 7765 7773 "m_elab.ml" 246 7765 7777
type(
  Expr.T.defn_
)
ident(
  def core "m_elab.ml" 250 7964 7968 "m_elab.ml" 251 7991 8018
)
"m_elab.ml" 246 7765 7786 "m_elab.ml" 246 7765 7788
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 235 7378 7405 "m_elab.ml" 235 7378 7407
)
"m_elab.ml" 246 7765 7786 "m_elab.ml" 246 7765 7793
type(
  Expr.T.defn_
)
"m_elab.ml" 247 7799 7819 "m_elab.ml" 247 7799 7823
type(
  Util.hint
)
ident(
  def name "m_elab.ml" 247 7799 7831 "m_elab.ml" 247 7799 7852
)
"m_elab.ml" 247 7799 7825 "m_elab.ml" 247 7799 7826
type(
  Expr.T.expr
)
"m_elab.ml" 247 7799 7809 "m_elab.ml" 247 7799 7827
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 247 7799 7841 "m_elab.ml" 247 7799 7845
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 247 7799 7819 "m_elab.ml" 247 7799 7823
)
"m_elab.ml" 247 7799 7847 "m_elab.ml" 247 7799 7851
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 240 7551 7559 "m_elab.ml" 240 7551 7563
)
"m_elab.ml" 247 7799 7831 "m_elab.ml" 247 7799 7852
type(
  Expr.T.defn_
)
"m_elab.ml" 248 7853 7872 "m_elab.ml" 248 7853 7876
type(
  Util.hint
)
ident(
  def name "m_elab.ml" 248 7853 7898 "m_elab.ml" 248 7853 7932
)
"m_elab.ml" 248 7853 7878 "m_elab.ml" 248 7853 7879
type(
  Expr.T.expr
)
"m_elab.ml" 248 7853 7881 "m_elab.ml" 248 7853 7893
type(
  (Util.hint * Expr.T.backend_args) list list
)
ident(
  def backend_args "m_elab.ml" 248 7853 7898 "m_elab.ml" 248 7853 7932
)
"m_elab.ml" 248 7853 7863 "m_elab.ml" 248 7853 7894
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 248 7853 7907 "m_elab.ml" 248 7853 7911
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 248 7853 7872 "m_elab.ml" 248 7853 7876
)
"m_elab.ml" 248 7853 7913 "m_elab.ml" 248 7853 7917
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 240 7551 7559 "m_elab.ml" 240 7551 7563
)
"m_elab.ml" 248 7853 7919 "m_elab.ml" 248 7853 7931
type(
  (Util.hint * Expr.T.backend_args) list list
)
ident(
  int_ref backend_args "m_elab.ml" 248 7853 7881 "m_elab.ml" 248 7853 7893
)
"m_elab.ml" 248 7853 7898 "m_elab.ml" 248 7853 7932
type(
  Expr.T.defn_
)
"m_elab.ml" 249 7933 7943 "m_elab.ml" 249 7933 7944
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 249 7933 7955 "m_elab.ml" 249 7933 7960
type(
  bool
)
"m_elab.ml" 249 7933 7948 "m_elab.ml" 249 7933 7960
type(
  Expr.T.defn_
)
"m_elab.ml" 246 7765 7780 "m_elab.ml" 249 7933 7960
type(
  Expr.T.defn_
)
"m_elab.ml" 250 7964 7972 "m_elab.ml" 250 7964 7974
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  def df "m_elab.ml" 251 7991 7995 "m_elab.ml" 251 7991 8018
)
"m_elab.ml" 250 7964 7977 "m_elab.ml" 250 7964 7981
type(
  Expr.T.defn_
)
ident(
  int_ref core "m_elab.ml" 246 7765 7773 "m_elab.ml" 246 7765 7777
)
"m_elab.ml" 250 7964 7982 "m_elab.ml" 250 7964 7984
type(
  Expr.T.defn_ ->
  Expr.T.defn_ Property.wrapped -> Expr.T.defn_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 250 7964 7985 "m_elab.ml" 250 7964 7987
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 235 7378 7405 "m_elab.ml" 235 7378 7407
)
"m_elab.ml" 250 7964 7977 "m_elab.ml" 250 7964 7987
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 251 7991 7995 "m_elab.ml" 251 7991 8015
type(
  Expr.T.defn_ Property.wrapped -> Expr.T.defn_ Property.wrapped
)
ident(
  int_ref Expr.Levels.rm_level "expr.mli" 692 17597 17601 "expr.mli" 693 17615 17665
)
"m_elab.ml" 251 7991 8016 "m_elab.ml" 251 7991 8018
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 250 7964 7972 "m_elab.ml" 250 7964 7974
)
"m_elab.ml" 251 7991 7995 "m_elab.ml" 251 7991 8018
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 250 7964 7968 "m_elab.ml" 251 7991 8018
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 246 7765 7769 "m_elab.ml" 251 7991 8018
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 240 7551 7555 "m_elab.ml" 251 7991 8018
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 236 7410 7414 "m_elab.ml" 251 7991 8018
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 254 8021 8025 "m_elab.ml" 254 8021 8036
type(
  Expr.T.expr_ Property.wrapped -> Expr.T.sequent
)
ident(
  def get_sequent "m_elab.ml" 259 8114 8114 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 254 8021 8037 "m_elab.ml" 254 8021 8041
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def expr "m_elab.ml" 254 8021 8044 "m_elab.ml" 256 8088 8111
)
"m_elab.ml" 254 8021 8050 "m_elab.ml" 254 8021 8054
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  int_ref expr "m_elab.ml" 254 8021 8037 "m_elab.ml" 254 8021 8041
)
"m_elab.ml" 254 8021 8050 "m_elab.ml" 254 8021 8059
type(
  Expr.T.expr_
)
"m_elab.ml" 255 8065 8079 "m_elab.ml" 255 8065 8081
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 255 8065 8085 "m_elab.ml" 255 8065 8087
)
"m_elab.ml" 255 8065 8071 "m_elab.ml" 255 8065 8081
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 255 8065 8085 "m_elab.ml" 255 8065 8087
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 255 8065 8079 "m_elab.ml" 255 8065 8081
)
"m_elab.ml" 256 8088 8094 "m_elab.ml" 256 8088 8095
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 256 8088 8106 "m_elab.ml" 256 8088 8111
type(
  bool
)
"m_elab.ml" 256 8088 8099 "m_elab.ml" 256 8088 8111
type(
  Expr.T.sequent
)
"m_elab.ml" 254 8021 8044 "m_elab.ml" 256 8088 8111
type(
  Expr.T.sequent
)
"m_elab.ml" 259 8114 8118 "m_elab.ml" 259 8114 8134
type(
  Expr.T.ctx -> Expr.T.sequent -> Expr.T.sequent
)
ident(
  def lambdify_sequent "m_elab.ml" 266 8321 8321 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 259 8114 8135 "m_elab.ml" 259 8114 8137
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 259 8114 8138 "m_elab.ml" 263 8298 8318
)
"m_elab.ml" 259 8114 8139 "m_elab.ml" 259 8114 8141
type(
  Expr.T.sequent
)
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 260 8161 8165 "m_elab.ml" 263 8298 8318
)
"m_elab.ml" 260 8161 8169 "m_elab.ml" 260 8161 8176
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def sq_expr "m_elab.ml" 261 8203 8207 "m_elab.ml" 263 8298 8318
)
"m_elab.ml" 260 8161 8179 "m_elab.ml" 260 8161 8186
type(
  Expr.T.expr_ -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.noprops "property.mli" 92 3086 3086 "property.mli" 92 3086 3116
)
"m_elab.ml" 260 8161 8196 "m_elab.ml" 260 8161 8198
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 259 8114 8139 "m_elab.ml" 259 8114 8141
)
"m_elab.ml" 260 8161 8187 "m_elab.ml" 260 8161 8199
type(
  Expr.T.expr_
)
"m_elab.ml" 260 8161 8179 "m_elab.ml" 260 8161 8199
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 261 8203 8211 "m_elab.ml" 261 8203 8215
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 262 8246 8250 "m_elab.ml" 263 8298 8318
)
"m_elab.ml" 261 8203 8218 "m_elab.ml" 261 8203 8231
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref lambdify_expr "m_elab.ml" 220 6928 6932 "m_elab.ml" 220 6928 6945
)
"m_elab.ml" 261 8203 8232 "m_elab.ml" 261 8203 8234
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 259 8114 8135 "m_elab.ml" 259 8114 8137
)
"m_elab.ml" 261 8203 8235 "m_elab.ml" 261 8203 8242
type(
  Expr.T.expr
)
ident(
  int_ref sq_expr "m_elab.ml" 260 8161 8169 "m_elab.ml" 260 8161 8176
)
"m_elab.ml" 261 8203 8218 "m_elab.ml" 261 8203 8242
type(
  Expr.T.expr
)
"m_elab.ml" 262 8246 8254 "m_elab.ml" 262 8246 8258
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 263 8298 8302 "m_elab.ml" 263 8298 8318
)
"m_elab.ml" 262 8246 8261 "m_elab.ml" 262 8246 8286
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Levels.rm_expr_level "expr.mli" 714 18199 18203 "expr.mli" 715 18222 18249
)
"m_elab.ml" 262 8246 8287 "m_elab.ml" 262 8246 8289
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 259 8114 8135 "m_elab.ml" 259 8114 8137
)
"m_elab.ml" 262 8246 8290 "m_elab.ml" 262 8246 8294
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 261 8203 8211 "m_elab.ml" 261 8203 8215
)
"m_elab.ml" 262 8246 8261 "m_elab.ml" 262 8246 8294
type(
  Expr.T.expr
)
"m_elab.ml" 263 8298 8302 "m_elab.ml" 263 8298 8313
type(
  Expr.T.expr -> Expr.T.sequent
)
ident(
  int_ref get_sequent "m_elab.ml" 254 8021 8025 "m_elab.ml" 254 8021 8036
)
"m_elab.ml" 263 8298 8314 "m_elab.ml" 263 8298 8318
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 262 8246 8254 "m_elab.ml" 262 8246 8258
)
"m_elab.ml" 263 8298 8302 "m_elab.ml" 263 8298 8318
type(
  Expr.T.sequent
)
"m_elab.ml" 262 8246 8250 "m_elab.ml" 263 8298 8318
type(
  Expr.T.sequent
)
"m_elab.ml" 261 8203 8207 "m_elab.ml" 263 8298 8318
type(
  Expr.T.sequent
)
"m_elab.ml" 260 8161 8165 "m_elab.ml" 263 8298 8318
type(
  Expr.T.sequent
)
"m_elab.ml" 266 8321 8325 "m_elab.ml" 266 8321 8346
type(
  Expr.T.ctx -> M_t.modunit list -> M_t.modunit list
)
ident(
  def lambdify_enabled_cdot "m_elab.ml" 305 9864 9864 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 266 8321 8347 "m_elab.ml" 266 8321 8349
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 266 8321 8350 "m_elab.ml" 302 9854 9861
)
"m_elab.ml" 266 8321 8350 "m_elab.ml" 266 8321 8353
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 268 8426 8430 "m_elab.ml" 302 9854 9861
)
"m_elab.ml" 268 8426 8434 "m_elab.ml" 268 8426 8441
type(
  M_visit.map
)
ident(
  def visitor "m_elab.ml" 301 9803 9807 "m_elab.ml" 302 9854 9861
)
"m_elab.ml" 268 8426 8452 "m_elab.ml" 268 8426 8456
type(
  M_visit.map
)
type(
  M_visit.map
)
"m_elab.ml" 271 8503 8529 "m_elab.ml" 271 8503 8531
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 271 8503 8532 "m_elab.ml" 273 8603 8653
)
"m_elab.ml" 271 8503 8532 "m_elab.ml" 271 8503 8534
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 271 8503 8535 "m_elab.ml" 273 8603 8653
)
"m_elab.ml" 271 8503 8535 "m_elab.ml" 271 8503 8537
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 271 8503 8538 "m_elab.ml" 273 8603 8653
)
"m_elab.ml" 271 8503 8538 "m_elab.ml" 271 8503 8548
type(
  Expr.T.visibility
)
ident(
  def visibility "m_elab.ml" 271 8503 8549 "m_elab.ml" 273 8603 8653
)
"m_elab.ml" 271 8503 8549 "m_elab.ml" 271 8503 8550
type(
  Expr.T.export
)
ident(
  def e "m_elab.ml" 272 8553 8565 "m_elab.ml" 273 8603 8653
)
"m_elab.ml" 272 8553 8569 "m_elab.ml" 272 8553 8571
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  def df "m_elab.ml" 273 8603 8615 "m_elab.ml" 273 8603 8653
)
"m_elab.ml" 272 8553 8574 "m_elab.ml" 272 8553 8593
type(
  Expr.T.ctx -> Expr.T.defn -> Expr.T.defn_ Property.wrapped
)
ident(
  int_ref lambdify_definition "m_elab.ml" 235 7378 7382 "m_elab.ml" 235 7378 7401
)
"m_elab.ml" 272 8553 8594 "m_elab.ml" 272 8553 8596
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 271 8503 8529 "m_elab.ml" 271 8503 8531
)
"m_elab.ml" 272 8553 8597 "m_elab.ml" 272 8553 8599
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 271 8503 8532 "m_elab.ml" 271 8503 8534
)
"m_elab.ml" 272 8553 8574 "m_elab.ml" 272 8553 8599
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 273 8603 8615 "m_elab.ml" 273 8603 8620
type(
  M_visit.map
)
ident(
  ext_ref self-1
)
type(
  M_visit.map
)
ident(
  int_ref super "m_elab.ml" 269 8465 8481 "m_elab.ml" 269 8465 8492
)
"m_elab.ml" 273 8603 8615 "m_elab.ml" 273 8603 8631
type(
  M_visit.map ->
  Expr.T.ctx ->
  Expr.T.defn ->
  Expr.T.wheredef ->
  Expr.T.visibility -> Expr.T.export -> Expr.T.ctx * M_t.modunit_
)
ident(
  ext_ref definition
)
type(
  Expr.T.ctx ->
  Expr.T.defn ->
  Expr.T.wheredef ->
  Expr.T.visibility -> Expr.T.export -> Expr.T.ctx * M_t.modunit_
)
type(
  Expr.T.ctx ->
  Expr.T.defn ->
  Expr.T.wheredef ->
  Expr.T.visibility -> Expr.T.export -> Expr.T.ctx * M_t.modunit_
)
"m_elab.ml" 273 8603 8632 "m_elab.ml" 273 8603 8634
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 271 8503 8529 "m_elab.ml" 271 8503 8531
)
"m_elab.ml" 273 8603 8635 "m_elab.ml" 273 8603 8637
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 272 8553 8569 "m_elab.ml" 272 8553 8571
)
"m_elab.ml" 273 8603 8638 "m_elab.ml" 273 8603 8640
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 271 8503 8535 "m_elab.ml" 271 8503 8537
)
"m_elab.ml" 273 8603 8641 "m_elab.ml" 273 8603 8651
type(
  Expr.T.visibility
)
ident(
  int_ref visibility "m_elab.ml" 271 8503 8538 "m_elab.ml" 271 8503 8548
)
"m_elab.ml" 273 8603 8652 "m_elab.ml" 273 8603 8653
type(
  Expr.T.export
)
ident(
  int_ref e "m_elab.ml" 271 8503 8549 "m_elab.ml" 271 8503 8550
)
"m_elab.ml" 273 8603 8615 "m_elab.ml" 273 8603 8653
type(
  Expr.T.ctx * M_t.modunit_
)
"m_elab.ml" 272 8553 8565 "m_elab.ml" 273 8603 8653
type(
  Expr.T.ctx * M_t.modunit_
)
"m_elab.ml" 275 8655 8678 "m_elab.ml" 275 8655 8680
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 275 8655 8681 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 275 8655 8681 "m_elab.ml" 275 8655 8685
type(
  Util.hint option
)
ident(
  def name "m_elab.ml" 275 8655 8686 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 275 8655 8686 "m_elab.ml" 275 8655 8688
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 275 8655 8689 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 275 8655 8689 "m_elab.ml" 275 8655 8693
type(
  int
)
ident(
  def naxs "m_elab.ml" 275 8655 8694 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 275 8655 8694 "m_elab.ml" 275 8655 8697
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 275 8655 8698 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 275 8655 8698 "m_elab.ml" 275 8655 8706
type(
  Proof.T.proof
)
ident(
  def prf_orig "m_elab.ml" 275 8655 8707 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 275 8655 8707 "m_elab.ml" 275 8655 8711
type(
  M_t.summary
)
ident(
  def summ "m_elab.ml" 280 8879 8891 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 280 8879 8895 "m_elab.ml" 280 8879 8897
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 298 9728 9740 "m_elab.ml" 298 9728 9787
)
"m_elab.ml" 282 8926 8946 "m_elab.ml" 282 8926 8962
type(
  Expr.T.ctx -> Expr.T.sequent -> Expr.T.sequent
)
ident(
  int_ref lambdify_sequent "m_elab.ml" 259 8114 8118 "m_elab.ml" 259 8114 8134
)
"m_elab.ml" 282 8926 8963 "m_elab.ml" 282 8926 8965
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 275 8655 8678 "m_elab.ml" 275 8655 8680
)
"m_elab.ml" 282 8926 8966 "m_elab.ml" 282 8926 8968
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 275 8655 8686 "m_elab.ml" 275 8655 8688
)
"m_elab.ml" 282 8926 8946 "m_elab.ml" 282 8926 8968
type(
  Expr.T.sequent
)
"m_elab.ml" 283 8969 8998 "m_elab.ml" 283 8969 9001
type(
  string
)
ident(
  def msg "m_elab.ml" 284 9005 9025 "m_elab.ml" 293 9478 9556
)
"m_elab.ml" 283 8969 8990 "m_elab.ml" 283 8969 9001
type(
  exn
)
"m_elab.ml" 284 9005 9029 "m_elab.ml" 284 9005 9032
type(
  string
)
ident(
  def msg "m_elab.ml" 291 9349 9369 "m_elab.ml" 293 9478 9556
)
"m_elab.ml" 284 9005 9036 "m_elab.ml" 284 9005 9039
type(
  string
)
ident(
  int_ref msg "m_elab.ml" 283 8969 8998 "m_elab.ml" 283 8969 9001
)
"m_elab.ml" 284 9005 9040 "m_elab.ml" 284 9005 9041
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 285 9042 9066 "m_elab.ml" 285 9042 9104
type(
  string
)
"m_elab.ml" 285 9042 9105 "m_elab.ml" 285 9042 9106
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 286 9109 9139 "m_elab.ml" 286 9109 9143
type(
  Util.hint option
)
ident(
  int_ref name "m_elab.ml" 275 8655 8681 "m_elab.ml" 275 8655 8685
)
"m_elab.ml" 287 9149 9180 "m_elab.ml" 287 9149 9181
type(
  Util.hint
)
ident(
  def s "m_elab.ml" 288 9185 9213 "m_elab.ml" 288 9185 9238
)
"m_elab.ml" 287 9149 9175 "m_elab.ml" 287 9149 9181
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 288 9185 9213 "m_elab.ml" 288 9185 9222
type(
  string
)
"m_elab.ml" 288 9185 9223 "m_elab.ml" 288 9185 9224
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 288 9185 9225 "m_elab.ml" 288 9185 9226
type(
  Util.hint
)
ident(
  int_ref s "m_elab.ml" 287 9149 9180 "m_elab.ml" 287 9149 9181
)
"m_elab.ml" 288 9185 9225 "m_elab.ml" 288 9185 9231
type(
  string
)
"m_elab.ml" 288 9185 9232 "m_elab.ml" 288 9185 9233
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 288 9185 9234 "m_elab.ml" 288 9185 9238
type(
  string
)
"m_elab.ml" 288 9185 9225 "m_elab.ml" 288 9185 9238
type(
  string
)
"m_elab.ml" 288 9185 9213 "m_elab.ml" 288 9185 9238
type(
  string
)
"m_elab.ml" 289 9239 9265 "m_elab.ml" 289 9239 9269
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 289 9239 9273 "m_elab.ml" 289 9239 9275
type(
  string
)
"m_elab.ml" 285 9042 9107 "m_elab.ml" 290 9276 9301
type(
  string
)
"m_elab.ml" 290 9276 9302 "m_elab.ml" 290 9276 9303
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 290 9276 9304 "m_elab.ml" 290 9276 9310
type(
  string
)
"m_elab.ml" 290 9276 9311 "m_elab.ml" 290 9276 9312
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 290 9276 9314 "m_elab.ml" 290 9276 9333
type(
  Expr.T.expr -> string
)
ident(
  int_ref Expr.T.format_locus "expr.mli" 341 8797 8799 "expr.mli" 341 8797 8838
)
"m_elab.ml" 290 9276 9334 "m_elab.ml" 290 9276 9336
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 275 8655 8686 "m_elab.ml" 275 8655 8688
)
"m_elab.ml" 290 9276 9334 "m_elab.ml" 290 9276 9343
type(
  Expr.T.expr
)
"m_elab.ml" 290 9276 9313 "m_elab.ml" 290 9276 9344
type(
  string
)
"m_elab.ml" 290 9276 9304 "m_elab.ml" 290 9276 9344
type(
  string
)
"m_elab.ml" 285 9042 9107 "m_elab.ml" 290 9276 9344
type(
  string
)
"m_elab.ml" 285 9042 9066 "m_elab.ml" 290 9276 9344
type(
  string
)
"m_elab.ml" 284 9005 9035 "m_elab.ml" 290 9276 9345
type(
  string
)
"m_elab.ml" 291 9349 9369 "m_elab.ml" 291 9349 9380
type(
  ?debug:string ->
  ?at:Expr.T.expr ->
  ?prefix:string ->
  ?nonl:unit ->
  (string -> unit, Format.formatter, unit) format -> string -> unit
)
ident(
  int_ref Util.printf "util.mli" 43 996 996 "util.mli" 45 1081 1131
)
"m_elab.ml" 291 9349 9385 "m_elab.ml" 291 9349 9387
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 275 8655 8686 "m_elab.ml" 275 8655 8688
)
"m_elab.ml" 291 9349 9385 "m_elab.ml" 291 9349 9394
type(
  Expr.T.expr
)
type(
  Expr.T.expr option
)
"m_elab.ml" 291 9349 9403 "m_elab.ml" 291 9349 9412
type(
  string
)
type(
  string option
)
"m_elab.ml" 291 9349 9413 "m_elab.ml" 291 9349 9417
type(
  (string -> unit, Format.formatter, unit) format
)
"m_elab.ml" 291 9349 9418 "m_elab.ml" 291 9349 9421
type(
  string
)
ident(
  int_ref msg "m_elab.ml" 284 9005 9029 "m_elab.ml" 284 9005 9032
)
"m_elab.ml" 291 9349 9369 "m_elab.ml" 291 9349 9421
type(
  unit
)
"m_elab.ml" 292 9423 9443 "m_elab.ml" 292 9423 9472
type(
  string -> unit
)
ident(
  int_ref Backend.Toolbox.print_message "backend.mli" 67 1550 1554 "backend.mli" 67 1550 1587
)
"m_elab.ml" 292 9423 9473 "m_elab.ml" 292 9423 9476
type(
  string
)
ident(
  int_ref msg "m_elab.ml" 284 9005 9029 "m_elab.ml" 284 9005 9032
)
"m_elab.ml" 292 9423 9443 "m_elab.ml" 292 9423 9476
type(
  unit
)
"m_elab.ml" 293 9478 9507 "m_elab.ml" 293 9478 9518
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"m_elab.ml" 293 9478 9537 "m_elab.ml" 293 9478 9541
type(
  Builtin.builtin
)
"m_elab.ml" 293 9478 9527 "m_elab.ml" 293 9478 9542
type(
  Expr.T.expr_
)
"m_elab.ml" 293 9478 9543 "m_elab.ml" 293 9478 9545
type(
  Expr.T.expr_ -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 293 9478 9546 "m_elab.ml" 293 9478 9548
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 275 8655 8686 "m_elab.ml" 275 8655 8688
)
"m_elab.ml" 293 9478 9546 "m_elab.ml" 293 9478 9555
type(
  Expr.T.expr
)
"m_elab.ml" 293 9478 9527 "m_elab.ml" 293 9478 9555
type(
  Expr.T.expr
)
"m_elab.ml" 293 9478 9498 "m_elab.ml" 293 9478 9556
type(
  Expr.T.sequent
)
"m_elab.ml" 292 9423 9443 "m_elab.ml" 293 9478 9556
type(
  Expr.T.sequent
)
"m_elab.ml" 291 9349 9369 "m_elab.ml" 293 9478 9556
type(
  Expr.T.sequent
)
"m_elab.ml" 284 9005 9025 "m_elab.ml" 293 9478 9556
type(
  Expr.T.sequent
)
"m_elab.ml" 280 8879 8900 "m_elab.ml" 294 9557 9576
type(
  Expr.T.sequent
)
"m_elab.ml" 298 9728 9740 "m_elab.ml" 298 9728 9745
type(
  M_visit.map
)
ident(
  ext_ref self-1
)
type(
  M_visit.map
)
ident(
  int_ref super "m_elab.ml" 269 8465 8481 "m_elab.ml" 269 8465 8492
)
"m_elab.ml" 298 9728 9740 "m_elab.ml" 298 9728 9753
type(
  M_visit.map ->
  Expr.T.ctx ->
  Util.hint option ->
  Expr.T.sequent ->
  int ->
  Proof.T.proof -> Proof.T.proof -> M_t.summary -> Expr.T.ctx * M_t.modunit_
)
ident(
  ext_ref theorem
)
type(
  Expr.T.ctx ->
  Util.hint option ->
  Expr.T.sequent ->
  int ->
  Proof.T.proof -> Proof.T.proof -> M_t.summary -> Expr.T.ctx * M_t.modunit_
)
type(
  Expr.T.ctx ->
  Util.hint option ->
  Expr.T.sequent ->
  int ->
  Proof.T.proof -> Proof.T.proof -> M_t.summary -> Expr.T.ctx * M_t.modunit_
)
"m_elab.ml" 298 9728 9754 "m_elab.ml" 298 9728 9756
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 275 8655 8678 "m_elab.ml" 275 8655 8680
)
"m_elab.ml" 298 9728 9757 "m_elab.ml" 298 9728 9761
type(
  Util.hint option
)
ident(
  int_ref name "m_elab.ml" 275 8655 8681 "m_elab.ml" 275 8655 8685
)
"m_elab.ml" 298 9728 9762 "m_elab.ml" 298 9728 9764
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 280 8879 8895 "m_elab.ml" 280 8879 8897
)
"m_elab.ml" 298 9728 9765 "m_elab.ml" 298 9728 9769
type(
  int
)
ident(
  int_ref naxs "m_elab.ml" 275 8655 8689 "m_elab.ml" 275 8655 8693
)
"m_elab.ml" 298 9728 9770 "m_elab.ml" 298 9728 9773
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 275 8655 8694 "m_elab.ml" 275 8655 8697
)
"m_elab.ml" 298 9728 9774 "m_elab.ml" 298 9728 9782
type(
  Proof.T.proof
)
ident(
  int_ref prf_orig "m_elab.ml" 275 8655 8698 "m_elab.ml" 275 8655 8706
)
"m_elab.ml" 298 9728 9783 "m_elab.ml" 298 9728 9787
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 275 8655 8707 "m_elab.ml" 275 8655 8711
)
"m_elab.ml" 298 9728 9740 "m_elab.ml" 298 9728 9787
type(
  Expr.T.ctx * M_t.modunit_
)
"m_elab.ml" 280 8879 8891 "m_elab.ml" 298 9728 9787
type(
  Expr.T.ctx * M_t.modunit_
)
"m_elab.ml" 268 8426 8444 "m_elab.ml" 299 9788 9795
type(
  M_visit.map
)
"m_elab.ml" 301 9803 9812 "m_elab.ml" 301 9803 9814
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 302 9854 9858 "m_elab.ml" 302 9854 9861
)
"m_elab.ml" 301 9803 9816 "m_elab.ml" 301 9803 9819
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 302 9854 9858 "m_elab.ml" 302 9854 9861
)
"m_elab.ml" 301 9803 9811 "m_elab.ml" 301 9803 9820
type(
  Expr.T.ctx * M_t.modunit list
)
"m_elab.ml" 301 9803 9823 "m_elab.ml" 301 9803 9830
type(
  M_visit.map
)
ident(
  int_ref visitor "m_elab.ml" 268 8426 8434 "m_elab.ml" 268 8426 8441
)
"m_elab.ml" 301 9803 9823 "m_elab.ml" 301 9803 9843
type(
  Expr.T.ctx -> M_t.modunit list -> Expr.T.ctx * M_t.modunit list
)
"m_elab.ml" 301 9803 9844 "m_elab.ml" 301 9803 9846
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 266 8321 8347 "m_elab.ml" 266 8321 8349
)
"m_elab.ml" 301 9803 9847 "m_elab.ml" 301 9803 9850
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 266 8321 8350 "m_elab.ml" 266 8321 8353
)
"m_elab.ml" 301 9803 9823 "m_elab.ml" 301 9803 9850
type(
  Expr.T.ctx * M_t.modunit list
)
"m_elab.ml" 302 9854 9858 "m_elab.ml" 302 9854 9861
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 301 9803 9816 "m_elab.ml" 301 9803 9819
)
"m_elab.ml" 301 9803 9807 "m_elab.ml" 302 9854 9861
type(
  M_t.modunit list
)
"m_elab.ml" 268 8426 8430 "m_elab.ml" 302 9854 9861
type(
  M_t.modunit list
)
"m_elab.ml" 305 9864 9872 "m_elab.ml" 305 9864 9883
type(
  M_t.modunit list ->
  int -> Expr.T.expr HintMap.t -> M_t.modunit list -> M_t.modunit list
)
ident(
  def apply_subst "m_elab.ml" 305 9864 9864 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 305 9864 9884 "m_elab.ml" 305 9864 9888
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 305 9864 9889 "m_elab.ml" 327 10761 10772
)
"m_elab.ml" 305 9864 9889 "m_elab.ml" 305 9864 9897
type(
  int
)
ident(
  def body_len "m_elab.ml" 305 9864 9898 "m_elab.ml" 327 10761 10772
)
"m_elab.ml" 305 9864 9898 "m_elab.ml" 305 9864 9903
type(
  Expr.T.expr HintMap.t
)
ident(
  def subst "m_elab.ml" 305 9864 9906 "m_elab.ml" 327 10761 10772
)
"m_elab.ml" 307 9951 9957 "m_elab.ml" 307 9951 9959
type(
  M_t.modunit list
)
"m_elab.ml" 307 9951 9963 "m_elab.ml" 307 9951 9971
type(
  M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref Ext.List.rev "ext.mli" 11 220 222 "ext.mli" 11 220 250
)
"m_elab.ml" 307 9951 9972 "m_elab.ml" 307 9951 9976
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 305 9864 9884 "m_elab.ml" 305 9864 9888
)
"m_elab.ml" 307 9951 9963 "m_elab.ml" 307 9951 9976
type(
  M_t.modunit list
)
"m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 308 9977 9996 "m_elab.ml" 327 10761 10772
)
"m_elab.ml" 308 9977 9989 "m_elab.ml" 308 9977 9992
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 308 9977 9996 "m_elab.ml" 327 10761 10772
)
"m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9992
type(
  M_t.modunit list
)
"m_elab.ml" 308 9977 10008 "m_elab.ml" 308 9977 10010
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 308 9977 10008 "m_elab.ml" 308 9977 10015
type(
  M_t.modunit_
)
"m_elab.ml" 309 10021 10042 "m_elab.ml" 309 10021 10044
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 311 10077 10089 "m_elab.ml" 314 10248 10295
)
"m_elab.ml" 309 10021 10046 "m_elab.ml" 309 10021 10047
type(
  Expr.T.shape
)
"m_elab.ml" 309 10021 10042 "m_elab.ml" 309 10021 10047
type(
  Util.hint * Expr.T.shape
)
"m_elab.ml" 309 10021 10041 "m_elab.ml" 309 10021 10048
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 309 10021 10031 "m_elab.ml" 309 10021 10048
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 310 10049 10070 "m_elab.ml" 310 10049 10072
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 311 10077 10089 "m_elab.ml" 314 10248 10295
)
"m_elab.ml" 310 10049 10069 "m_elab.ml" 310 10049 10073
type(
  Util.hints
)
"m_elab.ml" 310 10049 10059 "m_elab.ml" 310 10049 10073
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 309 10021 10031 "m_elab.ml" 310 10049 10073
type(
  M_t.modunit_
)
"m_elab.ml" 311 10077 10093 "m_elab.ml" 311 10077 10094
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 312 10122 10134 "m_elab.ml" 314 10248 10295
)
"m_elab.ml" 311 10077 10097 "m_elab.ml" 311 10077 10109
type(
  HintMap.key -> Expr.T.expr HintMap.t -> Expr.T.expr
)
ident(
  int_ref HintMap.find "map.mli" 278 11157 11161 "map.mli" 278 11157 11188
)
"m_elab.ml" 311 10077 10110 "m_elab.ml" 311 10077 10112
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 309 10021 10042 "m_elab.ml" 309 10021 10044
)
"m_elab.ml" 311 10077 10113 "m_elab.ml" 311 10077 10118
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 305 9864 9898 "m_elab.ml" 305 9864 9903
)
"m_elab.ml" 311 10077 10097 "m_elab.ml" 311 10077 10118
type(
  Expr.T.expr
)
"m_elab.ml" 312 10122 10138 "m_elab.ml" 312 10122 10139
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 313 10173 10185 "m_elab.ml" 314 10248 10295
)
"m_elab.ml" 312 10122 10142 "m_elab.ml" 312 10122 10150
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 312 10122 10152 "m_elab.ml" 312 10122 10157
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 312 10122 10158 "m_elab.ml" 312 10122 10166
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 305 9864 9889 "m_elab.ml" 305 9864 9897
)
"m_elab.ml" 312 10122 10151 "m_elab.ml" 312 10122 10167
type(
  Expr.Subst.sub
)
"m_elab.ml" 312 10122 10168 "m_elab.ml" 312 10122 10169
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 311 10077 10093 "m_elab.ml" 311 10077 10094
)
"m_elab.ml" 312 10122 10142 "m_elab.ml" 312 10122 10169
type(
  Expr.T.expr
)
"m_elab.ml" 313 10173 10190 "m_elab.ml" 313 10173 10191
type(
  Expr.Subst.sub
)
"m_elab.ml" 313 10173 10193 "m_elab.ml" 313 10173 10196
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 314 10248 10260 "m_elab.ml" 314 10248 10295
)
"m_elab.ml" 313 10173 10189 "m_elab.ml" 313 10173 10197
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 313 10173 10200 "m_elab.ml" 313 10173 10220
type(
  Expr.Subst.sub -> M_t.modunit list -> Expr.Subst.sub * M_t.modunit list
)
ident(
  int_ref M_subst.app_modunits "m_subst.mli" 7 98 98 "m_subst.mli" 7 98 157
)
"m_elab.ml" 313 10173 10222 "m_elab.ml" 313 10173 10227
type(
  Expr.T.expr -> Expr.Subst.sub -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.scons "expr.mli" 429 10832 10836 "expr.mli" 431 10870 10885
)
"m_elab.ml" 313 10173 10228 "m_elab.ml" 313 10173 10229
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 312 10122 10138 "m_elab.ml" 312 10122 10139
)
"m_elab.ml" 313 10173 10231 "m_elab.ml" 313 10173 10236
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 313 10173 10237 "m_elab.ml" 313 10173 10238
type(
  int
)
"m_elab.ml" 313 10173 10230 "m_elab.ml" 313 10173 10239
type(
  Expr.Subst.sub
)
"m_elab.ml" 313 10173 10221 "m_elab.ml" 313 10173 10240
type(
  Expr.Subst.sub
)
"m_elab.ml" 313 10173 10241 "m_elab.ml" 313 10173 10244
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 308 9977 9989 "m_elab.ml" 308 9977 9992
)
"m_elab.ml" 313 10173 10200 "m_elab.ml" 313 10173 10244
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 314 10248 10260 "m_elab.ml" 314 10248 10271
type(
  M_t.modunit list ->
  int -> Expr.T.expr HintMap.t -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref apply_subst "m_elab.ml" 305 9864 9872 "m_elab.ml" 305 9864 9883
)
"m_elab.ml" 314 10248 10272 "m_elab.ml" 314 10248 10276
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 305 9864 9884 "m_elab.ml" 305 9864 9888
)
"m_elab.ml" 314 10248 10277 "m_elab.ml" 314 10248 10285
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 305 9864 9889 "m_elab.ml" 305 9864 9897
)
"m_elab.ml" 314 10248 10286 "m_elab.ml" 314 10248 10291
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 305 9864 9898 "m_elab.ml" 305 9864 9903
)
"m_elab.ml" 314 10248 10292 "m_elab.ml" 314 10248 10295
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 313 10173 10193 "m_elab.ml" 313 10173 10196
)
"m_elab.ml" 314 10248 10260 "m_elab.ml" 314 10248 10295
type(
  M_t.modunit list
)
"m_elab.ml" 313 10173 10185 "m_elab.ml" 314 10248 10295
type(
  M_t.modunit list
)
"m_elab.ml" 312 10122 10134 "m_elab.ml" 314 10248 10295
type(
  M_t.modunit list
)
"m_elab.ml" 311 10077 10089 "m_elab.ml" 314 10248 10295
type(
  M_t.modunit list
)
"m_elab.ml" 315 10296 10317 "m_elab.ml" 315 10296 10318
type(
  Util.hint * Expr.T.shape
)
ident(
  def c "m_elab.ml" 316 10329 10341 "m_elab.ml" 319 10457 10484
)
"m_elab.ml" 315 10296 10322 "m_elab.ml" 315 10296 10324
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  def cs "m_elab.ml" 316 10329 10341 "m_elab.ml" 319 10457 10484
)
"m_elab.ml" 315 10296 10316 "m_elab.ml" 315 10296 10325
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 315 10296 10306 "m_elab.ml" 315 10296 10325
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 316 10329 10341 "m_elab.ml" 316 10329 10352
type(
  M_t.modunit list ->
  int -> Expr.T.expr HintMap.t -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref apply_subst "m_elab.ml" 305 9864 9872 "m_elab.ml" 305 9864 9883
)
"m_elab.ml" 316 10329 10353 "m_elab.ml" 316 10329 10357
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 305 9864 9884 "m_elab.ml" 305 9864 9888
)
"m_elab.ml" 316 10329 10358 "m_elab.ml" 316 10329 10366
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 305 9864 9889 "m_elab.ml" 305 9864 9897
)
"m_elab.ml" 316 10329 10367 "m_elab.ml" 316 10329 10372
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 305 9864 9898 "m_elab.ml" 305 9864 9903
)
"m_elab.ml" 317 10375 10403 "m_elab.ml" 317 10375 10404
type(
  Util.hint * Expr.T.shape
)
ident(
  int_ref c "m_elab.ml" 315 10296 10317 "m_elab.ml" 315 10296 10318
)
"m_elab.ml" 317 10375 10402 "m_elab.ml" 317 10375 10405
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 317 10375 10392 "m_elab.ml" 317 10375 10405
type(
  M_t.modunit_
)
"m_elab.ml" 317 10375 10406 "m_elab.ml" 317 10375 10408
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 317 10375 10409 "m_elab.ml" 317 10375 10411
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 317 10375 10391 "m_elab.ml" 317 10375 10412
type(
  M_t.modunit
)
"m_elab.ml" 318 10413 10447 "m_elab.ml" 318 10413 10449
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  int_ref cs "m_elab.ml" 315 10296 10322 "m_elab.ml" 315 10296 10324
)
"m_elab.ml" 318 10413 10437 "m_elab.ml" 318 10413 10449
type(
  M_t.modunit_
)
"m_elab.ml" 318 10413 10450 "m_elab.ml" 318 10413 10452
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 318 10413 10453 "m_elab.ml" 318 10413 10455
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 318 10413 10436 "m_elab.ml" 318 10413 10456
type(
  M_t.modunit
)
"m_elab.ml" 319 10457 10480 "m_elab.ml" 319 10457 10483
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 308 9977 9989 "m_elab.ml" 308 9977 9992
)
"m_elab.ml" 318 10413 10436 "m_elab.ml" 319 10457 10483
type(
  M_t.modunit list
)
"m_elab.ml" 316 10329 10373 "m_elab.ml" 319 10457 10484
type(
  M_t.modunit list
)
"m_elab.ml" 316 10329 10341 "m_elab.ml" 319 10457 10484
type(
  M_t.modunit list
)
"m_elab.ml" 320 10485 10506 "m_elab.ml" 320 10485 10507
type(
  Util.hint
)
ident(
  def v "m_elab.ml" 321 10518 10530 "m_elab.ml" 324 10646 10673
)
"m_elab.ml" 320 10485 10511 "m_elab.ml" 320 10485 10513
type(
  Util.hint list
)
ident(
  def vs "m_elab.ml" 321 10518 10530 "m_elab.ml" 324 10646 10673
)
"m_elab.ml" 320 10485 10505 "m_elab.ml" 320 10485 10514
type(
  Util.hints
)
"m_elab.ml" 320 10485 10495 "m_elab.ml" 320 10485 10514
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 321 10518 10530 "m_elab.ml" 321 10518 10541
type(
  M_t.modunit list ->
  int -> Expr.T.expr HintMap.t -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref apply_subst "m_elab.ml" 305 9864 9872 "m_elab.ml" 305 9864 9883
)
"m_elab.ml" 321 10518 10542 "m_elab.ml" 321 10518 10546
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 305 9864 9884 "m_elab.ml" 305 9864 9888
)
"m_elab.ml" 321 10518 10547 "m_elab.ml" 321 10518 10555
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 305 9864 9889 "m_elab.ml" 305 9864 9897
)
"m_elab.ml" 321 10518 10556 "m_elab.ml" 321 10518 10561
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 305 9864 9898 "m_elab.ml" 305 9864 9903
)
"m_elab.ml" 322 10564 10592 "m_elab.ml" 322 10564 10593
type(
  Util.hint
)
ident(
  int_ref v "m_elab.ml" 320 10485 10506 "m_elab.ml" 320 10485 10507
)
"m_elab.ml" 322 10564 10591 "m_elab.ml" 322 10564 10594
type(
  Util.hints
)
"m_elab.ml" 322 10564 10581 "m_elab.ml" 322 10564 10594
type(
  M_t.modunit_
)
"m_elab.ml" 322 10564 10595 "m_elab.ml" 322 10564 10597
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 322 10564 10598 "m_elab.ml" 322 10564 10600
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 322 10564 10580 "m_elab.ml" 322 10564 10601
type(
  M_t.modunit
)
"m_elab.ml" 323 10602 10636 "m_elab.ml" 323 10602 10638
type(
  Util.hints
)
ident(
  int_ref vs "m_elab.ml" 320 10485 10511 "m_elab.ml" 320 10485 10513
)
"m_elab.ml" 323 10602 10626 "m_elab.ml" 323 10602 10638
type(
  M_t.modunit_
)
"m_elab.ml" 323 10602 10639 "m_elab.ml" 323 10602 10641
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 323 10602 10642 "m_elab.ml" 323 10602 10644
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 323 10602 10625 "m_elab.ml" 323 10602 10645
type(
  M_t.modunit
)
"m_elab.ml" 324 10646 10669 "m_elab.ml" 324 10646 10672
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 308 9977 9989 "m_elab.ml" 308 9977 9992
)
"m_elab.ml" 323 10602 10625 "m_elab.ml" 324 10646 10672
type(
  M_t.modunit list
)
"m_elab.ml" 321 10518 10562 "m_elab.ml" 324 10646 10673
type(
  M_t.modunit list
)
"m_elab.ml" 321 10518 10530 "m_elab.ml" 324 10646 10673
type(
  M_t.modunit list
)
"m_elab.ml" 325 10674 10684 "m_elab.ml" 325 10674 10685
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 326 10689 10701 "m_elab.ml" 326 10689 10712
type(
  M_t.modunit list ->
  int -> Expr.T.expr HintMap.t -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref apply_subst "m_elab.ml" 305 9864 9872 "m_elab.ml" 305 9864 9883
)
"m_elab.ml" 326 10689 10714 "m_elab.ml" 326 10689 10716
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 326 10689 10720 "m_elab.ml" 326 10689 10724
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 305 9864 9884 "m_elab.ml" 305 9864 9888
)
"m_elab.ml" 326 10689 10713 "m_elab.ml" 326 10689 10725
type(
  M_t.modunit list
)
"m_elab.ml" 326 10689 10727 "m_elab.ml" 326 10689 10735
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 305 9864 9889 "m_elab.ml" 305 9864 9897
)
"m_elab.ml" 326 10689 10736 "m_elab.ml" 326 10689 10737
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 326 10689 10738 "m_elab.ml" 326 10689 10746
type(
  M_t.modunit -> int
)
ident(
  int_ref M_t.hyp_size "m_t.mli" 71 1738 1738 "m_t.mli" 71 1738 1766
)
"m_elab.ml" 326 10689 10747 "m_elab.ml" 326 10689 10749
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 308 9977 9983 "m_elab.ml" 308 9977 9985
)
"m_elab.ml" 326 10689 10738 "m_elab.ml" 326 10689 10749
type(
  int
)
"m_elab.ml" 326 10689 10726 "m_elab.ml" 326 10689 10750
type(
  int
)
"m_elab.ml" 326 10689 10751 "m_elab.ml" 326 10689 10756
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 305 9864 9898 "m_elab.ml" 305 9864 9903
)
"m_elab.ml" 326 10689 10757 "m_elab.ml" 326 10689 10760
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 308 9977 9989 "m_elab.ml" 308 9977 9992
)
"m_elab.ml" 326 10689 10701 "m_elab.ml" 326 10689 10760
type(
  M_t.modunit list
)
"m_elab.ml" 308 9977 9996 "m_elab.ml" 327 10761 10772
type(
  M_t.modunit list
)
"m_elab.ml" 305 9864 9906 "m_elab.ml" 327 10761 10772
type(
  M_t.modunit list -> M_t.modunit list
)
"m_elab.ml" 330 10775 10779 "m_elab.ml" 330 10775 10784
type(
  string Property.wrapped ->
  string Property.wrapped -> string Property.wrapped
)
ident(
  def tweak "m_elab.ml" 337 10910 10910 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 330 10775 10785 "m_elab.ml" 330 10775 10790
type(
  string Property.wrapped
)
ident(
  def iname "m_elab.ml" 330 10775 10791 "m_elab.ml" 334 10862 10907
)
"m_elab.ml" 330 10775 10791 "m_elab.ml" 330 10775 10793
type(
  string Property.wrapped
)
ident(
  def nm "m_elab.ml" 332 10821 10825 "m_elab.ml" 334 10862 10907
)
"m_elab.ml" 332 10821 10831 "m_elab.ml" 332 10821 10836
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 330 10775 10785 "m_elab.ml" 330 10775 10790
)
"m_elab.ml" 332 10821 10831 "m_elab.ml" 332 10821 10841
type(
  string
)
"m_elab.ml" 333 10847 10853 "m_elab.ml" 333 10847 10855
type(
  string
)
type(
  string
)
"m_elab.ml" 333 10847 10859 "m_elab.ml" 333 10847 10861
type(
  string Property.wrapped
)
ident(
  int_ref nm "m_elab.ml" 330 10775 10791 "m_elab.ml" 330 10775 10793
)
"m_elab.ml" 334 10862 10868 "m_elab.ml" 334 10862 10869
type(
  string
)
type(
  string
)
"m_elab.ml" 334 10862 10874 "m_elab.ml" 334 10862 10879
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 330 10775 10785 "m_elab.ml" 330 10775 10790
)
"m_elab.ml" 334 10862 10874 "m_elab.ml" 334 10862 10884
type(
  string
)
"m_elab.ml" 334 10862 10885 "m_elab.ml" 334 10862 10886
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 334 10862 10887 "m_elab.ml" 334 10862 10890
type(
  string
)
"m_elab.ml" 334 10862 10891 "m_elab.ml" 334 10862 10892
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 334 10862 10893 "m_elab.ml" 334 10862 10895
type(
  string Property.wrapped
)
ident(
  int_ref nm "m_elab.ml" 330 10775 10791 "m_elab.ml" 330 10775 10793
)
"m_elab.ml" 334 10862 10893 "m_elab.ml" 334 10862 10900
type(
  string
)
"m_elab.ml" 334 10862 10887 "m_elab.ml" 334 10862 10900
type(
  string
)
"m_elab.ml" 334 10862 10873 "m_elab.ml" 334 10862 10901
type(
  string
)
"m_elab.ml" 334 10862 10902 "m_elab.ml" 334 10862 10904
type(
  string -> string Property.wrapped -> string Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 334 10862 10905 "m_elab.ml" 334 10862 10907
type(
  string Property.wrapped
)
ident(
  int_ref nm "m_elab.ml" 330 10775 10791 "m_elab.ml" 330 10775 10793
)
"m_elab.ml" 334 10862 10873 "m_elab.ml" 334 10862 10907
type(
  string Property.wrapped
)
"m_elab.ml" 332 10821 10825 "m_elab.ml" 334 10862 10907
type(
  string Property.wrapped
)
"m_elab.ml" 337 10910 10914 "m_elab.ml" 337 10910 10923
type(
  int -> int -> Expr.T.expr list -> 'a Property.wrapped -> Expr.Subst.sub
)
ident(
  def resub_for "m_elab.ml" 382 12605 12605 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 337 10910 10924 "m_elab.ml" 337 10910 10925
type(
  int
)
ident(
  def n "m_elab.ml" 337 10910 10926 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 337 10910 10926 "m_elab.ml" 337 10910 10932
type(
  int
)
ident(
  def niargs "m_elab.ml" 337 10910 10933 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 337 10910 10933 "m_elab.ml" 337 10910 10938
type(
  Expr.T.expr list
)
ident(
  def iargs "m_elab.ml" 337 10910 10939 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 337 10910 10939 "m_elab.ml" 337 10910 10943
type(
  'a Property.wrapped
)
ident(
  def inst "m_elab.ml" 350 11548 11552 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 350 11548 11556 "m_elab.ml" 350 11548 11559
type(
  Expr.Subst.sub
)
ident(
  def sub "m_elab.ml" 355 11827 11831 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 350 11548 11562 "m_elab.ml" 350 11548 11567
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 350 11548 11569 "m_elab.ml" 350 11548 11570
type(
  int
)
ident(
  int_ref n "m_elab.ml" 337 10910 10924 "m_elab.ml" 337 10910 10925
)
"m_elab.ml" 350 11548 11571 "m_elab.ml" 350 11548 11572
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 350 11548 11573 "m_elab.ml" 350 11548 11579
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 337 10910 10926 "m_elab.ml" 337 10910 10932
)
"m_elab.ml" 350 11548 11568 "m_elab.ml" 350 11548 11580
type(
  int
)
"m_elab.ml" 350 11548 11562 "m_elab.ml" 350 11548 11580
type(
  Expr.Subst.sub
)
"m_elab.ml" 355 11827 11835 "m_elab.ml" 355 11827 11838
type(
  Expr.Subst.sub
)
ident(
  def sub "m_elab.ml" 364 12112 12116 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 356 11841 11849 "m_elab.ml" 356 11841 11864
type(
  (Expr.T.expr -> Expr.Subst.sub -> Expr.Subst.sub) ->
  Expr.T.expr list -> Expr.Subst.sub -> Expr.Subst.sub
)
ident(
  int_ref Ext.List.fold_right "ext.mli" 20 621 623 "ext.mli" 20 621 679
)
"m_elab.ml" 357 11865 11877 "m_elab.ml" 357 11865 11882
type(
  Expr.T.expr -> Expr.Subst.sub -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.scons "expr.mli" 429 10832 10836 "expr.mli" 431 10870 10885
)
"m_elab.ml" 358 11883 11896 "m_elab.ml" 358 11883 11905
type(
  int -> (int -> Expr.T.expr) -> Expr.T.expr list
)
ident(
  int_ref Ext.List.init "ext.mli" 50 2229 2231 "ext.mli" 50 2229 2271
)
"m_elab.ml" 358 11883 11906 "m_elab.ml" 358 11883 11912
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 337 10910 10926 "m_elab.ml" 337 10910 10932
)
"m_elab.ml" 358 11883 11918 "m_elab.ml" 358 11883 11919
type(
  int
)
ident(
  def k "m_elab.ml" 358 11883 11923 "m_elab.ml" 358 11883 11941
)
"m_elab.ml" 358 11883 11927 "m_elab.ml" 358 11883 11928
type(
  int
)
ident(
  int_ref k "m_elab.ml" 358 11883 11918 "m_elab.ml" 358 11883 11919
)
"m_elab.ml" 358 11883 11929 "m_elab.ml" 358 11883 11930
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 358 11883 11931 "m_elab.ml" 358 11883 11932
type(
  int
)
"m_elab.ml" 358 11883 11926 "m_elab.ml" 358 11883 11933
type(
  int
)
"m_elab.ml" 358 11883 11923 "m_elab.ml" 358 11883 11933
type(
  Expr.T.expr_
)
"m_elab.ml" 358 11883 11934 "m_elab.ml" 358 11883 11936
type(
  Expr.T.expr_ -> 'a Property.wrapped -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 358 11883 11937 "m_elab.ml" 358 11883 11941
type(
  'a Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 337 10910 10939 "m_elab.ml" 337 10910 10943
)
"m_elab.ml" 358 11883 11923 "m_elab.ml" 358 11883 11941
type(
  Expr.T.expr
)
"m_elab.ml" 358 11883 11913 "m_elab.ml" 358 11883 11942
type(
  int -> Expr.T.expr
)
"m_elab.ml" 358 11883 11895 "m_elab.ml" 358 11883 11943
type(
  Expr.T.expr list
)
"m_elab.ml" 359 11944 11956 "m_elab.ml" 359 11944 11959
type(
  Expr.Subst.sub
)
ident(
  int_ref sub "m_elab.ml" 350 11548 11556 "m_elab.ml" 350 11548 11559
)
"m_elab.ml" 356 11841 11849 "m_elab.ml" 359 11944 11959
type(
  Expr.Subst.sub
)
"m_elab.ml" 364 12112 12120 "m_elab.ml" 364 12112 12123
type(
  Expr.Subst.sub
)
ident(
  def sub "m_elab.ml" 379 12595 12599 "m_elab.ml" 379 12595 12602
)
"m_elab.ml" 365 12126 12138 "m_elab.ml" 365 12126 12139
type(
  Expr.T.expr_ Property.wrapped list
)
ident(
  def l "m_elab.ml" 377 12552 12560 "m_elab.ml" 377 12552 12587
)
"m_elab.ml" 366 12142 12158 "m_elab.ml" 366 12142 12162
type(
  int -> Expr.T.expr_ Property.wrapped
)
ident(
  def init "m_elab.ml" 375 12512 12524 "m_elab.ml" 375 12512 12540
)
"m_elab.ml" 366 12142 12163 "m_elab.ml" 366 12142 12164
type(
  int
)
ident(
  def k "m_elab.ml" 367 12167 12183 "m_elab.ml" 373 12465 12492
)
"m_elab.ml" 367 12167 12187 "m_elab.ml" 367 12167 12189
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def op "m_elab.ml" 368 12223 12239 "m_elab.ml" 373 12465 12492
)
"m_elab.ml" 367 12167 12196 "m_elab.ml" 367 12167 12197
type(
  int
)
ident(
  int_ref k "m_elab.ml" 366 12142 12163 "m_elab.ml" 366 12142 12164
)
"m_elab.ml" 367 12167 12198 "m_elab.ml" 367 12167 12199
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 367 12167 12200 "m_elab.ml" 367 12167 12206
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 337 10910 10926 "m_elab.ml" 337 10910 10932
)
"m_elab.ml" 367 12167 12196 "m_elab.ml" 367 12167 12206
type(
  int
)
"m_elab.ml" 367 12167 12207 "m_elab.ml" 367 12167 12208
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 367 12167 12209 "m_elab.ml" 367 12167 12210
type(
  int
)
"m_elab.ml" 367 12167 12195 "m_elab.ml" 367 12167 12211
type(
  int
)
"m_elab.ml" 367 12167 12192 "m_elab.ml" 367 12167 12211
type(
  Expr.T.expr_
)
"m_elab.ml" 367 12167 12212 "m_elab.ml" 367 12167 12214
type(
  Expr.T.expr_ -> 'a Property.wrapped -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 367 12167 12215 "m_elab.ml" 367 12167 12219
type(
  'a Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 337 10910 10939 "m_elab.ml" 337 10910 10943
)
"m_elab.ml" 367 12167 12192 "m_elab.ml" 367 12167 12219
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 368 12223 12244 "m_elab.ml" 368 12223 12255
type(
  Expr.T.expr list -> int
)
ident(
  int_ref Ext.List.length "ext.mli" 7 102 104 "ext.mli" 7 102 131
)
"m_elab.ml" 368 12223 12256 "m_elab.ml" 368 12223 12261
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 337 10910 10933 "m_elab.ml" 337 10910 10938
)
"m_elab.ml" 368 12223 12243 "m_elab.ml" 368 12223 12262
type(
  int
)
"m_elab.ml" 368 12223 12263 "m_elab.ml" 368 12223 12265
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( >= ) "stdlib.mli" 150 6190 6190 "stdlib.mli" 150 6190 6242
)
"m_elab.ml" 368 12223 12266 "m_elab.ml" 368 12223 12267
type(
  int
)
"m_elab.ml" 368 12223 12243 "m_elab.ml" 368 12223 12267
type(
  bool
)
"m_elab.ml" 369 12279 12308 "m_elab.ml" 369 12279 12319
type(
  Expr.T.expr list -> int
)
ident(
  int_ref Ext.List.length "ext.mli" 7 102 104 "ext.mli" 7 102 131
)
"m_elab.ml" 369 12279 12320 "m_elab.ml" 369 12279 12325
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 337 10910 10933 "m_elab.ml" 337 10910 10938
)
"m_elab.ml" 369 12279 12307 "m_elab.ml" 369 12279 12326
type(
  int
)
"m_elab.ml" 369 12279 12327 "m_elab.ml" 369 12279 12329
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( >= ) "stdlib.mli" 150 6190 6190 "stdlib.mli" 150 6190 6242
)
"m_elab.ml" 369 12279 12330 "m_elab.ml" 369 12279 12331
type(
  int
)
"m_elab.ml" 369 12279 12306 "m_elab.ml" 369 12279 12332
type(
  bool
)
"m_elab.ml" 369 12279 12299 "m_elab.ml" 369 12279 12332
type(
  unit
)
"m_elab.ml" 370 12334 12361 "m_elab.ml" 370 12334 12363
type(
  Expr.T.expr
)
ident(
  int_ref op "m_elab.ml" 367 12167 12187 "m_elab.ml" 367 12167 12189
)
"m_elab.ml" 370 12334 12365 "m_elab.ml" 370 12334 12370
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 337 10910 10933 "m_elab.ml" 337 10910 10938
)
"m_elab.ml" 370 12334 12354 "m_elab.ml" 370 12334 12371
type(
  Expr.T.expr_
)
"m_elab.ml" 370 12334 12372 "m_elab.ml" 370 12334 12374
type(
  Expr.T.expr_ -> 'a Property.wrapped -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 370 12334 12375 "m_elab.ml" 370 12334 12379
type(
  'a Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 337 10910 10939 "m_elab.ml" 337 10910 10943
)
"m_elab.ml" 370 12334 12354 "m_elab.ml" 370 12334 12379
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 368 12223 12273 "m_elab.ml" 370 12334 12383
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 372 12411 12440 "m_elab.ml" 372 12411 12451
type(
  Expr.T.expr list -> int
)
ident(
  int_ref Ext.List.length "ext.mli" 7 102 104 "ext.mli" 7 102 131
)
"m_elab.ml" 372 12411 12452 "m_elab.ml" 372 12411 12457
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 337 10910 10933 "m_elab.ml" 337 10910 10938
)
"m_elab.ml" 372 12411 12439 "m_elab.ml" 372 12411 12458
type(
  int
)
"m_elab.ml" 372 12411 12459 "m_elab.ml" 372 12411 12460
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 372 12411 12461 "m_elab.ml" 372 12411 12462
type(
  int
)
"m_elab.ml" 372 12411 12438 "m_elab.ml" 372 12411 12463
type(
  bool
)
"m_elab.ml" 372 12411 12431 "m_elab.ml" 372 12411 12463
type(
  unit
)
"m_elab.ml" 373 12465 12485 "m_elab.ml" 373 12465 12487
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  int_ref op "m_elab.ml" 367 12167 12187 "m_elab.ml" 367 12167 12189
)
"m_elab.ml" 371 12384 12405 "m_elab.ml" 373 12465 12491
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 368 12223 12239 "m_elab.ml" 373 12465 12492
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 367 12167 12183 "m_elab.ml" 373 12465 12492
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 375 12512 12524 "m_elab.ml" 375 12512 12533
type(
  int ->
  (int -> Expr.T.expr_ Property.wrapped) ->
  Expr.T.expr_ Property.wrapped list
)
ident(
  int_ref Ext.List.init "ext.mli" 50 2229 2231 "ext.mli" 50 2229 2271
)
"m_elab.ml" 375 12512 12534 "m_elab.ml" 375 12512 12535
type(
  int
)
ident(
  int_ref n "m_elab.ml" 337 10910 10924 "m_elab.ml" 337 10910 10925
)
"m_elab.ml" 375 12512 12536 "m_elab.ml" 375 12512 12540
type(
  int -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref init "m_elab.ml" 366 12142 12158 "m_elab.ml" 366 12142 12162
)
"m_elab.ml" 375 12512 12524 "m_elab.ml" 375 12512 12540
type(
  Expr.T.expr_ Property.wrapped list
)
"m_elab.ml" 366 12142 12154 "m_elab.ml" 375 12512 12540
type(
  Expr.T.expr_ Property.wrapped list
)
"m_elab.ml" 377 12552 12560 "m_elab.ml" 377 12552 12575
type(
  (Expr.T.expr -> Expr.Subst.sub -> Expr.Subst.sub) ->
  Expr.T.expr list -> Expr.Subst.sub -> Expr.Subst.sub
)
ident(
  int_ref Ext.List.fold_right "ext.mli" 20 621 623 "ext.mli" 20 621 679
)
"m_elab.ml" 377 12552 12576 "m_elab.ml" 377 12552 12581
type(
  Expr.T.expr -> Expr.Subst.sub -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.scons "expr.mli" 429 10832 10836 "expr.mli" 431 10870 10885
)
"m_elab.ml" 377 12552 12582 "m_elab.ml" 377 12552 12583
type(
  Expr.T.expr list
)
ident(
  int_ref l "m_elab.ml" 365 12126 12138 "m_elab.ml" 365 12126 12139
)
"m_elab.ml" 377 12552 12584 "m_elab.ml" 377 12552 12587
type(
  Expr.Subst.sub
)
ident(
  int_ref sub "m_elab.ml" 355 11827 11835 "m_elab.ml" 355 11827 11838
)
"m_elab.ml" 377 12552 12560 "m_elab.ml" 377 12552 12587
type(
  Expr.Subst.sub
)
"m_elab.ml" 365 12126 12134 "m_elab.ml" 377 12552 12587
type(
  Expr.Subst.sub
)
"m_elab.ml" 379 12595 12599 "m_elab.ml" 379 12595 12602
type(
  Expr.Subst.sub
)
ident(
  int_ref sub "m_elab.ml" 364 12112 12120 "m_elab.ml" 364 12112 12123
)
"m_elab.ml" 364 12112 12116 "m_elab.ml" 379 12595 12602
type(
  Expr.Subst.sub
)
"m_elab.ml" 355 11827 11831 "m_elab.ml" 379 12595 12602
type(
  Expr.Subst.sub
)
"m_elab.ml" 350 11548 11552 "m_elab.ml" 379 12595 12602
type(
  Expr.Subst.sub
)
"m_elab.ml" 382 12605 12609 "m_elab.ml" 382 12605 12617
type(
  Expr.T.expr ->
  Expr.T.instance Property.wrapped -> int -> Expr.T.expr_ Property.wrapped
)
ident(
  def lambdify "m_elab.ml" 402 13159 13159 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 382 12605 12618 "m_elab.ml" 382 12605 12619
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 382 12605 12620 "m_elab.ml" 399 13149 13156
)
"m_elab.ml" 382 12605 12620 "m_elab.ml" 382 12605 12624
type(
  Expr.T.instance Property.wrapped
)
ident(
  def inst "m_elab.ml" 382 12605 12625 "m_elab.ml" 399 13149 13156
)
"m_elab.ml" 382 12605 12625 "m_elab.ml" 382 12605 12631
type(
  int
)
ident(
  def niargs "m_elab.ml" 384 12678 12682 "m_elab.ml" 399 13149 13156
)
"m_elab.ml" 384 12678 12682 "m_elab.ml" 384 12678 12702
type(
  Expr.T.expr -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Expr.Levels.rm_level "expr.mli" 692 17597 17601 "expr.mli" 693 17615 17665
)
"m_elab.ml" 384 12678 12715 "m_elab.ml" 384 12678 12716
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 382 12605 12618 "m_elab.ml" 382 12605 12619
)
"m_elab.ml" 384 12678 12715 "m_elab.ml" 384 12678 12721
type(
  Expr.T.expr_
)
"m_elab.ml" 385 12727 12741 "m_elab.ml" 385 12727 12743
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  def vs "m_elab.ml" 386 12752 12760 "m_elab.ml" 389 12869 12903
)
"m_elab.ml" 385 12727 12745 "m_elab.ml" 385 12727 12747
type(
  Expr.T.expr
)
ident(
  def le "m_elab.ml" 386 12752 12760 "m_elab.ml" 389 12869 12903
)
"m_elab.ml" 385 12727 12733 "m_elab.ml" 385 12727 12748
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 386 12752 12764 "m_elab.ml" 386 12752 12767
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  def ivs "m_elab.ml" 389 12869 12877 "m_elab.ml" 389 12869 12903
)
"m_elab.ml" 386 12752 12770 "m_elab.ml" 386 12752 12778
type(
  (Util.hint -> Util.hint * Expr.T.shape) ->
  Util.hints -> (Util.hint * Expr.T.shape) list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"m_elab.ml" 387 12779 12804 "m_elab.ml" 387 12779 12805
type(
  Util.hint
)
ident(
  def v "m_elab.ml" 387 12779 12809 "m_elab.ml" 387 12779 12824
)
"m_elab.ml" 387 12779 12810 "m_elab.ml" 387 12779 12811
type(
  Util.hint
)
ident(
  int_ref v "m_elab.ml" 387 12779 12804 "m_elab.ml" 387 12779 12805
)
"m_elab.ml" 387 12779 12813 "m_elab.ml" 387 12779 12823
type(
  Expr.T.shape
)
"m_elab.ml" 387 12779 12809 "m_elab.ml" 387 12779 12824
type(
  Util.hint * Expr.T.shape
)
"m_elab.ml" 387 12779 12799 "m_elab.ml" 387 12779 12825
type(
  Util.hint -> Util.hint * Expr.T.shape
)
"m_elab.ml" 388 12826 12846 "m_elab.ml" 388 12826 12850
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 382 12605 12620 "m_elab.ml" 382 12605 12624
)
"m_elab.ml" 388 12826 12846 "m_elab.ml" 388 12826 12855
type(
  Expr.T.instance
)
"m_elab.ml" 388 12826 12846 "m_elab.ml" 388 12826 12865
type(
  Util.hints
)
"m_elab.ml" 386 12752 12770 "m_elab.ml" 388 12826 12865
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 389 12869 12885 "m_elab.ml" 389 12869 12888
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  int_ref ivs "m_elab.ml" 386 12752 12764 "m_elab.ml" 386 12752 12767
)
"m_elab.ml" 389 12869 12889 "m_elab.ml" 389 12869 12890
type(
  (Util.hint * Expr.T.shape) list ->
  (Util.hint * Expr.T.shape) list -> (Util.hint * Expr.T.shape) list
)
ident(
  int_ref Stdlib.( @ ) "stdlib.mli" 823 30483 30483 "stdlib.mli" 823 30483 30524
)
"m_elab.ml" 389 12869 12891 "m_elab.ml" 389 12869 12893
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  int_ref vs "m_elab.ml" 385 12727 12741 "m_elab.ml" 385 12727 12743
)
"m_elab.ml" 389 12869 12885 "m_elab.ml" 389 12869 12893
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 389 12869 12895 "m_elab.ml" 389 12869 12897
type(
  Expr.T.expr
)
ident(
  int_ref le "m_elab.ml" 385 12727 12745 "m_elab.ml" 385 12727 12747
)
"m_elab.ml" 389 12869 12877 "m_elab.ml" 389 12869 12898
type(
  Expr.T.expr_
)
"m_elab.ml" 389 12869 12899 "m_elab.ml" 389 12869 12901
type(
  Expr.T.expr_ -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 389 12869 12902 "m_elab.ml" 389 12869 12903
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 382 12605 12618 "m_elab.ml" 382 12605 12619
)
"m_elab.ml" 389 12869 12877 "m_elab.ml" 389 12869 12903
type(
  Expr.T.expr
)
"m_elab.ml" 386 12752 12760 "m_elab.ml" 389 12869 12903
type(
  Expr.T.expr
)
"m_elab.ml" 390 12904 12910 "m_elab.ml" 390 12904 12911
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 391 12915 12926 "m_elab.ml" 391 12915 12932
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 382 12605 12625 "m_elab.ml" 382 12605 12631
)
"m_elab.ml" 391 12915 12933 "m_elab.ml" 391 12915 12934
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 391 12915 12935 "m_elab.ml" 391 12915 12936
type(
  int
)
"m_elab.ml" 391 12915 12926 "m_elab.ml" 391 12915 12936
type(
  bool
)
"m_elab.ml" 392 12942 12954 "m_elab.ml" 392 12942 12955
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 382 12605 12618 "m_elab.ml" 382 12605 12619
)
"m_elab.ml" 394 12975 12991 "m_elab.ml" 394 12975 12994
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  def ivs "m_elab.ml" 397 13104 13116 "m_elab.ml" 397 13104 13136
)
"m_elab.ml" 394 12975 12997 "m_elab.ml" 394 12975 13005
type(
  (Util.hint -> Util.hint * Expr.T.shape) ->
  Util.hints -> (Util.hint * Expr.T.shape) list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"m_elab.ml" 395 13006 13035 "m_elab.ml" 395 13006 13036
type(
  Util.hint
)
ident(
  def v "m_elab.ml" 395 13006 13040 "m_elab.ml" 395 13006 13055
)
"m_elab.ml" 395 13006 13041 "m_elab.ml" 395 13006 13042
type(
  Util.hint
)
ident(
  int_ref v "m_elab.ml" 395 13006 13035 "m_elab.ml" 395 13006 13036
)
"m_elab.ml" 395 13006 13044 "m_elab.ml" 395 13006 13054
type(
  Expr.T.shape
)
"m_elab.ml" 395 13006 13040 "m_elab.ml" 395 13006 13055
type(
  Util.hint * Expr.T.shape
)
"m_elab.ml" 395 13006 13030 "m_elab.ml" 395 13006 13056
type(
  Util.hint -> Util.hint * Expr.T.shape
)
"m_elab.ml" 396 13057 13081 "m_elab.ml" 396 13057 13085
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 382 12605 12620 "m_elab.ml" 382 12605 12624
)
"m_elab.ml" 396 13057 13081 "m_elab.ml" 396 13057 13090
type(
  Expr.T.instance
)
"m_elab.ml" 396 13057 13081 "m_elab.ml" 396 13057 13100
type(
  Util.hints
)
"m_elab.ml" 394 12975 12997 "m_elab.ml" 396 13057 13100
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 397 13104 13124 "m_elab.ml" 397 13104 13127
type(
  (Util.hint * Expr.T.shape) list
)
ident(
  int_ref ivs "m_elab.ml" 394 12975 12991 "m_elab.ml" 394 12975 12994
)
"m_elab.ml" 397 13104 13129 "m_elab.ml" 397 13104 13130
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 382 12605 12618 "m_elab.ml" 382 12605 12619
)
"m_elab.ml" 397 13104 13116 "m_elab.ml" 397 13104 13131
type(
  Expr.T.expr_
)
"m_elab.ml" 397 13104 13132 "m_elab.ml" 397 13104 13134
type(
  Expr.T.expr_ -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 397 13104 13135 "m_elab.ml" 397 13104 13136
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 382 12605 12618 "m_elab.ml" 382 12605 12619
)
"m_elab.ml" 397 13104 13116 "m_elab.ml" 397 13104 13136
type(
  Expr.T.expr
)
"m_elab.ml" 393 12956 12969 "m_elab.ml" 398 13137 13148
type(
  Expr.T.expr
)
"m_elab.ml" 391 12915 12923 "m_elab.ml" 398 13137 13148
type(
  Expr.T.expr
)
"m_elab.ml" 384 12678 12703 "m_elab.ml" 399 13149 13156
type(
  Expr.T.expr
)
"m_elab.ml" 384 12678 12682 "m_elab.ml" 399 13149 13156
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  def localize "m_elab.ml" 402 13159 13159 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  def body "m_elab.ml" 402 13159 13181 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
type(
  int
)
ident(
  def body_len "m_elab.ml" 402 13159 13190 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
type(
  string Property.wrapped
)
ident(
  def iname "m_elab.ml" 402 13159 13196 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
type(
  int
)
ident(
  def niargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
type(
  Expr.T.expr list
)
ident(
  def iargs "m_elab.ml" 402 13159 13209 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
type(
  bool ref
)
ident(
  def not_complained "m_elab.ml" 402 13159 13224 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
type(
  Expr.T.instance Property.wrapped
)
ident(
  def inst "m_elab.ml" 402 13159 13229 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
type(
  Expr.T.export
)
ident(
  def local "m_elab.ml" 403 13237 13241 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 405 13310 13314 "m_elab.ml" 405 13310 13316
type(
  M_t.modunit list
)
"m_elab.ml" 405 13310 13320 "m_elab.ml" 405 13310 13328
type(
  M_t.modunit_ Property.wrapped list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref Ext.List.rev "ext.mli" 11 220 222 "ext.mli" 11 220 250
)
"m_elab.ml" 405 13310 13329 "m_elab.ml" 405 13310 13333
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 405 13310 13320 "m_elab.ml" 405 13310 13333
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 407 13351 13357 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 407 13351 13357 "m_elab.ml" 488 17205 17212
)
"m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13347
type(
  M_t.modunit list
)
"m_elab.ml" 407 13351 13369 "m_elab.ml" 407 13351 13371
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 407 13351 13369 "m_elab.ml" 407 13351 13376
type(
  M_t.modunit_
)
"m_elab.ml" 408 13382 13420 "m_elab.ml" 408 13382 13422
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 408 13382 13424 "m_elab.ml" 408 13382 13425
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 408 13382 13410 "m_elab.ml" 408 13382 13426
type(
  Expr.T.defn_
)
"m_elab.ml" 408 13382 13402 "m_elab.ml" 408 13382 13427
type(
  Expr.T.defn
)
"m_elab.ml" 408 13382 13402 "m_elab.ml" 408 13382 13433
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 408 13382 13435 "m_elab.ml" 408 13382 13437
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 408 13382 13439 "m_elab.ml" 408 13382 13442
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 408 13382 13444 "m_elab.ml" 408 13382 13446
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 408 13382 13390 "m_elab.ml" 408 13382 13447
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 409 13451 13465 "m_elab.ml" 409 13451 13467
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 410 13508 13518 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 409 13451 13473 "m_elab.ml" 409 13451 13475
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 408 13382 13444 "m_elab.ml" 408 13382 13446
)
"m_elab.ml" 409 13451 13476 "m_elab.ml" 409 13451 13477
type(
  Expr.T.export -> Expr.T.export -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 409 13451 13478 "m_elab.ml" 409 13451 13483
type(
  Expr.T.export
)
"m_elab.ml" 409 13451 13473 "m_elab.ml" 409 13451 13483
type(
  bool
)
"m_elab.ml" 409 13451 13489 "m_elab.ml" 409 13451 13493
type(
  Util.hint -> Util.hint
)
ident(
  int_ref salt "m_elab.ml" 78 2262 2266 "m_elab.ml" 78 2262 2270
)
"m_elab.ml" 409 13451 13494 "m_elab.ml" 409 13451 13496
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 408 13382 13420 "m_elab.ml" 408 13382 13422
)
"m_elab.ml" 409 13451 13489 "m_elab.ml" 409 13451 13496
type(
  Util.hint
)
"m_elab.ml" 409 13451 13502 "m_elab.ml" 409 13451 13504
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 408 13382 13420 "m_elab.ml" 408 13382 13422
)
"m_elab.ml" 409 13451 13470 "m_elab.ml" 409 13451 13504
type(
  Util.hint
)
"m_elab.ml" 410 13508 13522 "m_elab.ml" 410 13508 13524
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 411 13545 13555 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 410 13508 13527 "m_elab.ml" 410 13508 13532
type(
  string Property.wrapped -> Util.hint -> Util.hint
)
ident(
  int_ref tweak "m_elab.ml" 330 10775 10779 "m_elab.ml" 330 10775 10784
)
"m_elab.ml" 410 13508 13533 "m_elab.ml" 410 13508 13538
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 410 13508 13539 "m_elab.ml" 410 13508 13541
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 409 13451 13465 "m_elab.ml" 409 13451 13467
)
"m_elab.ml" 410 13508 13527 "m_elab.ml" 410 13508 13541
type(
  Util.hint
)
"m_elab.ml" 411 13545 13559 "m_elab.ml" 411 13545 13560
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 412 13616 13626 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 411 13545 13563 "m_elab.ml" 411 13545 13571
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 411 13545 13573 "m_elab.ml" 411 13545 13582
type(
  int ->
  int ->
  Expr.T.expr list -> Expr.T.instance Property.wrapped -> Expr.Subst.sub
)
ident(
  int_ref resub_for "m_elab.ml" 337 10910 10914 "m_elab.ml" 337 10910 10923
)
"m_elab.ml" 411 13545 13583 "m_elab.ml" 411 13545 13591
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 411 13545 13592 "m_elab.ml" 411 13545 13598
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 411 13545 13599 "m_elab.ml" 411 13545 13604
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 411 13545 13605 "m_elab.ml" 411 13545 13609
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 411 13545 13572 "m_elab.ml" 411 13545 13610
type(
  Expr.Subst.sub
)
"m_elab.ml" 411 13545 13611 "m_elab.ml" 411 13545 13612
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 408 13382 13424 "m_elab.ml" 408 13382 13425
)
"m_elab.ml" 411 13545 13563 "m_elab.ml" 411 13545 13612
type(
  Expr.T.expr
)
"m_elab.ml" 412 13616 13630 "m_elab.ml" 412 13616 13631
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def e "m_elab.ml" 413 13660 13670 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 412 13616 13634 "m_elab.ml" 412 13616 13642
type(
  Expr.T.expr ->
  Expr.T.instance Property.wrapped -> int -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref lambdify "m_elab.ml" 382 12605 12609 "m_elab.ml" 382 12605 12617
)
"m_elab.ml" 412 13616 13643 "m_elab.ml" 412 13616 13644
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 411 13545 13559 "m_elab.ml" 411 13545 13560
)
"m_elab.ml" 412 13616 13645 "m_elab.ml" 412 13616 13649
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 412 13616 13650 "m_elab.ml" 412 13616 13656
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 412 13616 13634 "m_elab.ml" 412 13616 13656
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 413 13660 13674 "m_elab.ml" 413 13660 13676
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 414 13717 13727 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 413 13660 13682 "m_elab.ml" 413 13660 13684
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 408 13382 13444 "m_elab.ml" 408 13382 13446
)
"m_elab.ml" 413 13660 13685 "m_elab.ml" 413 13660 13686
type(
  Expr.T.export -> Expr.T.export -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 413 13660 13687 "m_elab.ml" 413 13660 13692
type(
  Expr.T.export
)
"m_elab.ml" 413 13660 13682 "m_elab.ml" 413 13660 13692
type(
  bool
)
"m_elab.ml" 413 13660 13698 "m_elab.ml" 413 13660 13705
type(
  Expr.T.wheredef
)
"m_elab.ml" 413 13660 13711 "m_elab.ml" 413 13660 13713
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 408 13382 13435 "m_elab.ml" 408 13382 13437
)
"m_elab.ml" 413 13660 13679 "m_elab.ml" 413 13660 13713
type(
  Expr.T.wheredef
)
"m_elab.ml" 414 13717 13731 "m_elab.ml" 414 13717 13733
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 415 13775 13785 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 414 13717 13739 "m_elab.ml" 414 13717 13741
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 408 13382 13444 "m_elab.ml" 408 13382 13446
)
"m_elab.ml" 414 13717 13742 "m_elab.ml" 414 13717 13743
type(
  Expr.T.export -> Expr.T.export -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 414 13717 13744 "m_elab.ml" 414 13717 13749
type(
  Expr.T.export
)
"m_elab.ml" 414 13717 13739 "m_elab.ml" 414 13717 13749
type(
  bool
)
"m_elab.ml" 414 13717 13755 "m_elab.ml" 414 13717 13760
type(
  Expr.T.export
)
"m_elab.ml" 414 13717 13766 "m_elab.ml" 414 13717 13771
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 414 13717 13736 "m_elab.ml" 414 13717 13771
type(
  Expr.T.export
)
"m_elab.ml" 415 13775 13789 "m_elab.ml" 415 13775 13791
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 416 13852 13862 "m_elab.ml" 417 13918 13959
)
"m_elab.ml" 415 13775 13816 "m_elab.ml" 415 13775 13818
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 410 13508 13522 "m_elab.ml" 410 13508 13524
)
"m_elab.ml" 415 13775 13820 "m_elab.ml" 415 13775 13821
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 412 13616 13630 "m_elab.ml" 412 13616 13631
)
"m_elab.ml" 415 13775 13806 "m_elab.ml" 415 13775 13822
type(
  Expr.T.defn_
)
"m_elab.ml" 415 13775 13823 "m_elab.ml" 415 13775 13825
type(
  Expr.T.defn_ -> Expr.T.defn_ Property.wrapped -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 415 13775 13826 "m_elab.ml" 415 13775 13828
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 408 13382 13402 "m_elab.ml" 408 13382 13433
)
"m_elab.ml" 415 13775 13806 "m_elab.ml" 415 13775 13828
type(
  Expr.T.defn
)
"m_elab.ml" 415 13775 13830 "m_elab.ml" 415 13775 13832
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 413 13660 13674 "m_elab.ml" 413 13660 13676
)
"m_elab.ml" 415 13775 13834 "m_elab.ml" 415 13775 13837
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 408 13382 13439 "m_elab.ml" 408 13382 13442
)
"m_elab.ml" 415 13775 13839 "m_elab.ml" 415 13775 13841
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 414 13717 13731 "m_elab.ml" 414 13717 13733
)
"m_elab.ml" 415 13775 13794 "m_elab.ml" 415 13775 13842
type(
  M_t.modunit_
)
"m_elab.ml" 415 13775 13843 "m_elab.ml" 415 13775 13845
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 415 13775 13846 "m_elab.ml" 415 13775 13848
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 415 13775 13794 "m_elab.ml" 415 13775 13848
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 416 13852 13862 "m_elab.ml" 416 13852 13870
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 416 13852 13872 "m_elab.ml" 416 13852 13874
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 415 13775 13789 "m_elab.ml" 415 13775 13791
)
"m_elab.ml" 416 13852 13878 "m_elab.ml" 416 13852 13882
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 416 13852 13871 "m_elab.ml" 416 13852 13883
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 416 13852 13885 "m_elab.ml" 416 13852 13893
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 416 13852 13894 "m_elab.ml" 416 13852 13895
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 416 13852 13896 "m_elab.ml" 416 13852 13897
type(
  int
)
"m_elab.ml" 416 13852 13884 "m_elab.ml" 416 13852 13898
type(
  int
)
"m_elab.ml" 416 13852 13899 "m_elab.ml" 416 13852 13904
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 416 13852 13905 "m_elab.ml" 416 13852 13911
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 416 13852 13912 "m_elab.ml" 416 13852 13917
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 417 13918 13930 "m_elab.ml" 417 13918 13944
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 417 13918 13945 "m_elab.ml" 417 13918 13949
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 417 13918 13950 "m_elab.ml" 417 13918 13955
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 417 13918 13956 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 416 13852 13862 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 415 13775 13785 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 414 13717 13727 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 413 13660 13670 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 412 13616 13626 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 411 13545 13555 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 410 13508 13518 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 409 13451 13461 "m_elab.ml" 417 13918 13959
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 418 13960 13997 "m_elab.ml" 418 13960 13999
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 14001 "m_elab.ml" 418 13960 14002
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 14004 "m_elab.ml" 418 13960 14008
type(
  (Util.hint * Expr.T.backend_args) list list
)
ident(
  def meth "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 13988 "m_elab.ml" 418 13960 14009
type(
  Expr.T.defn_
)
"m_elab.ml" 418 13960 13980 "m_elab.ml" 418 13960 14010
type(
  Expr.T.defn
)
"m_elab.ml" 418 13960 13980 "m_elab.ml" 418 13960 14016
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 14018 "m_elab.ml" 418 13960 14020
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 14022 "m_elab.ml" 418 13960 14025
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 14027 "m_elab.ml" 418 13960 14029
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 418 13960 13968 "m_elab.ml" 418 13960 14030
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 420 14111 14125 "m_elab.ml" 420 14111 14127
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 421 14168 14178 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 420 14111 14133 "m_elab.ml" 420 14111 14135
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 418 13960 14027 "m_elab.ml" 418 13960 14029
)
"m_elab.ml" 420 14111 14136 "m_elab.ml" 420 14111 14137
type(
  Expr.T.export -> Expr.T.export -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 420 14111 14138 "m_elab.ml" 420 14111 14143
type(
  Expr.T.export
)
"m_elab.ml" 420 14111 14133 "m_elab.ml" 420 14111 14143
type(
  bool
)
"m_elab.ml" 420 14111 14149 "m_elab.ml" 420 14111 14153
type(
  Util.hint -> Util.hint
)
ident(
  int_ref salt "m_elab.ml" 78 2262 2266 "m_elab.ml" 78 2262 2270
)
"m_elab.ml" 420 14111 14154 "m_elab.ml" 420 14111 14156
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 418 13960 13997 "m_elab.ml" 418 13960 13999
)
"m_elab.ml" 420 14111 14149 "m_elab.ml" 420 14111 14156
type(
  Util.hint
)
"m_elab.ml" 420 14111 14162 "m_elab.ml" 420 14111 14164
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 418 13960 13997 "m_elab.ml" 418 13960 13999
)
"m_elab.ml" 420 14111 14130 "m_elab.ml" 420 14111 14164
type(
  Util.hint
)
"m_elab.ml" 421 14168 14182 "m_elab.ml" 421 14168 14184
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 422 14205 14215 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 421 14168 14187 "m_elab.ml" 421 14168 14192
type(
  string Property.wrapped -> Util.hint -> Util.hint
)
ident(
  int_ref tweak "m_elab.ml" 330 10775 10779 "m_elab.ml" 330 10775 10784
)
"m_elab.ml" 421 14168 14193 "m_elab.ml" 421 14168 14198
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 421 14168 14199 "m_elab.ml" 421 14168 14201
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 420 14111 14125 "m_elab.ml" 420 14111 14127
)
"m_elab.ml" 421 14168 14187 "m_elab.ml" 421 14168 14201
type(
  Util.hint
)
"m_elab.ml" 422 14205 14219 "m_elab.ml" 422 14205 14220
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 423 14276 14286 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 422 14205 14223 "m_elab.ml" 422 14205 14231
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 422 14205 14233 "m_elab.ml" 422 14205 14242
type(
  int ->
  int ->
  Expr.T.expr list -> Expr.T.instance Property.wrapped -> Expr.Subst.sub
)
ident(
  int_ref resub_for "m_elab.ml" 337 10910 10914 "m_elab.ml" 337 10910 10923
)
"m_elab.ml" 422 14205 14243 "m_elab.ml" 422 14205 14251
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 422 14205 14252 "m_elab.ml" 422 14205 14258
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 422 14205 14259 "m_elab.ml" 422 14205 14264
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 422 14205 14265 "m_elab.ml" 422 14205 14269
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 422 14205 14232 "m_elab.ml" 422 14205 14270
type(
  Expr.Subst.sub
)
"m_elab.ml" 422 14205 14271 "m_elab.ml" 422 14205 14272
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 418 13960 14001 "m_elab.ml" 418 13960 14002
)
"m_elab.ml" 422 14205 14223 "m_elab.ml" 422 14205 14272
type(
  Expr.T.expr
)
"m_elab.ml" 423 14276 14290 "m_elab.ml" 423 14276 14291
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def e "m_elab.ml" 424 14320 14330 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 423 14276 14294 "m_elab.ml" 423 14276 14302
type(
  Expr.T.expr ->
  Expr.T.instance Property.wrapped -> int -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref lambdify "m_elab.ml" 382 12605 12609 "m_elab.ml" 382 12605 12617
)
"m_elab.ml" 423 14276 14303 "m_elab.ml" 423 14276 14304
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 422 14205 14219 "m_elab.ml" 422 14205 14220
)
"m_elab.ml" 423 14276 14305 "m_elab.ml" 423 14276 14309
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 423 14276 14310 "m_elab.ml" 423 14276 14316
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 423 14276 14294 "m_elab.ml" 423 14276 14316
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 424 14320 14334 "m_elab.ml" 424 14320 14336
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 425 14377 14387 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 424 14320 14342 "m_elab.ml" 424 14320 14344
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 418 13960 14027 "m_elab.ml" 418 13960 14029
)
"m_elab.ml" 424 14320 14345 "m_elab.ml" 424 14320 14346
type(
  Expr.T.export -> Expr.T.export -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 424 14320 14347 "m_elab.ml" 424 14320 14352
type(
  Expr.T.export
)
"m_elab.ml" 424 14320 14342 "m_elab.ml" 424 14320 14352
type(
  bool
)
"m_elab.ml" 424 14320 14358 "m_elab.ml" 424 14320 14365
type(
  Expr.T.wheredef
)
"m_elab.ml" 424 14320 14371 "m_elab.ml" 424 14320 14373
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 418 13960 14018 "m_elab.ml" 418 13960 14020
)
"m_elab.ml" 424 14320 14339 "m_elab.ml" 424 14320 14373
type(
  Expr.T.wheredef
)
"m_elab.ml" 425 14377 14391 "m_elab.ml" 425 14377 14393
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 426 14435 14445 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 425 14377 14399 "m_elab.ml" 425 14377 14401
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 418 13960 14027 "m_elab.ml" 418 13960 14029
)
"m_elab.ml" 425 14377 14402 "m_elab.ml" 425 14377 14403
type(
  Expr.T.export -> Expr.T.export -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 425 14377 14404 "m_elab.ml" 425 14377 14409
type(
  Expr.T.export
)
"m_elab.ml" 425 14377 14399 "m_elab.ml" 425 14377 14409
type(
  bool
)
"m_elab.ml" 425 14377 14415 "m_elab.ml" 425 14377 14420
type(
  Expr.T.export
)
"m_elab.ml" 425 14377 14426 "m_elab.ml" 425 14377 14431
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 425 14377 14396 "m_elab.ml" 425 14377 14431
type(
  Expr.T.export
)
"m_elab.ml" 426 14435 14449 "m_elab.ml" 426 14435 14451
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 429 14539 14549 "m_elab.ml" 430 14605 14646
)
"m_elab.ml" 427 14454 14487 "m_elab.ml" 427 14454 14489
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 421 14168 14182 "m_elab.ml" 421 14168 14184
)
"m_elab.ml" 427 14454 14491 "m_elab.ml" 427 14454 14492
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 423 14276 14290 "m_elab.ml" 423 14276 14291
)
"m_elab.ml" 427 14454 14494 "m_elab.ml" 427 14454 14498
type(
  (Util.hint * Expr.T.backend_args) list list
)
ident(
  int_ref meth "m_elab.ml" 418 13960 14004 "m_elab.ml" 418 13960 14008
)
"m_elab.ml" 427 14454 14478 "m_elab.ml" 427 14454 14499
type(
  Expr.T.defn_
)
"m_elab.ml" 427 14454 14500 "m_elab.ml" 427 14454 14502
type(
  Expr.T.defn_ -> Expr.T.defn_ Property.wrapped -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 427 14454 14503 "m_elab.ml" 427 14454 14505
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 418 13960 13980 "m_elab.ml" 418 13960 14016
)
"m_elab.ml" 427 14454 14478 "m_elab.ml" 427 14454 14505
type(
  Expr.T.defn
)
"m_elab.ml" 427 14454 14507 "m_elab.ml" 427 14454 14509
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 424 14320 14334 "m_elab.ml" 424 14320 14336
)
"m_elab.ml" 427 14454 14511 "m_elab.ml" 427 14454 14514
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 418 13960 14022 "m_elab.ml" 418 13960 14025
)
"m_elab.ml" 427 14454 14516 "m_elab.ml" 427 14454 14518
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 425 14377 14391 "m_elab.ml" 425 14377 14393
)
"m_elab.ml" 427 14454 14466 "m_elab.ml" 427 14454 14519
type(
  M_t.modunit_
)
"m_elab.ml" 427 14454 14520 "m_elab.ml" 427 14454 14522
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 427 14454 14523 "m_elab.ml" 427 14454 14525
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 427 14454 14466 "m_elab.ml" 427 14454 14525
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 429 14539 14549 "m_elab.ml" 429 14539 14557
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 429 14539 14559 "m_elab.ml" 429 14539 14561
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 426 14435 14449 "m_elab.ml" 426 14435 14451
)
"m_elab.ml" 429 14539 14565 "m_elab.ml" 429 14539 14569
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 429 14539 14558 "m_elab.ml" 429 14539 14570
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 429 14539 14572 "m_elab.ml" 429 14539 14580
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 429 14539 14581 "m_elab.ml" 429 14539 14582
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 429 14539 14583 "m_elab.ml" 429 14539 14584
type(
  int
)
"m_elab.ml" 429 14539 14571 "m_elab.ml" 429 14539 14585
type(
  int
)
"m_elab.ml" 429 14539 14586 "m_elab.ml" 429 14539 14591
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 429 14539 14592 "m_elab.ml" 429 14539 14598
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 429 14539 14599 "m_elab.ml" 429 14539 14604
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 430 14605 14617 "m_elab.ml" 430 14605 14631
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 430 14605 14632 "m_elab.ml" 430 14605 14636
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 430 14605 14637 "m_elab.ml" 430 14605 14642
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 430 14605 14643 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 429 14539 14549 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 426 14435 14445 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 425 14377 14387 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 424 14320 14330 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 423 14276 14286 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 422 14205 14215 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 421 14168 14178 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 420 14111 14121 "m_elab.ml" 430 14605 14646
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 431 14647 14662 "m_elab.ml" 431 14647 14664
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 432 14672 14682 "m_elab.ml" 445 15329 15370
)
"m_elab.ml" 431 14647 14666 "m_elab.ml" 431 14647 14667
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 432 14672 14682 "m_elab.ml" 445 15329 15370
)
"m_elab.ml" 431 14647 14655 "m_elab.ml" 431 14647 14668
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 432 14672 14686 "m_elab.ml" 432 14672 14688
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 433 14722 14732 "m_elab.ml" 445 15329 15370
)
"m_elab.ml" 432 14672 14691 "m_elab.ml" 432 14672 14701
type(
  (Util.hint -> Util.hint) -> Util.hint option -> Util.hint option
)
ident(
  int_ref Ext.Option.map "ext.mli" 61 2656 2658 "ext.mli" 61 2656 2704
)
"m_elab.ml" 432 14672 14703 "m_elab.ml" 432 14672 14708
type(
  string Property.wrapped -> Util.hint -> Util.hint
)
ident(
  int_ref tweak "m_elab.ml" 330 10775 10779 "m_elab.ml" 330 10775 10784
)
"m_elab.ml" 432 14672 14709 "m_elab.ml" 432 14672 14714
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 432 14672 14702 "m_elab.ml" 432 14672 14715
type(
  Util.hint -> Util.hint
)
"m_elab.ml" 432 14672 14716 "m_elab.ml" 432 14672 14718
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 431 14647 14662 "m_elab.ml" 431 14647 14664
)
"m_elab.ml" 432 14672 14691 "m_elab.ml" 432 14672 14718
type(
  Util.hint option
)
"m_elab.ml" 433 14722 14736 "m_elab.ml" 433 14722 14737
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 434 14793 14803 "m_elab.ml" 445 15329 15370
)
"m_elab.ml" 433 14722 14740 "m_elab.ml" 433 14722 14748
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 433 14722 14750 "m_elab.ml" 433 14722 14759
type(
  int ->
  int ->
  Expr.T.expr list -> Expr.T.instance Property.wrapped -> Expr.Subst.sub
)
ident(
  int_ref resub_for "m_elab.ml" 337 10910 10914 "m_elab.ml" 337 10910 10923
)
"m_elab.ml" 433 14722 14760 "m_elab.ml" 433 14722 14768
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 433 14722 14769 "m_elab.ml" 433 14722 14775
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 433 14722 14776 "m_elab.ml" 433 14722 14781
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 433 14722 14782 "m_elab.ml" 433 14722 14786
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 433 14722 14749 "m_elab.ml" 433 14722 14787
type(
  Expr.Subst.sub
)
"m_elab.ml" 433 14722 14788 "m_elab.ml" 433 14722 14789
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 431 14647 14666 "m_elab.ml" 431 14647 14667
)
"m_elab.ml" 433 14722 14740 "m_elab.ml" 433 14722 14789
type(
  Expr.T.expr
)
"m_elab.ml" 434 14793 14806 "m_elab.ml" 434 14793 14812
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 434 14793 14813 "m_elab.ml" 434 14793 14814
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( > ) "stdlib.mli" 140 5875 5875 "stdlib.mli" 140 5875 5925
)
"m_elab.ml" 434 14793 14815 "m_elab.ml" 434 14793 14816
type(
  int
)
"m_elab.ml" 434 14793 14806 "m_elab.ml" 434 14793 14816
type(
  bool
)
"m_elab.ml" 434 14793 14817 "m_elab.ml" 434 14793 14819
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( && ) "stdlib.mli" 214 8960 8960 "stdlib.mli" 214 8960 9011
)
"m_elab.ml" 434 14793 14820 "m_elab.ml" 434 14793 14821
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 434 14793 14821 "m_elab.ml" 434 14793 14835
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 434 14793 14820 "m_elab.ml" 434 14793 14835
type(
  bool
)
"m_elab.ml" 434 14793 14806 "m_elab.ml" 434 14793 14835
type(
  bool
)
"m_elab.ml" 435 14847 14859 "m_elab.ml" 435 14847 14870
type(
  ?at:Expr.T.instance Property.wrapped ->
  (string -> string -> string -> unit, unit, string, unit) format4 ->
  string -> string -> string -> unit
)
ident(
  int_ref Errors.warn "errors.mli" 14 256 256 "errors.mli" 16 290 332
)
"m_elab.ml" 435 14847 14875 "m_elab.ml" 435 14847 14879
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
type(
  Expr.T.instance Property.wrapped option
)
"m_elab.ml" 436 14880 14894 "m_elab.ml" 436 14880 14909
type(
  (string -> string -> string -> unit, unit, string, unit) format4
)
"m_elab.ml" 437 14910 14924 "m_elab.ml" 437 14910 14964
type(
  string
)
"m_elab.ml" 438 14965 14979 "m_elab.ml" 438 14965 15037
type(
  string
)
"m_elab.ml" 439 15038 15052 "m_elab.ml" 439 15038 15113
type(
  string
)
"m_elab.ml" 435 14847 14859 "m_elab.ml" 439 15038 15113
type(
  unit
)
"m_elab.ml" 440 15115 15127 "m_elab.ml" 440 15115 15141
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 440 15115 15142 "m_elab.ml" 440 15115 15144
type(
  bool ref -> bool -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 440 15115 15145 "m_elab.ml" 440 15115 15150
type(
  bool
)
"m_elab.ml" 440 15115 15127 "m_elab.ml" 440 15115 15150
type(
  unit
)
"m_elab.ml" 434 14793 14841 "m_elab.ml" 441 15152 15165
type(
  unit
)
"m_elab.ml" 434 14793 14803 "m_elab.ml" 441 15152 15165
type(
  unit
)
"m_elab.ml" 442 15167 15181 "m_elab.ml" 442 15167 15182
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def e "m_elab.ml" 443 15211 15221 "m_elab.ml" 445 15329 15370
)
"m_elab.ml" 442 15167 15185 "m_elab.ml" 442 15167 15193
type(
  Expr.T.expr ->
  Expr.T.instance Property.wrapped -> int -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref lambdify "m_elab.ml" 382 12605 12609 "m_elab.ml" 382 12605 12617
)
"m_elab.ml" 442 15167 15194 "m_elab.ml" 442 15167 15195
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 433 14722 14736 "m_elab.ml" 433 14722 14737
)
"m_elab.ml" 442 15167 15196 "m_elab.ml" 442 15167 15200
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 442 15167 15201 "m_elab.ml" 442 15167 15207
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 442 15167 15185 "m_elab.ml" 442 15167 15207
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 443 15211 15225 "m_elab.ml" 443 15211 15227
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 444 15253 15263 "m_elab.ml" 445 15329 15370
)
"m_elab.ml" 443 15211 15237 "m_elab.ml" 443 15211 15239
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 432 14672 14686 "m_elab.ml" 432 14672 14688
)
"m_elab.ml" 443 15211 15241 "m_elab.ml" 443 15211 15242
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 442 15167 15181 "m_elab.ml" 442 15167 15182
)
"m_elab.ml" 443 15211 15230 "m_elab.ml" 443 15211 15243
type(
  M_t.modunit_
)
"m_elab.ml" 443 15211 15244 "m_elab.ml" 443 15211 15246
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 443 15211 15247 "m_elab.ml" 443 15211 15249
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 443 15211 15230 "m_elab.ml" 443 15211 15249
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 444 15253 15263 "m_elab.ml" 444 15253 15271
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 444 15253 15273 "m_elab.ml" 444 15253 15275
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 443 15211 15225 "m_elab.ml" 443 15211 15227
)
"m_elab.ml" 444 15253 15279 "m_elab.ml" 444 15253 15283
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 444 15253 15272 "m_elab.ml" 444 15253 15284
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 444 15253 15286 "m_elab.ml" 444 15253 15294
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 444 15253 15295 "m_elab.ml" 444 15253 15296
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 444 15253 15297 "m_elab.ml" 444 15253 15305
type(
  M_t.modunit -> int
)
ident(
  int_ref M_t.hyp_size "m_t.mli" 71 1738 1738 "m_t.mli" 71 1738 1766
)
"m_elab.ml" 444 15253 15306 "m_elab.ml" 444 15253 15308
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 443 15211 15225 "m_elab.ml" 443 15211 15227
)
"m_elab.ml" 444 15253 15297 "m_elab.ml" 444 15253 15308
type(
  int
)
"m_elab.ml" 444 15253 15285 "m_elab.ml" 444 15253 15309
type(
  int
)
"m_elab.ml" 444 15253 15310 "m_elab.ml" 444 15253 15315
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 444 15253 15316 "m_elab.ml" 444 15253 15322
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 444 15253 15323 "m_elab.ml" 444 15253 15328
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 445 15329 15341 "m_elab.ml" 445 15329 15355
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 445 15329 15356 "m_elab.ml" 445 15329 15360
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 445 15329 15361 "m_elab.ml" 445 15329 15366
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 445 15329 15367 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 444 15253 15263 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 443 15211 15221 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 442 15167 15177 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 434 14793 14803 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 433 14722 14732 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 432 14672 14682 "m_elab.ml" 445 15329 15370
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 446 15371 15388 "m_elab.ml" 446 15371 15390
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 446 15371 15392 "m_elab.ml" 446 15371 15394
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 446 15371 15396 "m_elab.ml" 446 15371 15400
type(
  int
)
ident(
  def naxs "m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 446 15371 15402 "m_elab.ml" 446 15371 15405
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 446 15371 15407 "m_elab.ml" 446 15371 15415
type(
  Proof.T.proof
)
ident(
  def prf_orig "m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 446 15371 15417 "m_elab.ml" 446 15371 15421
type(
  M_t.summary
)
ident(
  def summ "m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 446 15371 15379 "m_elab.ml" 446 15371 15422
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 447 15426 15440 "m_elab.ml" 447 15426 15442
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 448 15476 15486 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 447 15426 15445 "m_elab.ml" 447 15426 15455
type(
  (Util.hint -> Util.hint) -> Util.hint option -> Util.hint option
)
ident(
  int_ref Ext.Option.map "ext.mli" 61 2656 2658 "ext.mli" 61 2656 2704
)
"m_elab.ml" 447 15426 15457 "m_elab.ml" 447 15426 15462
type(
  string Property.wrapped -> Util.hint -> Util.hint
)
ident(
  int_ref tweak "m_elab.ml" 330 10775 10779 "m_elab.ml" 330 10775 10784
)
"m_elab.ml" 447 15426 15463 "m_elab.ml" 447 15426 15468
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 447 15426 15456 "m_elab.ml" 447 15426 15469
type(
  Util.hint -> Util.hint
)
"m_elab.ml" 447 15426 15470 "m_elab.ml" 447 15426 15472
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 446 15371 15388 "m_elab.ml" 446 15371 15390
)
"m_elab.ml" 447 15426 15445 "m_elab.ml" 447 15426 15472
type(
  Util.hint option
)
"m_elab.ml" 448 15476 15490 "m_elab.ml" 448 15476 15491
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def e "m_elab.ml" 449 15522 15532 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 448 15476 15494 "m_elab.ml" 448 15476 15509
type(
  Expr.T.sequent -> Expr.T.expr_
)
ident(
  int_ref Expr.T.exprify_sequent "expr.mli" 344 8876 8878 "expr.mli" 344 8876 8916
)
"m_elab.ml" 448 15476 15510 "m_elab.ml" 448 15476 15512
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 446 15371 15392 "m_elab.ml" 446 15371 15394
)
"m_elab.ml" 448 15476 15494 "m_elab.ml" 448 15476 15512
type(
  Expr.T.expr_
)
"m_elab.ml" 448 15476 15513 "m_elab.ml" 448 15476 15515
type(
  Expr.T.expr_ -> M_t.modunit -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 448 15476 15516 "m_elab.ml" 448 15476 15518
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 448 15476 15494 "m_elab.ml" 448 15476 15518
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 449 15522 15536 "m_elab.ml" 449 15522 15537
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 450 15593 15603 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 449 15522 15540 "m_elab.ml" 449 15522 15548
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 449 15522 15550 "m_elab.ml" 449 15522 15559
type(
  int ->
  int ->
  Expr.T.expr list -> Expr.T.instance Property.wrapped -> Expr.Subst.sub
)
ident(
  int_ref resub_for "m_elab.ml" 337 10910 10914 "m_elab.ml" 337 10910 10923
)
"m_elab.ml" 449 15522 15560 "m_elab.ml" 449 15522 15568
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 449 15522 15569 "m_elab.ml" 449 15522 15575
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 449 15522 15576 "m_elab.ml" 449 15522 15581
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 449 15522 15582 "m_elab.ml" 449 15522 15586
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 449 15522 15549 "m_elab.ml" 449 15522 15587
type(
  Expr.Subst.sub
)
"m_elab.ml" 449 15522 15588 "m_elab.ml" 449 15522 15589
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 448 15476 15490 "m_elab.ml" 448 15476 15491
)
"m_elab.ml" 449 15522 15540 "m_elab.ml" 449 15522 15589
type(
  Expr.T.expr
)
"m_elab.ml" 450 15593 15606 "m_elab.ml" 450 15593 15612
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 450 15593 15613 "m_elab.ml" 450 15593 15614
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( > ) "stdlib.mli" 140 5875 5875 "stdlib.mli" 140 5875 5925
)
"m_elab.ml" 450 15593 15615 "m_elab.ml" 450 15593 15616
type(
  int
)
"m_elab.ml" 450 15593 15606 "m_elab.ml" 450 15593 15616
type(
  bool
)
"m_elab.ml" 450 15593 15617 "m_elab.ml" 450 15593 15619
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( && ) "stdlib.mli" 214 8960 8960 "stdlib.mli" 214 8960 9011
)
"m_elab.ml" 450 15593 15620 "m_elab.ml" 450 15593 15621
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 450 15593 15621 "m_elab.ml" 450 15593 15635
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 450 15593 15620 "m_elab.ml" 450 15593 15635
type(
  bool
)
"m_elab.ml" 450 15593 15606 "m_elab.ml" 450 15593 15635
type(
  bool
)
"m_elab.ml" 451 15647 15659 "m_elab.ml" 451 15647 15671
type(
  ?debug:string ->
  ?at:Expr.T.instance Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit ->
  (string -> string -> string -> unit, Format.formatter, unit) format ->
  string -> string -> string -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 451 15647 15676 "m_elab.ml" 451 15647 15680
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
type(
  Expr.T.instance Property.wrapped option
)
"m_elab.ml" 451 15647 15689 "m_elab.ml" 451 15647 15700
type(
  string
)
type(
  string option
)
"m_elab.ml" 452 15701 15715 "m_elab.ml" 452 15701 15731
type(
  (string -> string -> string -> unit, Format.formatter, unit) format
)
"m_elab.ml" 453 15732 15746 "m_elab.ml" 453 15732 15788
type(
  string
)
"m_elab.ml" 454 15789 15803 "m_elab.ml" 454 15789 15863
type(
  string
)
"m_elab.ml" 455 15864 15878 "m_elab.ml" 455 15864 15939
type(
  string
)
"m_elab.ml" 451 15647 15659 "m_elab.ml" 455 15864 15939
type(
  unit
)
"m_elab.ml" 456 15941 15953 "m_elab.ml" 456 15941 15967
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 456 15941 15968 "m_elab.ml" 456 15941 15970
type(
  bool ref -> bool -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 456 15941 15971 "m_elab.ml" 456 15941 15976
type(
  bool
)
"m_elab.ml" 456 15941 15953 "m_elab.ml" 456 15941 15976
type(
  unit
)
"m_elab.ml" 450 15593 15641 "m_elab.ml" 457 15978 15991
type(
  unit
)
"m_elab.ml" 450 15593 15603 "m_elab.ml" 457 15978 15991
type(
  unit
)
"m_elab.ml" 458 15993 16007 "m_elab.ml" 458 15993 16008
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def e "m_elab.ml" 459 16037 16047 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 458 15993 16011 "m_elab.ml" 458 15993 16019
type(
  Expr.T.expr ->
  Expr.T.instance Property.wrapped -> int -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref lambdify "m_elab.ml" 382 12605 12609 "m_elab.ml" 382 12605 12617
)
"m_elab.ml" 458 15993 16020 "m_elab.ml" 458 15993 16021
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 449 15522 15536 "m_elab.ml" 449 15522 15537
)
"m_elab.ml" 458 15993 16022 "m_elab.ml" 458 15993 16026
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 458 15993 16027 "m_elab.ml" 458 15993 16033
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 458 15993 16011 "m_elab.ml" 458 15993 16033
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 459 16037 16051 "m_elab.ml" 459 16037 16053
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 464 16186 16196 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 460 16056 16074 "m_elab.ml" 460 16056 16075
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  int_ref e "m_elab.ml" 458 15993 16007 "m_elab.ml" 458 15993 16008
)
"m_elab.ml" 460 16056 16074 "m_elab.ml" 460 16056 16080
type(
  Expr.T.expr_
)
"m_elab.ml" 461 16086 16108 "m_elab.ml" 461 16086 16110
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 461 16086 16114 "m_elab.ml" 461 16086 16116
)
"m_elab.ml" 461 16086 16100 "m_elab.ml" 461 16086 16110
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 461 16086 16114 "m_elab.ml" 461 16086 16116
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 461 16086 16108 "m_elab.ml" 461 16086 16110
)
"m_elab.ml" 462 16117 16131 "m_elab.ml" 462 16117 16132
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 462 16117 16147 "m_elab.ml" 462 16117 16158
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"m_elab.ml" 462 16117 16170 "m_elab.ml" 462 16117 16171
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 458 15993 16007 "m_elab.ml" 458 15993 16008
)
"m_elab.ml" 462 16117 16136 "m_elab.ml" 462 16117 16172
type(
  Expr.T.sequent
)
"m_elab.ml" 460 16056 16068 "m_elab.ml" 462 16117 16172
type(
  Expr.T.sequent
)
"m_elab.ml" 464 16186 16200 "m_elab.ml" 464 16186 16203
type(
  Proof.T.proof_ Property.wrapped
)
ident(
  def prf "m_elab.ml" 465 16255 16265 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 464 16186 16226 "m_elab.ml" 464 16186 16240
type(
  M_t.modunit -> Loc.locus
)
ident(
  int_ref Util.get_locus "util.mli" 17 279 279 "util.mli" 17 279 320
)
"m_elab.ml" 464 16186 16241 "m_elab.ml" 464 16186 16243
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 464 16186 16225 "m_elab.ml" 464 16186 16244
type(
  Loc.locus
)
"m_elab.ml" 464 16186 16214 "m_elab.ml" 464 16186 16245
type(
  Proof.T.omission
)
"m_elab.ml" 464 16186 16206 "m_elab.ml" 464 16186 16245
type(
  Proof.T.proof_
)
"m_elab.ml" 464 16186 16246 "m_elab.ml" 464 16186 16248
type(
  Proof.T.proof_ -> M_t.modunit -> Proof.T.proof_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 464 16186 16249 "m_elab.ml" 464 16186 16251
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 464 16186 16206 "m_elab.ml" 464 16186 16251
type(
  Proof.T.proof_ Property.wrapped
)
"m_elab.ml" 465 16255 16269 "m_elab.ml" 465 16255 16271
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 466 16327 16337 "m_elab.ml" 467 16393 16434
)
"m_elab.ml" 465 16255 16283 "m_elab.ml" 465 16255 16285
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 447 15426 15440 "m_elab.ml" 447 15426 15442
)
"m_elab.ml" 465 16255 16287 "m_elab.ml" 465 16255 16289
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 459 16037 16051 "m_elab.ml" 459 16037 16053
)
"m_elab.ml" 465 16255 16291 "m_elab.ml" 465 16255 16295
type(
  int
)
ident(
  int_ref naxs "m_elab.ml" 446 15371 15396 "m_elab.ml" 446 15371 15400
)
"m_elab.ml" 465 16255 16297 "m_elab.ml" 465 16255 16300
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 464 16186 16200 "m_elab.ml" 464 16186 16203
)
"m_elab.ml" 465 16255 16302 "m_elab.ml" 465 16255 16310
type(
  Proof.T.proof
)
ident(
  int_ref prf_orig "m_elab.ml" 446 15371 15407 "m_elab.ml" 446 15371 15415
)
"m_elab.ml" 465 16255 16312 "m_elab.ml" 465 16255 16316
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 446 15371 15417 "m_elab.ml" 446 15371 15421
)
"m_elab.ml" 465 16255 16274 "m_elab.ml" 465 16255 16317
type(
  M_t.modunit_
)
"m_elab.ml" 465 16255 16318 "m_elab.ml" 465 16255 16320
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 465 16255 16321 "m_elab.ml" 465 16255 16323
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 406 13334 13338 "m_elab.ml" 406 13334 13340
)
"m_elab.ml" 465 16255 16274 "m_elab.ml" 465 16255 16323
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 466 16327 16337 "m_elab.ml" 466 16327 16345
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 466 16327 16347 "m_elab.ml" 466 16327 16349
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 465 16255 16269 "m_elab.ml" 465 16255 16271
)
"m_elab.ml" 466 16327 16353 "m_elab.ml" 466 16327 16357
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 466 16327 16346 "m_elab.ml" 466 16327 16358
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 466 16327 16360 "m_elab.ml" 466 16327 16368
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 466 16327 16369 "m_elab.ml" 466 16327 16370
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 466 16327 16371 "m_elab.ml" 466 16327 16372
type(
  int
)
"m_elab.ml" 466 16327 16359 "m_elab.ml" 466 16327 16373
type(
  int
)
"m_elab.ml" 466 16327 16374 "m_elab.ml" 466 16327 16379
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 466 16327 16380 "m_elab.ml" 466 16327 16386
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 466 16327 16387 "m_elab.ml" 466 16327 16392
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 467 16393 16405 "m_elab.ml" 467 16393 16419
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 467 16393 16420 "m_elab.ml" 467 16393 16424
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 467 16393 16425 "m_elab.ml" 467 16393 16430
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 467 16393 16431 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 466 16327 16337 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 465 16255 16265 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 464 16186 16196 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 459 16037 16047 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 458 15993 16003 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 450 15593 15603 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 449 15522 15532 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 448 15476 15486 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 447 15426 15436 "m_elab.ml" 467 16393 16434
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 468 16435 16451 "m_elab.ml" 468 16435 16456
type(
  [ `Hide | `Use of bool ]
)
"m_elab.ml" 468 16435 16458 "m_elab.ml" 468 16435 16459
type(
  Proof.T.usable
)
"m_elab.ml" 468 16435 16443 "m_elab.ml" 468 16435 16460
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 469 16464 16474 "m_elab.ml" 469 16464 16482
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 469 16464 16483 "m_elab.ml" 469 16464 16487
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 469 16464 16488 "m_elab.ml" 469 16464 16496
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 469 16464 16497 "m_elab.ml" 469 16464 16502
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 469 16464 16503 "m_elab.ml" 469 16464 16509
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 469 16464 16510 "m_elab.ml" 469 16464 16515
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 469 16464 16516 "m_elab.ml" 469 16464 16530
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 469 16464 16531 "m_elab.ml" 469 16464 16535
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 469 16464 16536 "m_elab.ml" 469 16464 16541
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 470 16542 16554 "m_elab.ml" 470 16542 16557
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 469 16464 16474 "m_elab.ml" 470 16542 16557
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 471 16558 16579 "m_elab.ml" 471 16558 16580
type(
  bool
)
"m_elab.ml" 471 16558 16574 "m_elab.ml" 471 16558 16580
type(
  [ `Hide | `Use of bool ]
)
"m_elab.ml" 471 16558 16582 "m_elab.ml" 471 16558 16584
type(
  Proof.T.usable
)
ident(
  def us "m_elab.ml" 472 16589 16599 "m_elab.ml" 476 16785 16800
)
"m_elab.ml" 471 16558 16566 "m_elab.ml" 471 16558 16585
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 472 16589 16604 "m_elab.ml" 472 16589 16605
type(
  Expr.Subst.sub
)
"m_elab.ml" 472 16589 16607 "m_elab.ml" 472 16589 16610
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 475 16707 16717 "m_elab.ml" 476 16785 16800
)
"m_elab.ml" 472 16589 16603 "m_elab.ml" 472 16589 16611
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 473 16614 16626 "m_elab.ml" 473 16614 16646
type(
  Expr.Subst.sub -> M_t.modunit list -> Expr.Subst.sub * M_t.modunit list
)
ident(
  int_ref M_subst.app_modunits "m_subst.mli" 7 98 98 "m_subst.mli" 7 98 157
)
"m_elab.ml" 473 16614 16648 "m_elab.ml" 473 16614 16653
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 473 16614 16655 "m_elab.ml" 473 16614 16656
type(
  int -> int
)
ident(
  int_ref Stdlib.( ~- ) "stdlib.mli" 329 13119 13119 "stdlib.mli" 329 13119 13159
)
"m_elab.ml" 473 16614 16658 "m_elab.ml" 473 16614 16669
type(
  Expr.T.expr list -> int
)
ident(
  int_ref Ext.List.length "ext.mli" 7 102 104 "ext.mli" 7 102 131
)
"m_elab.ml" 473 16614 16670 "m_elab.ml" 473 16614 16672
type(
  Proof.T.usable
)
ident(
  int_ref us "m_elab.ml" 471 16558 16582 "m_elab.ml" 471 16558 16584
)
"m_elab.ml" 473 16614 16670 "m_elab.ml" 473 16614 16686
type(
  Expr.T.expr list
)
"m_elab.ml" 473 16614 16657 "m_elab.ml" 473 16614 16687
type(
  int
)
"m_elab.ml" 473 16614 16654 "m_elab.ml" 473 16614 16688
type(
  int
)
"m_elab.ml" 473 16614 16647 "m_elab.ml" 473 16614 16689
type(
  Expr.Subst.sub
)
"m_elab.ml" 473 16614 16690 "m_elab.ml" 473 16614 16693
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 473 16614 16626 "m_elab.ml" 473 16614 16693
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 475 16707 16717 "m_elab.ml" 475 16707 16725
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 475 16707 16726 "m_elab.ml" 475 16707 16730
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 475 16707 16731 "m_elab.ml" 475 16707 16739
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 475 16707 16740 "m_elab.ml" 475 16707 16745
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 475 16707 16746 "m_elab.ml" 475 16707 16752
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 475 16707 16753 "m_elab.ml" 475 16707 16758
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 475 16707 16759 "m_elab.ml" 475 16707 16773
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 475 16707 16774 "m_elab.ml" 475 16707 16778
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 475 16707 16779 "m_elab.ml" 475 16707 16784
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 476 16785 16797 "m_elab.ml" 476 16785 16800
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 472 16589 16607 "m_elab.ml" 472 16589 16610
)
"m_elab.ml" 475 16707 16717 "m_elab.ml" 476 16785 16800
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 472 16589 16599 "m_elab.ml" 476 16785 16800
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 477 16801 16816 "m_elab.ml" 477 16801 16817
type(
  M_t.mule
)
"m_elab.ml" 477 16801 16809 "m_elab.ml" 477 16801 16817
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 478 16821 16831 "m_elab.ml" 478 16821 16839
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 478 16821 16840 "m_elab.ml" 478 16821 16844
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  int_ref body "m_elab.ml" 402 13159 13176 "m_elab.ml" 402 13159 13180
)
"m_elab.ml" 478 16821 16845 "m_elab.ml" 478 16821 16853
type(
  int
)
ident(
  int_ref body_len "m_elab.ml" 402 13159 13181 "m_elab.ml" 402 13159 13189
)
"m_elab.ml" 478 16821 16854 "m_elab.ml" 478 16821 16859
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 402 13159 13190 "m_elab.ml" 402 13159 13195
)
"m_elab.ml" 478 16821 16860 "m_elab.ml" 478 16821 16866
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 402 13159 13196 "m_elab.ml" 402 13159 13202
)
"m_elab.ml" 478 16821 16867 "m_elab.ml" 478 16821 16872
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 402 13159 13203 "m_elab.ml" 402 13159 13208
)
"m_elab.ml" 478 16821 16873 "m_elab.ml" 478 16821 16887
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 402 13159 13209 "m_elab.ml" 402 13159 13223
)
"m_elab.ml" 478 16821 16888 "m_elab.ml" 478 16821 16892
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
"m_elab.ml" 478 16821 16893 "m_elab.ml" 478 16821 16898
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 402 13159 13229 "m_elab.ml" 402 13159 13234
)
"m_elab.ml" 479 16899 16911 "m_elab.ml" 479 16899 16914
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 406 13334 13344 "m_elab.ml" 406 13334 13347
)
"m_elab.ml" 478 16821 16831 "m_elab.ml" 479 16899 16914
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 480 16915 16933 "m_elab.ml" 480 16915 16934
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 480 16915 16923 "m_elab.ml" 480 16915 16934
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 481 16935 16954 "m_elab.ml" 481 16935 16955
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 481 16935 16943 "m_elab.ml" 481 16935 16955
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 480 16915 16923 "m_elab.ml" 481 16935 16955
type(
  M_t.modunit_
)
"m_elab.ml" 482 16956 16974 "m_elab.ml" 482 16956 16975
type(
  Util.hints
)
"m_elab.ml" 482 16956 16964 "m_elab.ml" 482 16956 16975
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 480 16915 16923 "m_elab.ml" 482 16956 16975
type(
  M_t.modunit_
)
"m_elab.ml" 483 16976 16995 "m_elab.ml" 483 16976 16996
type(
  Expr.T.export
)
type(
  Expr.T.visibility
)
type(
  Expr.T.wheredef
)
type(
  Expr.T.defn
)
"m_elab.ml" 483 16976 16984 "m_elab.ml" 483 16976 16996
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 480 16915 16923 "m_elab.ml" 483 16976 16996
type(
  M_t.modunit_
)
"m_elab.ml" 484 16997 17014 "m_elab.ml" 484 16997 17015
type(
  Expr.T.export
)
type(
  Expr.T.instance
)
"m_elab.ml" 484 16997 17005 "m_elab.ml" 484 16997 17015
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 480 16915 16923 "m_elab.ml" 484 16997 17015
type(
  M_t.modunit_
)
"m_elab.ml" 487 17152 17162 "m_elab.ml" 487 17152 17172
type(
  ?at:Expr.T.instance Property.wrapped ->
  string -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref Errors.bug "errors.mli" 41 941 941 "errors.mli" 41 941 982
)
"m_elab.ml" 487 17152 17177 "m_elab.ml" 487 17152 17181
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 402 13159 13224 "m_elab.ml" 402 13159 13228
)
type(
  Expr.T.instance Property.wrapped option
)
"m_elab.ml" 487 17152 17182 "m_elab.ml" 487 17152 17204
type(
  string
)
"m_elab.ml" 487 17152 17162 "m_elab.ml" 487 17152 17204
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 407 13351 13357 "m_elab.ml" 488 17205 17212
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 403 13237 13241 "m_elab.ml" 488 17205 17212
type(
  M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 495 17387 17391 "m_elab.ml" 495 17387 17402
type(
  < expr : 'a list * Expr.T.ctx -> Expr.T.expr -> Expr.T.expr; .. > ->
  M_t.modctx ->
  Expr.T.ctx ->
  Expr.T.instance Property.wrapped ->
  local:Expr.T.export -> iname:string Property.wrapped -> M_t.modunit list
)
ident(
  def instantiate "m_elab.ml" 545 19233 19233 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 496 17403 17411 "m_elab.ml" 496 17403 17415
type(
  < expr : 'a list * Expr.T.ctx -> Expr.T.expr -> Expr.T.expr; .. > as 'b
)
ident(
  def anon "m_elab.ml" 497 17416 17424 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 497 17416 17425 "m_elab.ml" 497 17416 17428
type(
  M_t.modctx
)
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 498 17442 17450 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 498 17442 17450 "m_elab.ml" 498 17442 17452
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 499 17453 17461 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 499 17453 17462 "m_elab.ml" 499 17453 17470
type(
  Expr.T.instance Property.wrapped
)
type(
  Expr.T.instance Property.wrapped
)
ident(
  def instance "m_elab.ml" 500 17497 17505 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 500 17497 17506 "m_elab.ml" 500 17497 17511
type(
  Expr.T.export
)
ident(
  def local "m_elab.ml" 501 17512 17520 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 501 17512 17521 "m_elab.ml" 501 17512 17526
type(
  string Property.wrapped
)
ident(
  def iname "m_elab.ml" 502 17529 17533 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 502 17529 17537 "m_elab.ml" 502 17529 17547
type(
  M_t.mule
)
ident(
  def tla_module "m_elab.ml" 503 17591 17599 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 502 17529 17550 "m_elab.ml" 502 17529 17574
type(
  Expr.T.instance Property.wrapped -> M_t.modctx -> M_t.mule
)
ident(
  int_ref find_instantiated_module "m_elab.ml" 120 3608 3612 "m_elab.ml" 120 3608 3636
)
"m_elab.ml" 502 17529 17575 "m_elab.ml" 502 17529 17583
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 499 17453 17462 "m_elab.ml" 499 17453 17470
)
"m_elab.ml" 502 17529 17584 "m_elab.ml" 502 17529 17587
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 497 17416 17425 "m_elab.ml" 497 17416 17428
)
"m_elab.ml" 502 17529 17550 "m_elab.ml" 502 17529 17587
type(
  M_t.mule
)
"m_elab.ml" 503 17591 17603 "m_elab.ml" 503 17591 17614
type(
  string
)
ident(
  def module_name "m_elab.ml" 505 17682 17690 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 503 17591 17617 "m_elab.ml" 503 17591 17625
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 499 17453 17462 "m_elab.ml" 499 17453 17470
)
"m_elab.ml" 503 17591 17617 "m_elab.ml" 503 17591 17630
type(
  Expr.T.instance
)
"m_elab.ml" 503 17591 17617 "m_elab.ml" 503 17591 17639
type(
  string
)
"m_elab.ml" 505 17682 17694 "m_elab.ml" 505 17682 17698
type(
  Expr.T.instance Property.wrapped
)
ident(
  def inst "m_elab.ml" 507 17748 17752 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 505 17682 17701 "m_elab.ml" 505 17682 17709
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 499 17453 17462 "m_elab.ml" 499 17453 17470
)
"m_elab.ml" 507 17748 17756 "m_elab.ml" 507 17748 17773
type(
  StringSet.t
)
ident(
  def module_parameters "m_elab.ml" 509 17861 17865 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 507 17748 17776 "m_elab.ml" 507 17748 17793
type(
  M_t.mule -> StringSet.t
)
ident(
  int_ref module_parameters "m_elab.ml" 97 2677 2681 "m_elab.ml" 97 2677 2698
)
"m_elab.ml" 507 17748 17794 "m_elab.ml" 507 17748 17804
type(
  M_t.mule
)
ident(
  int_ref tla_module "m_elab.ml" 502 17529 17537 "m_elab.ml" 502 17529 17547
)
"m_elab.ml" 507 17748 17776 "m_elab.ml" 507 17748 17804
type(
  StringSet.t
)
"m_elab.ml" 509 17861 17869 "m_elab.ml" 509 17861 17885
type(
  Expr.T.expr HintMap.t
)
ident(
  def substitution_map "m_elab.ml" 511 17975 17979 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 509 17861 17888 "m_elab.ml" 509 17861 17916
type(
  Expr.T.instance Property.wrapped -> Expr.T.expr HintMap.t
)
ident(
  int_ref instance_substitution_to_map "m_elab.ml" 136 4107 4111 "m_elab.ml" 136 4107 4139
)
"m_elab.ml" 509 17861 17917 "m_elab.ml" 509 17861 17925
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 499 17453 17462 "m_elab.ml" 499 17453 17470
)
"m_elab.ml" 509 17861 17888 "m_elab.ml" 509 17861 17925
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 511 17975 17979 "m_elab.ml" 511 17975 18027
type(
  Expr.T.expr HintMap.t -> StringSet.t -> string -> unit
)
ident(
  int_ref assert_instance_substitutes_declared_identifiers "m_elab.ml" 147 4528 4532 "m_elab.ml" 147 4528 4580
)
"m_elab.ml" 512 18028 18036 "m_elab.ml" 512 18028 18052
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref substitution_map "m_elab.ml" 509 17861 17869 "m_elab.ml" 509 17861 17885
)
"m_elab.ml" 513 18053 18061 "m_elab.ml" 513 18053 18078
type(
  StringSet.t
)
ident(
  int_ref module_parameters "m_elab.ml" 507 17748 17756 "m_elab.ml" 507 17748 17773
)
"m_elab.ml" 514 18079 18087 "m_elab.ml" 514 18079 18098
type(
  string
)
ident(
  int_ref module_name "m_elab.ml" 503 17591 17603 "m_elab.ml" 503 17591 17614
)
"m_elab.ml" 511 17975 17979 "m_elab.ml" 514 18079 18098
type(
  unit
)
"m_elab.ml" 515 18100 18108 "m_elab.ml" 515 18100 18110
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 516 18154 18158 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 515 18100 18113 "m_elab.ml" 515 18100 18127
type(
  Expr.T.ctx -> Util.hints -> Expr.T.ctx
)
ident(
  int_ref extend_context "m_elab.ml" 167 5267 5271 "m_elab.ml" 167 5267 5285
)
"m_elab.ml" 515 18100 18128 "m_elab.ml" 515 18100 18130
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 498 17442 17450 "m_elab.ml" 498 17442 17452
)
"m_elab.ml" 515 18100 18131 "m_elab.ml" 515 18100 18135
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 505 17682 17694 "m_elab.ml" 505 17682 17698
)
"m_elab.ml" 515 18100 18131 "m_elab.ml" 515 18100 18140
type(
  Expr.T.instance
)
"m_elab.ml" 515 18100 18131 "m_elab.ml" 515 18100 18150
type(
  Util.hints
)
"m_elab.ml" 515 18100 18113 "m_elab.ml" 515 18100 18150
type(
  Expr.T.ctx
)
"m_elab.ml" 516 18154 18162 "m_elab.ml" 516 18154 18167
type(
  Expr.T.expr HintMap.t
)
ident(
  def subst "m_elab.ml" 519 18291 18295 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 516 18154 18170 "m_elab.ml" 516 18154 18200
type(
  Expr.T.instance Property.wrapped ->
  Expr.T.expr HintMap.t -> StringSet.t -> Expr.T.ctx -> Expr.T.expr HintMap.t
)
ident(
  int_ref complete_with_statement_params "m_elab.ml" 185 5823 5827 "m_elab.ml" 185 5823 5857
)
"m_elab.ml" 517 18201 18221 "m_elab.ml" 517 18201 18229
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref instance "m_elab.ml" 499 17453 17462 "m_elab.ml" 499 17453 17470
)
"m_elab.ml" 517 18201 18230 "m_elab.ml" 517 18201 18246
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref substitution_map "m_elab.ml" 509 17861 17869 "m_elab.ml" 509 17861 17885
)
"m_elab.ml" 518 18247 18267 "m_elab.ml" 518 18247 18284
type(
  StringSet.t
)
ident(
  int_ref module_parameters "m_elab.ml" 507 17748 17756 "m_elab.ml" 507 17748 17773
)
"m_elab.ml" 518 18247 18285 "m_elab.ml" 518 18247 18287
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 515 18100 18108 "m_elab.ml" 515 18100 18110
)
"m_elab.ml" 516 18154 18170 "m_elab.ml" 518 18247 18287
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 519 18291 18299 "m_elab.ml" 519 18291 18304
type(
  Expr.T.expr HintMap.t
)
ident(
  def subst "m_elab.ml" 521 18381 18385 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 519 18291 18307 "m_elab.ml" 519 18291 18329
type(
  'b -> Expr.T.ctx -> Expr.T.expr HintMap.t -> Expr.T.expr HintMap.t
)
ident(
  int_ref anonymize_substitution "m_elab.ml" 208 6608 6612 "m_elab.ml" 208 6608 6634
)
"m_elab.ml" 519 18291 18330 "m_elab.ml" 519 18291 18334
type(
  'b
)
ident(
  int_ref anon "m_elab.ml" 496 17403 17411 "m_elab.ml" 496 17403 17415
)
"m_elab.ml" 519 18291 18335 "m_elab.ml" 519 18291 18337
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 515 18100 18108 "m_elab.ml" 515 18100 18110
)
"m_elab.ml" 519 18291 18338 "m_elab.ml" 519 18291 18343
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 516 18154 18162 "m_elab.ml" 516 18154 18167
)
"m_elab.ml" 519 18291 18307 "m_elab.ml" 519 18291 18343
type(
  Expr.T.expr HintMap.t
)
"m_elab.ml" 521 18381 18389 "m_elab.ml" 521 18381 18397
type(
  int
)
ident(
  def cx_shift "m_elab.ml" 522 18444 18448 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 521 18381 18400 "m_elab.ml" 521 18381 18410
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 521 18381 18411 "m_elab.ml" 521 18381 18413
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 515 18100 18108 "m_elab.ml" 515 18100 18110
)
"m_elab.ml" 521 18381 18400 "m_elab.ml" 521 18381 18413
type(
  int
)
"m_elab.ml" 521 18381 18414 "m_elab.ml" 521 18381 18415
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 521 18381 18416 "m_elab.ml" 521 18381 18426
type(
  M_t.mule
)
ident(
  int_ref tla_module "m_elab.ml" 502 17529 17537 "m_elab.ml" 502 17529 17547
)
"m_elab.ml" 521 18381 18416 "m_elab.ml" 521 18381 18431
type(
  M_t.mule_
)
"m_elab.ml" 521 18381 18416 "m_elab.ml" 521 18381 18440
type(
  int
)
"m_elab.ml" 521 18381 18400 "m_elab.ml" 521 18381 18440
type(
  int
)
"m_elab.ml" 522 18444 18456 "m_elab.ml" 522 18444 18464
type(
  int
)
ident(
  int_ref cx_shift "m_elab.ml" 521 18381 18389 "m_elab.ml" 521 18381 18397
)
"m_elab.ml" 522 18444 18465 "m_elab.ml" 522 18444 18467
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( >= ) "stdlib.mli" 150 6190 6190 "stdlib.mli" 150 6190 6242
)
"m_elab.ml" 522 18444 18468 "m_elab.ml" 522 18444 18469
type(
  int
)
"m_elab.ml" 522 18444 18455 "m_elab.ml" 522 18444 18470
type(
  bool
)
"m_elab.ml" 522 18444 18448 "m_elab.ml" 522 18444 18470
type(
  unit
)
"m_elab.ml" 523 18472 18480 "m_elab.ml" 523 18472 18484
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 526 18513 18517 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 523 18472 18487 "m_elab.ml" 523 18472 18497
type(
  M_t.mule
)
ident(
  int_ref tla_module "m_elab.ml" 502 17529 17537 "m_elab.ml" 502 17529 17547
)
"m_elab.ml" 523 18472 18487 "m_elab.ml" 523 18472 18502
type(
  M_t.mule_
)
"m_elab.ml" 523 18472 18487 "m_elab.ml" 523 18472 18507
type(
  M_t.modunit list
)
"m_elab.ml" 526 18513 18521 "m_elab.ml" 526 18513 18525
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 527 18555 18559 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 526 18513 18528 "m_elab.ml" 526 18513 18536
type(
  (M_t.modunit -> M_t.modunit) -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"m_elab.ml" 526 18513 18537 "m_elab.ml" 526 18513 18546
type(
  M_t.modunit -> M_t.modunit
)
ident(
  int_ref remove_pf "m_elab.ml" 212 6696 6700 "m_elab.ml" 212 6696 6709
)
"m_elab.ml" 526 18513 18547 "m_elab.ml" 526 18513 18551
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 523 18472 18480 "m_elab.ml" 523 18472 18484
)
"m_elab.ml" 526 18513 18528 "m_elab.ml" 526 18513 18551
type(
  M_t.modunit list
)
"m_elab.ml" 527 18555 18564 "m_elab.ml" 527 18555 18565
type(
  Expr.Subst.sub
)
"m_elab.ml" 527 18555 18567 "m_elab.ml" 527 18555 18571
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 529 18662 18666 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 527 18555 18563 "m_elab.ml" 527 18555 18572
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 527 18555 18575 "m_elab.ml" 527 18555 18595
type(
  Expr.Subst.sub -> M_t.modunit list -> Expr.Subst.sub * M_t.modunit list
)
ident(
  int_ref M_subst.app_modunits "m_subst.mli" 7 98 98 "m_subst.mli" 7 98 157
)
"m_elab.ml" 527 18555 18597 "m_elab.ml" 527 18555 18602
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 527 18555 18603 "m_elab.ml" 527 18555 18611
type(
  int
)
ident(
  int_ref cx_shift "m_elab.ml" 521 18381 18389 "m_elab.ml" 521 18381 18397
)
"m_elab.ml" 527 18555 18596 "m_elab.ml" 527 18555 18612
type(
  Expr.Subst.sub
)
"m_elab.ml" 527 18555 18613 "m_elab.ml" 527 18555 18617
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 526 18513 18521 "m_elab.ml" 526 18513 18525
)
"m_elab.ml" 527 18555 18575 "m_elab.ml" 527 18555 18617
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 529 18662 18670 "m_elab.ml" 529 18662 18674
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 531 18743 18747 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 529 18662 18677 "m_elab.ml" 529 18662 18698
type(
  Expr.T.ctx -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref lambdify_enabled_cdot "m_elab.ml" 266 8321 8325 "m_elab.ml" 266 8321 8346
)
"m_elab.ml" 529 18662 18699 "m_elab.ml" 529 18662 18701
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 515 18100 18108 "m_elab.ml" 515 18100 18110
)
"m_elab.ml" 529 18662 18702 "m_elab.ml" 529 18662 18706
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 527 18555 18567 "m_elab.ml" 527 18555 18571
)
"m_elab.ml" 529 18662 18677 "m_elab.ml" 529 18662 18706
type(
  M_t.modunit list
)
"m_elab.ml" 531 18743 18751 "m_elab.ml" 531 18743 18755
type(
  M_t.modunit list
)
ident(
  def body "m_elab.ml" 532 18789 18793 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 531 18743 18758 "m_elab.ml" 531 18743 18769
type(
  M_t.modunit list ->
  int -> Expr.T.expr HintMap.t -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref apply_subst "m_elab.ml" 305 9864 9872 "m_elab.ml" 305 9864 9883
)
"m_elab.ml" 531 18743 18770 "m_elab.ml" 531 18743 18772
type(
  M_t.modunit list
)
"m_elab.ml" 531 18743 18773 "m_elab.ml" 531 18743 18774
type(
  int
)
"m_elab.ml" 531 18743 18775 "m_elab.ml" 531 18743 18780
type(
  Expr.T.expr HintMap.t
)
ident(
  int_ref subst "m_elab.ml" 519 18291 18299 "m_elab.ml" 519 18291 18304
)
"m_elab.ml" 531 18743 18781 "m_elab.ml" 531 18743 18785
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 529 18662 18670 "m_elab.ml" 529 18662 18674
)
"m_elab.ml" 531 18743 18758 "m_elab.ml" 531 18743 18785
type(
  M_t.modunit list
)
"m_elab.ml" 532 18789 18797 "m_elab.ml" 532 18789 18803
type(
  int
)
ident(
  def niargs "m_elab.ml" 533 18841 18845 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 532 18789 18806 "m_elab.ml" 532 18789 18817
type(
  Util.hints -> int
)
ident(
  int_ref Ext.List.length "ext.mli" 7 102 104 "ext.mli" 7 102 131
)
"m_elab.ml" 532 18789 18818 "m_elab.ml" 532 18789 18822
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 505 17682 17694 "m_elab.ml" 505 17682 17698
)
"m_elab.ml" 532 18789 18818 "m_elab.ml" 532 18789 18827
type(
  Expr.T.instance
)
"m_elab.ml" 532 18789 18818 "m_elab.ml" 532 18789 18837
type(
  Util.hints
)
"m_elab.ml" 532 18789 18806 "m_elab.ml" 532 18789 18837
type(
  int
)
"m_elab.ml" 533 18841 18849 "m_elab.ml" 533 18841 18854
type(
  Expr.T.expr_ Property.wrapped list
)
ident(
  def iargs "m_elab.ml" 534 18912 18916 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 533 18841 18857 "m_elab.ml" 533 18841 18866
type(
  int ->
  (int -> Expr.T.expr_ Property.wrapped) ->
  Expr.T.expr_ Property.wrapped list
)
ident(
  int_ref Ext.List.init "ext.mli" 50 2229 2231 "ext.mli" 50 2229 2271
)
"m_elab.ml" 533 18841 18867 "m_elab.ml" 533 18841 18873
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 532 18789 18797 "m_elab.ml" 532 18789 18803
)
"m_elab.ml" 533 18841 18879 "m_elab.ml" 533 18841 18880
type(
  int
)
ident(
  def k "m_elab.ml" 533 18841 18884 "m_elab.ml" 533 18841 18907
)
"m_elab.ml" 533 18841 18888 "m_elab.ml" 533 18841 18894
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 532 18789 18797 "m_elab.ml" 532 18789 18803
)
"m_elab.ml" 533 18841 18895 "m_elab.ml" 533 18841 18896
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 533 18841 18897 "m_elab.ml" 533 18841 18898
type(
  int
)
ident(
  int_ref k "m_elab.ml" 533 18841 18879 "m_elab.ml" 533 18841 18880
)
"m_elab.ml" 533 18841 18887 "m_elab.ml" 533 18841 18899
type(
  int
)
"m_elab.ml" 533 18841 18884 "m_elab.ml" 533 18841 18899
type(
  Expr.T.expr_
)
"m_elab.ml" 533 18841 18900 "m_elab.ml" 533 18841 18902
type(
  Expr.T.expr_ ->
  Expr.T.instance Property.wrapped -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 533 18841 18903 "m_elab.ml" 533 18841 18907
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 505 17682 17694 "m_elab.ml" 505 17682 17698
)
"m_elab.ml" 533 18841 18884 "m_elab.ml" 533 18841 18907
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 533 18841 18874 "m_elab.ml" 533 18841 18908
type(
  int -> Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 533 18841 18857 "m_elab.ml" 533 18841 18908
type(
  Expr.T.expr_ Property.wrapped list
)
"m_elab.ml" 534 18912 18920 "m_elab.ml" 534 18912 18934
type(
  bool ref
)
ident(
  def not_complained "m_elab.ml" 535 18949 18953 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 534 18912 18937 "m_elab.ml" 534 18912 18940
type(
  bool -> bool ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 534 18912 18941 "m_elab.ml" 534 18912 18945
type(
  bool
)
"m_elab.ml" 534 18912 18937 "m_elab.ml" 534 18912 18945
type(
  bool ref
)
"m_elab.ml" 535 18949 18957 "m_elab.ml" 535 18949 18961
type(
  M_t.modunit_ Property.wrapped list
)
ident(
  def body "m_elab.ml" 537 19035 19039 "m_elab.ml" 537 19035 19059
)
"m_elab.ml" 535 18949 18964 "m_elab.ml" 535 18949 18972
type(
  M_t.modunit_ Property.wrapped list ->
  int ->
  string Property.wrapped ->
  int ->
  Expr.T.expr list ->
  bool ref ->
  Expr.T.instance Property.wrapped ->
  Expr.T.export -> M_t.modunit list -> M_t.modunit_ Property.wrapped list
)
ident(
  int_ref localize "m_elab.ml" 402 13159 13167 "m_elab.ml" 402 13159 13175
)
"m_elab.ml" 535 18949 18973 "m_elab.ml" 535 18949 18975
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 535 18949 18976 "m_elab.ml" 535 18949 18977
type(
  int
)
"m_elab.ml" 535 18949 18978 "m_elab.ml" 535 18949 18983
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 501 17512 17521 "m_elab.ml" 501 17512 17526
)
"m_elab.ml" 535 18949 18984 "m_elab.ml" 535 18949 18990
type(
  int
)
ident(
  int_ref niargs "m_elab.ml" 532 18789 18797 "m_elab.ml" 532 18789 18803
)
"m_elab.ml" 535 18949 18991 "m_elab.ml" 535 18949 18996
type(
  Expr.T.expr list
)
ident(
  int_ref iargs "m_elab.ml" 533 18841 18849 "m_elab.ml" 533 18841 18854
)
"m_elab.ml" 535 18949 18997 "m_elab.ml" 535 18949 19011
type(
  bool ref
)
ident(
  int_ref not_complained "m_elab.ml" 534 18912 18920 "m_elab.ml" 534 18912 18934
)
"m_elab.ml" 535 18949 19012 "m_elab.ml" 535 18949 19016
type(
  Expr.T.instance Property.wrapped
)
ident(
  int_ref inst "m_elab.ml" 505 17682 17694 "m_elab.ml" 505 17682 17698
)
"m_elab.ml" 535 18949 19017 "m_elab.ml" 535 18949 19022
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 500 17497 17506 "m_elab.ml" 500 17497 17511
)
"m_elab.ml" 535 18949 19023 "m_elab.ml" 535 18949 19027
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 531 18743 18751 "m_elab.ml" 531 18743 18755
)
"m_elab.ml" 535 18949 18964 "m_elab.ml" 535 18949 19027
type(
  M_t.modunit_ Property.wrapped list
)
"m_elab.ml" 537 19035 19039 "m_elab.ml" 537 19035 19054
type(
  M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref localize_axioms "m_elab.ml" 28 378 382 "m_elab.ml" 28 378 397
)
"m_elab.ml" 537 19035 19055 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
ident(
  int_ref body "m_elab.ml" 535 18949 18957 "m_elab.ml" 535 18949 18961
)
"m_elab.ml" 537 19035 19039 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 535 18949 18953 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 534 18912 18916 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 533 18841 18845 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 532 18789 18793 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 531 18743 18747 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 529 18662 18666 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 527 18555 18559 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 526 18513 18517 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 523 18472 18476 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 522 18444 18448 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 521 18381 18385 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 519 18291 18295 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 516 18154 18158 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 515 18100 18104 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 511 17975 17979 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 509 17861 17865 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 507 17748 17752 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 505 17682 17690 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 503 17591 17599 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 502 17529 17533 "m_elab.ml" 537 19035 19059
type(
  M_t.modunit list
)
"m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  def anon "m_elab.ml" 607 20976 20976 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 545 19233 19252 "m_elab.ml" 545 19233 19256
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
"m_elab.ml" 548 19302 19333 "m_elab.ml" 548 19302 19348
type(
  M_t.modctx
)
ident(
  int_ref StringMap.empty "map.mli" 73 2950 2954 "map.mli" 73 2950 2969
)
"m_elab.ml" 550 19350 19365 "m_elab.ml" 550 19350 19368
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 550 19350 19369 "m_elab.ml" 552 19396 19415
)
"m_elab.ml" 550 19350 19369 "m_elab.ml" 550 19350 19372
type(
  string list Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 550 19350 19373 "m_elab.ml" 552 19396 19415
)
"m_elab.ml" 550 19350 19373 "m_elab.ml" 550 19350 19374
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 551 19377 19381 "m_elab.ml" 552 19396 19415
)
"m_elab.ml" 551 19377 19390 "m_elab.ml" 551 19377 19393
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 550 19350 19365 "m_elab.ml" 550 19350 19368
)
"m_elab.ml" 551 19377 19381 "m_elab.ml" 551 19377 19393
type(
  unit
)
"m_elab.ml" 552 19396 19400 "m_elab.ml" 552 19396 19404
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 552 19396 19400 "m_elab.ml" 552 19396 19409
type(
  string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr
)
"m_elab.ml" 552 19396 19410 "m_elab.ml" 552 19396 19413
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 550 19350 19369 "m_elab.ml" 550 19350 19372
)
"m_elab.ml" 552 19396 19414 "m_elab.ml" 552 19396 19415
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 550 19350 19373 "m_elab.ml" 550 19350 19374
)
"m_elab.ml" 552 19396 19400 "m_elab.ml" 552 19396 19415
type(
  Expr.T.expr
)
"m_elab.ml" 551 19377 19381 "m_elab.ml" 552 19396 19415
type(
  Expr.T.expr
)
"m_elab.ml" 554 19417 19433 "m_elab.ml" 554 19417 19436
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 554 19417 19437 "m_elab.ml" 556 19466 19488
)
"m_elab.ml" 554 19417 19437 "m_elab.ml" 554 19417 19440
type(
  string list Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 554 19417 19441 "m_elab.ml" 556 19466 19488
)
"m_elab.ml" 554 19417 19441 "m_elab.ml" 554 19417 19444
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 555 19447 19451 "m_elab.ml" 556 19466 19488
)
"m_elab.ml" 555 19447 19460 "m_elab.ml" 555 19447 19463
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 554 19417 19433 "m_elab.ml" 554 19417 19436
)
"m_elab.ml" 555 19447 19451 "m_elab.ml" 555 19447 19463
type(
  unit
)
"m_elab.ml" 556 19466 19470 "m_elab.ml" 556 19466 19474
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 556 19466 19470 "m_elab.ml" 556 19466 19480
type(
  string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof
)
"m_elab.ml" 556 19466 19481 "m_elab.ml" 556 19466 19484
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 554 19417 19437 "m_elab.ml" 554 19417 19440
)
"m_elab.ml" 556 19466 19485 "m_elab.ml" 556 19466 19488
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 554 19417 19441 "m_elab.ml" 554 19417 19444
)
"m_elab.ml" 556 19466 19470 "m_elab.ml" 556 19466 19488
type(
  Proof.T.proof
)
"m_elab.ml" 555 19447 19451 "m_elab.ml" 556 19466 19488
type(
  Proof.T.proof
)
"m_elab.ml" 558 19490 19507 "m_elab.ml" 558 19490 19510
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 558 19490 19511 "m_elab.ml" 560 19539 19561
)
"m_elab.ml" 558 19490 19511 "m_elab.ml" 558 19490 19514
type(
  string list Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 558 19490 19515 "m_elab.ml" 560 19539 19561
)
"m_elab.ml" 558 19490 19515 "m_elab.ml" 558 19490 19517
type(
  Proof.T.usable
)
ident(
  def us "m_elab.ml" 559 19520 19524 "m_elab.ml" 560 19539 19561
)
"m_elab.ml" 559 19520 19533 "m_elab.ml" 559 19520 19536
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 558 19490 19507 "m_elab.ml" 558 19490 19510
)
"m_elab.ml" 559 19520 19524 "m_elab.ml" 559 19520 19536
type(
  unit
)
"m_elab.ml" 560 19539 19543 "m_elab.ml" 560 19539 19547
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 560 19539 19543 "m_elab.ml" 560 19539 19554
type(
  string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable
)
"m_elab.ml" 560 19539 19555 "m_elab.ml" 560 19539 19558
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 558 19490 19511 "m_elab.ml" 558 19490 19514
)
"m_elab.ml" 560 19539 19559 "m_elab.ml" 560 19539 19561
type(
  Proof.T.usable
)
ident(
  int_ref us "m_elab.ml" 558 19490 19515 "m_elab.ml" 558 19490 19517
)
"m_elab.ml" 560 19539 19543 "m_elab.ml" 560 19539 19561
type(
  Proof.T.usable
)
"m_elab.ml" 559 19520 19524 "m_elab.ml" 560 19539 19561
type(
  Proof.T.usable
)
"m_elab.ml" 562 19563 19577 "m_elab.ml" 562 19563 19580
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 562 19563 19581 "m_elab.ml" 564 19610 19630
)
"m_elab.ml" 562 19563 19581 "m_elab.ml" 562 19563 19584
type(
  string list Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 562 19563 19585 "m_elab.ml" 564 19610 19630
)
"m_elab.ml" 562 19563 19585 "m_elab.ml" 562 19563 19588
type(
  Expr.T.hyp
)
ident(
  def hyp "m_elab.ml" 563 19591 19595 "m_elab.ml" 564 19610 19630
)
"m_elab.ml" 563 19591 19604 "m_elab.ml" 563 19591 19607
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 562 19563 19577 "m_elab.ml" 562 19563 19580
)
"m_elab.ml" 563 19591 19595 "m_elab.ml" 563 19591 19607
type(
  unit
)
"m_elab.ml" 564 19610 19614 "m_elab.ml" 564 19610 19618
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 564 19610 19614 "m_elab.ml" 564 19610 19622
type(
  string list Expr.Visit.scx ->
  Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp
)
"m_elab.ml" 564 19610 19623 "m_elab.ml" 564 19610 19626
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 562 19563 19581 "m_elab.ml" 562 19563 19584
)
"m_elab.ml" 564 19610 19627 "m_elab.ml" 564 19610 19630
type(
  Expr.T.hyp
)
ident(
  int_ref hyp "m_elab.ml" 562 19563 19585 "m_elab.ml" 562 19563 19588
)
"m_elab.ml" 564 19610 19614 "m_elab.ml" 564 19610 19630
type(
  string list Expr.Visit.scx * Expr.T.hyp
)
"m_elab.ml" 563 19591 19595 "m_elab.ml" 564 19610 19630
type(
  string list Expr.Visit.scx * Expr.T.hyp
)
"m_elab.ml" 566 19632 19650 "m_elab.ml" 566 19632 19653
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 566 19632 19654 "m_elab.ml" 568 19682 19705
)
"m_elab.ml" 566 19632 19654 "m_elab.ml" 566 19632 19657
type(
  string list Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 566 19632 19658 "m_elab.ml" 568 19682 19705
)
"m_elab.ml" 566 19632 19658 "m_elab.ml" 566 19632 19660
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 567 19663 19667 "m_elab.ml" 568 19682 19705
)
"m_elab.ml" 567 19663 19676 "m_elab.ml" 567 19663 19679
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 566 19632 19650 "m_elab.ml" 566 19632 19653
)
"m_elab.ml" 567 19663 19667 "m_elab.ml" 567 19663 19679
type(
  unit
)
"m_elab.ml" 568 19682 19686 "m_elab.ml" 568 19682 19690
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 568 19682 19686 "m_elab.ml" 568 19682 19698
type(
  string list Expr.Visit.scx ->
  Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 568 19682 19699 "m_elab.ml" 568 19682 19702
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 566 19632 19654 "m_elab.ml" 566 19632 19657
)
"m_elab.ml" 568 19682 19703 "m_elab.ml" 568 19682 19705
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 566 19632 19658 "m_elab.ml" 566 19632 19660
)
"m_elab.ml" 568 19682 19686 "m_elab.ml" 568 19682 19705
type(
  string list Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 567 19663 19667 "m_elab.ml" 568 19682 19705
type(
  string list Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 570 19707 19722 "m_elab.ml" 570 19707 19725
type(
  string list Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 570 19707 19726 "m_elab.ml" 601 20838 20865
)
"m_elab.ml" 570 19707 19726 "m_elab.ml" 570 19707 19729
type(
  Expr.T.defn list
)
ident(
  def dfs "m_elab.ml" 571 19732 19736 "m_elab.ml" 601 20838 20865
)
"m_elab.ml" 571 19732 19742 "m_elab.ml" 571 19732 19745
type(
  Expr.T.defn list
)
ident(
  int_ref dfs "m_elab.ml" 570 19707 19726 "m_elab.ml" 570 19707 19729
)
"m_elab.ml" 572 19751 19775 "m_elab.ml" 572 19751 19777
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 573 19802 19810 "m_elab.ml" 599 20776 20826
)
"m_elab.ml" 572 19751 19779 "m_elab.ml" 572 19751 19783
type(
  Expr.T.instance
)
ident(
  def inst "m_elab.ml" 573 19802 19810 "m_elab.ml" 599 20776 20826
)
"m_elab.ml" 572 19751 19765 "m_elab.ml" 572 19751 19784
type(
  Expr.T.defn_
)
"m_elab.ml" 572 19751 19757 "m_elab.ml" 572 19751 19785
type(
  Expr.T.defn
)
"m_elab.ml" 572 19751 19757 "m_elab.ml" 572 19751 19791
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 573 19802 19810 "m_elab.ml" 599 20776 20826
)
"m_elab.ml" 572 19751 19795 "m_elab.ml" 572 19751 19798
type(
  Expr.T.defn list
)
ident(
  def dfs "m_elab.ml" 573 19802 19810 "m_elab.ml" 599 20776 20826
)
"m_elab.ml" 572 19751 19757 "m_elab.ml" 572 19751 19798
type(
  Expr.T.defn list
)
type(
  Expr.T.defn list
)
"m_elab.ml" 573 19802 19813 "m_elab.ml" 573 19802 19816
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"m_elab.ml" 573 19802 19818 "m_elab.ml" 573 19802 19831
type(
  StringMap.key -> M_t.mule StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 573 19802 19832 "m_elab.ml" 573 19802 19836
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 572 19751 19779 "m_elab.ml" 572 19751 19783
)
"m_elab.ml" 573 19802 19832 "m_elab.ml" 573 19802 19845
type(
  StringMap.key
)
"m_elab.ml" 573 19802 19846 "m_elab.ml" 573 19802 19851
type(
  M_t.modctx
)
"m_elab.ml" 573 19802 19817 "m_elab.ml" 573 19802 19852
type(
  bool
)
"m_elab.ml" 573 19802 19813 "m_elab.ml" 573 19802 19852
type(
  bool
)
"m_elab.ml" 574 19864 19874 "m_elab.ml" 574 19864 19884
type(
  ?at:Expr.T.defn_ Property.wrapped ->
  (string -> unit, unit, string, unit) format4 -> string -> unit
)
ident(
  int_ref Errors.err "errors.mli" 28 640 640 "errors.mli" 30 673 715
)
"m_elab.ml" 574 19864 19889 "m_elab.ml" 574 19864 19891
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 572 19751 19757 "m_elab.ml" 572 19751 19791
)
type(
  Expr.T.defn_ Property.wrapped option
)
"m_elab.ml" 574 19864 19892 "m_elab.ml" 574 19864 19915
type(
  (string -> unit, unit, string, unit) format4
)
"m_elab.ml" 574 19864 19916 "m_elab.ml" 574 19864 19920
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 572 19751 19779 "m_elab.ml" 572 19751 19783
)
"m_elab.ml" 574 19864 19916 "m_elab.ml" 574 19864 19929
type(
  string
)
"m_elab.ml" 574 19864 19874 "m_elab.ml" 574 19864 19929
type(
  unit
)
"m_elab.ml" 575 19931 19941 "m_elab.ml" 575 19931 19949
type(
  string -> unit
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 575 19931 19950 "m_elab.ml" 575 19931 19974
type(
  string
)
"m_elab.ml" 575 19931 19941 "m_elab.ml" 575 19931 19974
type(
  unit
)
"m_elab.ml" 573 19802 19858 "m_elab.ml" 576 19975 19986
type(
  unit
)
"m_elab.ml" 573 19802 19810 "m_elab.ml" 576 19975 19986
type(
  unit
)
"m_elab.ml" 577 19988 20000 "m_elab.ml" 577 19988 20006
type(
  M_t.modunit list
)
ident(
  def submus "m_elab.ml" 580 20099 20107 "m_elab.ml" 599 20776 20826
)
"m_elab.ml" 578 20009 20019 "m_elab.ml" 578 20009 20030
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable > ->
  M_t.modctx ->
  Expr.T.ctx ->
  Expr.T.instance Property.wrapped ->
  local:Expr.T.export -> iname:Util.hint -> M_t.modunit list
)
ident(
  int_ref instantiate "m_elab.ml" 495 17387 17391 "m_elab.ml" 495 17387 17402
)
"m_elab.ml" 578 20009 20031 "m_elab.ml" 578 20009 20035
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 578 20009 20036 "m_elab.ml" 578 20009 20041
type(
  M_t.modctx
)
"m_elab.ml" 578 20009 20043 "m_elab.ml" 578 20009 20046
type(
  string list Expr.Visit.scx -> Expr.T.ctx
)
ident(
  int_ref Stdlib.snd "stdlib.mli" 814 30309 30309 "stdlib.mli" 814 30309 30349
)
"m_elab.ml" 578 20009 20047 "m_elab.ml" 578 20009 20050
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 570 19707 19722 "m_elab.ml" 570 19707 19725
)
"m_elab.ml" 578 20009 20042 "m_elab.ml" 578 20009 20051
type(
  Expr.T.ctx
)
"m_elab.ml" 578 20009 20053 "m_elab.ml" 578 20009 20057
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 572 19751 19779 "m_elab.ml" 572 19751 19783
)
"m_elab.ml" 578 20009 20058 "m_elab.ml" 578 20009 20060
type(
  Expr.T.instance ->
  Expr.T.defn_ Property.wrapped -> Expr.T.instance Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 578 20009 20061 "m_elab.ml" 578 20009 20063
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 572 19751 19757 "m_elab.ml" 572 19751 19791
)
"m_elab.ml" 578 20009 20052 "m_elab.ml" 578 20009 20064
type(
  Expr.T.instance Property.wrapped
)
"m_elab.ml" 578 20009 20072 "m_elab.ml" 578 20009 20077
type(
  Expr.T.export
)
"m_elab.ml" 578 20009 20085 "m_elab.ml" 578 20009 20087
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 572 19751 19775 "m_elab.ml" 572 19751 19777
)
"m_elab.ml" 578 20009 20019 "m_elab.ml" 578 20009 20087
type(
  M_t.modunit list
)
"m_elab.ml" 580 20099 20115 "m_elab.ml" 580 20099 20124
type(
  Expr.T.defn list -> M_t.modunit list -> Expr.T.defn list
)
ident(
  def make_defs "m_elab.ml" 580 20099 20107 "m_elab.ml" 599 20776 20826
)
"m_elab.ml" 580 20099 20125 "m_elab.ml" 580 20099 20130
type(
  Expr.T.defn list
)
ident(
  def sofar "m_elab.ml" 580 20099 20133 "m_elab.ml" 597 20747 20764
)
"m_elab.ml" 581 20142 20154 "m_elab.ml" 581 20142 20156
type(
  M_t.modunit list
)
"m_elab.ml" 581 20142 20160 "m_elab.ml" 581 20142 20168
type(
  Expr.T.defn list -> Expr.T.defn list
)
ident(
  int_ref Ext.List.rev "ext.mli" 11 220 222 "ext.mli" 11 220 250
)
"m_elab.ml" 581 20142 20169 "m_elab.ml" 581 20142 20174
type(
  Expr.T.defn list
)
ident(
  int_ref sofar "m_elab.ml" 580 20099 20125 "m_elab.ml" 580 20099 20130
)
"m_elab.ml" 581 20142 20160 "m_elab.ml" 581 20142 20174
type(
  Expr.T.defn list
)
"m_elab.ml" 582 20175 20187 "m_elab.ml" 582 20175 20189
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 583 20200 20214 "m_elab.ml" 597 20747 20764
)
"m_elab.ml" 582 20175 20193 "m_elab.ml" 582 20175 20196
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 583 20200 20214 "m_elab.ml" 597 20747 20764
)
"m_elab.ml" 582 20175 20187 "m_elab.ml" 582 20175 20196
type(
  M_t.modunit list
)
"m_elab.ml" 583 20200 20226 "m_elab.ml" 583 20200 20228
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 582 20175 20187 "m_elab.ml" 582 20175 20189
)
"m_elab.ml" 583 20200 20226 "m_elab.ml" 583 20200 20233
type(
  M_t.modunit_
)
"m_elab.ml" 584 20239 20267 "m_elab.ml" 584 20239 20269
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 584 20239 20283 "m_elab.ml" 584 20239 20310
)
"m_elab.ml" 584 20239 20271 "m_elab.ml" 584 20239 20272
type(
  Expr.T.wheredef
)
"m_elab.ml" 584 20239 20274 "m_elab.ml" 584 20239 20275
type(
  Expr.T.visibility
)
"m_elab.ml" 584 20239 20277 "m_elab.ml" 584 20239 20278
type(
  Expr.T.export
)
"m_elab.ml" 584 20239 20255 "m_elab.ml" 584 20239 20279
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 584 20239 20283 "m_elab.ml" 584 20239 20292
type(
  Expr.T.defn list -> M_t.modunit list -> Expr.T.defn list
)
ident(
  int_ref make_defs "m_elab.ml" 580 20099 20115 "m_elab.ml" 580 20099 20124
)
"m_elab.ml" 584 20239 20294 "m_elab.ml" 584 20239 20296
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 584 20239 20267 "m_elab.ml" 584 20239 20269
)
"m_elab.ml" 584 20239 20300 "m_elab.ml" 584 20239 20305
type(
  Expr.T.defn list
)
ident(
  int_ref sofar "m_elab.ml" 580 20099 20125 "m_elab.ml" 580 20099 20130
)
"m_elab.ml" 584 20239 20293 "m_elab.ml" 584 20239 20306
type(
  Expr.T.defn list
)
"m_elab.ml" 584 20239 20307 "m_elab.ml" 584 20239 20310
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 582 20175 20193 "m_elab.ml" 582 20175 20196
)
"m_elab.ml" 584 20239 20283 "m_elab.ml" 584 20239 20310
type(
  Expr.T.defn list
)
"m_elab.ml" 585 20311 20337 "m_elab.ml" 585 20311 20338
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 585 20311 20338
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 586 20339 20366 "m_elab.ml" 586 20339 20367
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 586 20339 20355 "m_elab.ml" 586 20339 20367
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 586 20339 20367
type(
  M_t.modunit_
)
"m_elab.ml" 587 20368 20394 "m_elab.ml" 587 20368 20395
type(
  Util.hints
)
"m_elab.ml" 587 20368 20384 "m_elab.ml" 587 20368 20395
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 587 20368 20395
type(
  M_t.modunit_
)
"m_elab.ml" 588 20396 20418 "m_elab.ml" 588 20396 20419
type(
  Expr.T.expr
)
type(
  Util.hint option
)
"m_elab.ml" 588 20396 20412 "m_elab.ml" 588 20396 20419
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 588 20396 20419
type(
  M_t.modunit_
)
"m_elab.ml" 589 20420 20444 "m_elab.ml" 589 20420 20445
type(
  M_t.summary
)
type(
  Proof.T.proof
)
type(
  Proof.T.proof
)
type(
  int
)
type(
  Expr.T.sequent
)
type(
  Util.hint option
)
"m_elab.ml" 589 20420 20436 "m_elab.ml" 589 20420 20445
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 589 20420 20445
type(
  M_t.modunit_
)
"m_elab.ml" 590 20446 20469 "m_elab.ml" 590 20446 20470
type(
  M_t.mule
)
"m_elab.ml" 590 20446 20462 "m_elab.ml" 590 20446 20470
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 590 20446 20470
type(
  M_t.modunit_
)
"m_elab.ml" 591 20471 20494 "m_elab.ml" 591 20471 20495
type(
  Proof.T.usable
)
type(
  [ `Hide | `Use of bool ]
)
"m_elab.ml" 591 20471 20487 "m_elab.ml" 591 20471 20495
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 591 20471 20495
type(
  M_t.modunit_
)
"m_elab.ml" 592 20496 20521 "m_elab.ml" 592 20496 20522
type(
  Expr.T.export
)
type(
  Expr.T.instance
)
"m_elab.ml" 592 20496 20512 "m_elab.ml" 592 20496 20522
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 585 20311 20327 "m_elab.ml" 592 20496 20522
type(
  M_t.modunit_
)
"m_elab.ml" 593 20526 20546 "m_elab.ml" 593 20526 20553
type(
  Expr.T.hyp_ Property.wrapped list
)
ident(
  def mu_hyps "m_elab.ml" 594 20582 20598 "m_elab.ml" 596 20711 20746
)
"m_elab.ml" 593 20526 20556 "m_elab.ml" 593 20526 20575
type(
  M_t.modunit -> Expr.T.hyp_ Property.wrapped list
)
ident(
  int_ref M_t.hyps_of_modunit "m_t.mli" 67 1637 1637 "m_t.mli" 69 1673 1714
)
"m_elab.ml" 593 20526 20576 "m_elab.ml" 593 20526 20578
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 582 20175 20187 "m_elab.ml" 582 20175 20189
)
"m_elab.ml" 593 20526 20556 "m_elab.ml" 593 20526 20578
type(
  Expr.T.hyp_ Property.wrapped list
)
"m_elab.ml" 594 20582 20602 "m_elab.ml" 594 20582 20608
type(
  int
)
ident(
  def n_hyps "m_elab.ml" 595 20634 20650 "m_elab.ml" 596 20711 20746
)
"m_elab.ml" 594 20582 20611 "m_elab.ml" 594 20582 20622
type(
  Expr.T.hyp_ Property.wrapped list -> int
)
ident(
  int_ref Ext.List.length "ext.mli" 7 102 104 "ext.mli" 7 102 131
)
"m_elab.ml" 594 20582 20623 "m_elab.ml" 594 20582 20630
type(
  Expr.T.hyp_ Property.wrapped list
)
ident(
  int_ref mu_hyps "m_elab.ml" 593 20526 20546 "m_elab.ml" 593 20526 20553
)
"m_elab.ml" 594 20582 20611 "m_elab.ml" 594 20582 20630
type(
  int
)
"m_elab.ml" 595 20634 20655 "m_elab.ml" 595 20634 20656
type(
  Expr.Subst.sub
)
"m_elab.ml" 595 20634 20658 "m_elab.ml" 595 20634 20661
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 596 20711 20727 "m_elab.ml" 596 20711 20746
)
"m_elab.ml" 595 20634 20654 "m_elab.ml" 595 20634 20662
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 595 20634 20665 "m_elab.ml" 595 20634 20685
type(
  Expr.Subst.sub -> M_t.modunit list -> Expr.Subst.sub * M_t.modunit list
)
ident(
  int_ref M_subst.app_modunits "m_subst.mli" 7 98 98 "m_subst.mli" 7 98 157
)
"m_elab.ml" 595 20634 20687 "m_elab.ml" 595 20634 20692
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 595 20634 20694 "m_elab.ml" 595 20634 20695
type(
  int -> int
)
ident(
  int_ref Stdlib.( ~- ) "stdlib.mli" 329 13119 13119 "stdlib.mli" 329 13119 13159
)
"m_elab.ml" 595 20634 20695 "m_elab.ml" 595 20634 20701
type(
  int
)
ident(
  int_ref n_hyps "m_elab.ml" 594 20582 20602 "m_elab.ml" 594 20582 20608
)
"m_elab.ml" 595 20634 20693 "m_elab.ml" 595 20634 20702
type(
  int
)
"m_elab.ml" 595 20634 20686 "m_elab.ml" 595 20634 20703
type(
  Expr.Subst.sub
)
"m_elab.ml" 595 20634 20704 "m_elab.ml" 595 20634 20707
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 582 20175 20193 "m_elab.ml" 582 20175 20196
)
"m_elab.ml" 595 20634 20665 "m_elab.ml" 595 20634 20707
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 596 20711 20727 "m_elab.ml" 596 20711 20736
type(
  Expr.T.defn list -> M_t.modunit list -> Expr.T.defn list
)
ident(
  int_ref make_defs "m_elab.ml" 580 20099 20115 "m_elab.ml" 580 20099 20124
)
"m_elab.ml" 596 20711 20737 "m_elab.ml" 596 20711 20742
type(
  Expr.T.defn list
)
ident(
  int_ref sofar "m_elab.ml" 580 20099 20125 "m_elab.ml" 580 20099 20130
)
"m_elab.ml" 596 20711 20743 "m_elab.ml" 596 20711 20746
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 595 20634 20658 "m_elab.ml" 595 20634 20661
)
"m_elab.ml" 596 20711 20727 "m_elab.ml" 596 20711 20746
type(
  Expr.T.defn list
)
"m_elab.ml" 595 20634 20650 "m_elab.ml" 596 20711 20746
type(
  Expr.T.defn list
)
"m_elab.ml" 594 20582 20598 "m_elab.ml" 596 20711 20746
type(
  Expr.T.defn list
)
"m_elab.ml" 593 20526 20542 "m_elab.ml" 596 20711 20746
type(
  Expr.T.defn list
)
"m_elab.ml" 583 20200 20214 "m_elab.ml" 597 20747 20764
type(
  Expr.T.defn list
)
"m_elab.ml" 580 20099 20133 "m_elab.ml" 597 20747 20764
type(
  M_t.modunit list -> Expr.T.defn list
)
"m_elab.ml" 599 20776 20784 "m_elab.ml" 599 20776 20788
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
"m_elab.ml" 599 20776 20784 "m_elab.ml" 599 20776 20794
type(
  string list Expr.Visit.scx ->
  Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 599 20776 20795 "m_elab.ml" 599 20776 20798
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 570 19707 19722 "m_elab.ml" 570 19707 19725
)
"m_elab.ml" 599 20776 20800 "m_elab.ml" 599 20776 20809
type(
  Expr.T.defn list -> M_t.modunit list -> Expr.T.defn list
)
ident(
  int_ref make_defs "m_elab.ml" 580 20099 20115 "m_elab.ml" 580 20099 20124
)
"m_elab.ml" 599 20776 20810 "m_elab.ml" 599 20776 20812
type(
  Expr.T.defn list
)
"m_elab.ml" 599 20776 20813 "m_elab.ml" 599 20776 20819
type(
  M_t.modunit list
)
ident(
  int_ref submus "m_elab.ml" 577 19988 20000 "m_elab.ml" 577 19988 20006
)
"m_elab.ml" 599 20776 20800 "m_elab.ml" 599 20776 20819
type(
  Expr.T.defn list
)
"m_elab.ml" 599 20776 20820 "m_elab.ml" 599 20776 20821
type(
  Expr.T.defn list -> Expr.T.defn list -> Expr.T.defn list
)
ident(
  int_ref Stdlib.( @ ) "stdlib.mli" 823 30483 30483 "stdlib.mli" 823 30483 30524
)
"m_elab.ml" 599 20776 20822 "m_elab.ml" 599 20776 20825
type(
  Expr.T.defn list
)
ident(
  int_ref dfs "m_elab.ml" 572 19751 19795 "m_elab.ml" 572 19751 19798
)
"m_elab.ml" 599 20776 20799 "m_elab.ml" 599 20776 20826
type(
  Expr.T.defn list
)
"m_elab.ml" 599 20776 20784 "m_elab.ml" 599 20776 20826
type(
  string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 580 20099 20107 "m_elab.ml" 599 20776 20826
type(
  string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 577 19988 19996 "m_elab.ml" 599 20776 20826
type(
  string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 573 19802 19810 "m_elab.ml" 599 20776 20826
type(
  string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 600 20827 20833 "m_elab.ml" 600 20827 20834
type(
  Expr.T.defn list
)
type(
  Expr.T.defn list
)
"m_elab.ml" 601 20838 20846 "m_elab.ml" 601 20838 20851
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-2
)
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref super "m_elab.ml" 546 19266 19276 "m_elab.ml" 546 19266 19291
)
"m_elab.ml" 601 20838 20846 "m_elab.ml" 601 20838 20857
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable > ->
  string list Expr.Visit.scx ->
  Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list
)
ident(
  ext_ref defns
)
type(
  string list Expr.Visit.scx ->
  Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list
)
type(
  string list Expr.Visit.scx ->
  Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 601 20838 20858 "m_elab.ml" 601 20838 20861
type(
  string list Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 570 19707 19722 "m_elab.ml" 570 19707 19725
)
"m_elab.ml" 601 20838 20862 "m_elab.ml" 601 20838 20865
type(
  Expr.T.defn list
)
ident(
  int_ref dfs "m_elab.ml" 570 19707 19726 "m_elab.ml" 570 19707 19729
)
"m_elab.ml" 601 20838 20846 "m_elab.ml" 601 20838 20865
type(
  string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 571 19732 19736 "m_elab.ml" 601 20838 20865
type(
  string list Expr.Visit.scx * Expr.T.defn list
)
"m_elab.ml" 545 19233 19244 "m_elab.ml" 602 20866 20869
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
"m_elab.ml" 607 20976 20980 "m_elab.ml" 607 20976 20988
type(
  Expr.T.visibility ->
  Expr.T.hyp Deque.dq ->
  Proof.T.use_def Property.wrapped -> Expr.T.hyp Deque.dq
)
ident(
  def set_defn "m_elab.ml" 634 21960 21960 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 607 20976 20989 "m_elab.ml" 607 20976 20992
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 607 20976 20993 "m_elab.ml" 631 21928 21935
)
"m_elab.ml" 607 20976 20993 "m_elab.ml" 607 20976 20994
type(
  Expr.T.hyp Deque.dq
)
ident(
  def l "m_elab.ml" 607 20976 20995 "m_elab.ml" 631 21928 21935
)
"m_elab.ml" 607 20976 20995 "m_elab.ml" 607 20976 20997
type(
  Proof.T.use_def Property.wrapped
)
ident(
  def df "m_elab.ml" 608 21000 21002 "m_elab.ml" 631 21928 21935
)
"m_elab.ml" 608 21000 21010 "m_elab.ml" 608 21000 21014
type(
  int -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  def doit "m_elab.ml" 608 21000 21002 "m_elab.ml" 631 21928 21935
)
"m_elab.ml" 608 21000 21015 "m_elab.ml" 608 21000 21016
type(
  int
)
ident(
  def n "m_elab.ml" 608 21000 21017 "m_elab.ml" 622 21660 21669
)
"m_elab.ml" 608 21000 21017 "m_elab.ml" 608 21000 21018
type(
  Expr.T.hyp Deque.dq
)
ident(
  def l "m_elab.ml" 608 21000 21021 "m_elab.ml" 622 21660 21669
)
"m_elab.ml" 608 21000 21027 "m_elab.ml" 608 21000 21028
type(
  int
)
ident(
  int_ref n "m_elab.ml" 608 21000 21015 "m_elab.ml" 608 21000 21016
)
"m_elab.ml" 609 21034 21040 "m_elab.ml" 609 21034 21041
type(
  int
)
type(
  int
)
"m_elab.ml" 610 21051 21065 "m_elab.ml" 610 21051 21076
type(
  Expr.T.hyp Deque.dq -> (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
ident(
  int_ref Deque.front "deque.mli" 14 253 253 "deque.mli" 14 253 293
)
"m_elab.ml" 610 21051 21077 "m_elab.ml" 610 21051 21078
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 608 21000 21017 "m_elab.ml" 608 21000 21018
)
"m_elab.ml" 610 21051 21065 "m_elab.ml" 610 21051 21078
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 611 21084 21116 "m_elab.ml" 611 21084 21117
type(
  Expr.T.defn
)
ident(
  def d "m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21184
)
"m_elab.ml" 611 21084 21119 "m_elab.ml" 611 21084 21121
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21184
)
"m_elab.ml" 611 21084 21123 "m_elab.ml" 611 21084 21124
type(
  Expr.T.visibility
)
"m_elab.ml" 611 21084 21126 "m_elab.ml" 611 21084 21128
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21184
)
"m_elab.ml" 611 21084 21110 "m_elab.ml" 611 21084 21129
type(
  Expr.T.hyp_
)
"m_elab.ml" 611 21084 21102 "m_elab.ml" 611 21084 21130
type(
  Expr.T.hyp
)
"m_elab.ml" 611 21084 21102 "m_elab.ml" 611 21084 21135
type(
  Expr.T.hyp
)
ident(
  def h "m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21184
)
"m_elab.ml" 611 21084 21137 "m_elab.ml" 611 21084 21138
type(
  Expr.T.hyp Deque.dq
)
ident(
  def l "m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21184
)
"m_elab.ml" 611 21084 21101 "m_elab.ml" 611 21084 21139
type(
  Expr.T.hyp * Expr.T.hyp Deque.dq
)
"m_elab.ml" 611 21084 21096 "m_elab.ml" 611 21084 21139
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21153
type(
  Expr.T.hyp -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.cons "deque.mli" 12 187 187 "deque.mli" 12 187 219
)
"m_elab.ml" 611 21084 21161 "m_elab.ml" 611 21084 21162
type(
  Expr.T.defn
)
ident(
  int_ref d "m_elab.ml" 611 21084 21116 "m_elab.ml" 611 21084 21117
)
"m_elab.ml" 611 21084 21164 "m_elab.ml" 611 21084 21166
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 611 21084 21119 "m_elab.ml" 611 21084 21121
)
"m_elab.ml" 611 21084 21168 "m_elab.ml" 611 21084 21171
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 607 20976 20989 "m_elab.ml" 607 20976 20992
)
"m_elab.ml" 611 21084 21173 "m_elab.ml" 611 21084 21175
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 611 21084 21126 "m_elab.ml" 611 21084 21128
)
"m_elab.ml" 611 21084 21155 "m_elab.ml" 611 21084 21176
type(
  Expr.T.hyp_
)
"m_elab.ml" 611 21084 21177 "m_elab.ml" 611 21084 21179
type(
  Expr.T.hyp_ -> Expr.T.hyp_ Property.wrapped -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 611 21084 21180 "m_elab.ml" 611 21084 21181
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref h "m_elab.ml" 611 21084 21102 "m_elab.ml" 611 21084 21135
)
"m_elab.ml" 611 21084 21154 "m_elab.ml" 611 21084 21182
type(
  Expr.T.hyp
)
"m_elab.ml" 611 21084 21183 "m_elab.ml" 611 21084 21184
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 611 21084 21137 "m_elab.ml" 611 21084 21138
)
"m_elab.ml" 611 21084 21143 "m_elab.ml" 611 21084 21184
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 612 21185 21203 "m_elab.ml" 612 21185 21204
type(
  Expr.T.hyp
)
ident(
  def e "m_elab.ml" 613 21212 21226 "m_elab.ml" 616 21418 21468
)
"m_elab.ml" 612 21185 21206 "m_elab.ml" 612 21185 21207
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 612 21185 21202 "m_elab.ml" 612 21185 21208
type(
  Expr.T.hyp * Expr.T.hyp Deque.dq
)
"m_elab.ml" 612 21185 21197 "m_elab.ml" 612 21185 21208
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 613 21212 21229 "m_elab.ml" 613 21212 21230
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 613 21212 21230 "m_elab.ml" 613 21212 21244
type(
  bool ref
)
ident(
  int_ref Params.verbose "params.mli" 13 193 193 "params.mli" 13 193 215
)
"m_elab.ml" 613 21212 21229 "m_elab.ml" 613 21212 21244
type(
  bool
)
"m_elab.ml" 614 21250 21266 "m_elab.ml" 614 21250 21278
type(
  ?debug:string ->
  ?at:Proof.T.use_def Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit ->
  ((Format.formatter -> unit) -> unit, Format.formatter, unit) format ->
  (Format.formatter -> unit) -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 614 21250 21283 "m_elab.ml" 614 21250 21285
type(
  Proof.T.use_def Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 607 20976 20995 "m_elab.ml" 607 20976 20997
)
type(
  Proof.T.use_def Property.wrapped option
)
"m_elab.ml" 614 21250 21286 "m_elab.ml" 614 21250 21336
type(
  ((Format.formatter -> unit) -> unit, Format.formatter, unit) format
)
"m_elab.ml" 615 21337 21360 "m_elab.ml" 615 21337 21362
type(
  Format.formatter
)
ident(
  def ff "m_elab.ml" 615 21337 21366 "m_elab.ml" 615 21337 21414
)
"m_elab.ml" 615 21337 21366 "m_elab.ml" 615 21337 21372
type(
  Expr.Fmt.ctx -> unit
)
ident(
  int_ref Stdlib.ignore "stdlib.mli" 723 27015 27015 "stdlib.mli" 723 27015 27055
)
"m_elab.ml" 615 21337 21374 "m_elab.ml" 615 21337 21395
type(
  ?temp:bool ->
  Expr.Fmt.ctx -> Format.formatter -> Expr.T.hyp -> Expr.Fmt.ctx
)
ident(
  int_ref Expr.Fmt.pp_print_hyp "expr.mli" 409 10456 10460 "expr.mli" 412 10542 10557
)
"m_elab.ml" 615 21337 21397 "m_elab.ml" 615 21337 21398
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 608 21000 21017 "m_elab.ml" 608 21000 21018
)
"m_elab.ml" 615 21337 21400 "m_elab.ml" 615 21337 21407
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 615 21337 21396 "m_elab.ml" 615 21337 21408
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 615 21337 21409 "m_elab.ml" 615 21337 21411
type(
  Format.formatter
)
ident(
  int_ref ff "m_elab.ml" 615 21337 21360 "m_elab.ml" 615 21337 21362
)
"m_elab.ml" 615 21337 21412 "m_elab.ml" 615 21337 21413
type(
  Expr.T.hyp
)
ident(
  int_ref e "m_elab.ml" 612 21185 21203 "m_elab.ml" 612 21185 21204
)
"m_elab.ml" 615 21337 21373 "m_elab.ml" 615 21337 21414
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 615 21337 21366 "m_elab.ml" 615 21337 21414
type(
  unit
)
"m_elab.ml" 615 21337 21355 "m_elab.ml" 615 21337 21415
type(
  Format.formatter -> unit
)
"m_elab.ml" 614 21250 21266 "m_elab.ml" 615 21337 21415
type(
  unit
)
"m_elab.ml" 613 21212 21226 "m_elab.ml" 615 21337 21415
type(
  unit
)
"m_elab.ml" 616 21418 21432 "m_elab.ml" 616 21418 21440
type(
  string -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 616 21418 21441 "m_elab.ml" 616 21418 21466
type(
  string
)
"m_elab.ml" 616 21418 21432 "m_elab.ml" 616 21418 21466
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 613 21212 21226 "m_elab.ml" 616 21418 21468
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 617 21469 21481 "m_elab.ml" 617 21469 21485
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 617 21469 21489 "m_elab.ml" 617 21469 21490
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 608 21000 21017 "m_elab.ml" 608 21000 21018
)
"m_elab.ml" 609 21034 21045 "m_elab.ml" 618 21491 21500
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 619 21501 21507 "m_elab.ml" 619 21501 21508
type(
  int
)
type(
  int
)
ident(
  def n "m_elab.ml" 619 21501 21512 "m_elab.ml" 622 21660 21669
)
"m_elab.ml" 619 21501 21524 "m_elab.ml" 619 21501 21535
type(
  Expr.T.hyp Deque.dq -> (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
ident(
  int_ref Deque.front "deque.mli" 14 253 253 "deque.mli" 14 253 293
)
"m_elab.ml" 619 21501 21536 "m_elab.ml" 619 21501 21537
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 608 21000 21017 "m_elab.ml" 608 21000 21018
)
"m_elab.ml" 619 21501 21524 "m_elab.ml" 619 21501 21537
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 620 21543 21559 "m_elab.ml" 620 21543 21560
type(
  Expr.T.hyp
)
ident(
  def h "m_elab.ml" 620 21543 21568 "m_elab.ml" 620 21543 21597
)
"m_elab.ml" 620 21543 21562 "m_elab.ml" 620 21543 21563
type(
  Expr.T.hyp Deque.dq
)
ident(
  def l "m_elab.ml" 620 21543 21568 "m_elab.ml" 620 21543 21597
)
"m_elab.ml" 620 21543 21558 "m_elab.ml" 620 21543 21564
type(
  Expr.T.hyp * Expr.T.hyp Deque.dq
)
"m_elab.ml" 620 21543 21553 "m_elab.ml" 620 21543 21564
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 620 21543 21568 "m_elab.ml" 620 21543 21578
type(
  Expr.T.hyp -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.cons "deque.mli" 12 187 187 "deque.mli" 12 187 219
)
"m_elab.ml" 620 21543 21579 "m_elab.ml" 620 21543 21580
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 620 21543 21559 "m_elab.ml" 620 21543 21560
)
"m_elab.ml" 620 21543 21582 "m_elab.ml" 620 21543 21586
type(
  int -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref doit "m_elab.ml" 608 21000 21010 "m_elab.ml" 608 21000 21014
)
"m_elab.ml" 620 21543 21588 "m_elab.ml" 620 21543 21589
type(
  int
)
ident(
  int_ref n "m_elab.ml" 619 21501 21507 "m_elab.ml" 619 21501 21508
)
"m_elab.ml" 620 21543 21590 "m_elab.ml" 620 21543 21591
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 620 21543 21592 "m_elab.ml" 620 21543 21593
type(
  int
)
"m_elab.ml" 620 21543 21587 "m_elab.ml" 620 21543 21594
type(
  int
)
"m_elab.ml" 620 21543 21595 "m_elab.ml" 620 21543 21596
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 620 21543 21562 "m_elab.ml" 620 21543 21563
)
"m_elab.ml" 620 21543 21581 "m_elab.ml" 620 21543 21597
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 620 21543 21568 "m_elab.ml" 620 21543 21597
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 621 21598 21608 "m_elab.ml" 621 21598 21609
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
type(
  (Expr.T.hyp * Expr.T.hyp Deque.dq) option
)
"m_elab.ml" 621 21598 21613 "m_elab.ml" 621 21598 21623
type(
  ?at:Proof.T.use_def Property.wrapped -> string -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Errors.bug "errors.mli" 41 941 941 "errors.mli" 41 941 982
)
"m_elab.ml" 621 21598 21628 "m_elab.ml" 621 21598 21630
type(
  Proof.T.use_def Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 607 20976 20995 "m_elab.ml" 607 20976 20997
)
type(
  Proof.T.use_def Property.wrapped option
)
"m_elab.ml" 621 21598 21631 "m_elab.ml" 621 21598 21659
type(
  string
)
"m_elab.ml" 621 21598 21613 "m_elab.ml" 621 21598 21659
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 619 21501 21512 "m_elab.ml" 622 21660 21669
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 608 21000 21021 "m_elab.ml" 622 21660 21669
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 624 21675 21679 "m_elab.ml" 624 21675 21683
type(
  int -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref doit "m_elab.ml" 608 21000 21010 "m_elab.ml" 608 21000 21014
)
"m_elab.ml" 625 21684 21697 "m_elab.ml" 625 21684 21699
type(
  Proof.T.use_def Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 607 20976 20995 "m_elab.ml" 607 20976 20997
)
"m_elab.ml" 625 21684 21697 "m_elab.ml" 625 21684 21704
type(
  Proof.T.use_def
)
"m_elab.ml" 626 21710 21727 "m_elab.ml" 626 21710 21728
type(
  int
)
ident(
  def n "m_elab.ml" 626 21710 21732 "m_elab.ml" 626 21710 21748
)
"m_elab.ml" 626 21710 21724 "m_elab.ml" 626 21710 21728
type(
  Proof.T.use_def
)
type(
  Proof.T.use_def
)
"m_elab.ml" 626 21710 21732 "m_elab.ml" 626 21710 21742
type(
  Expr.T.hyp Deque.dq -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 626 21710 21743 "m_elab.ml" 626 21710 21744
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 607 20976 20993 "m_elab.ml" 607 20976 20994
)
"m_elab.ml" 626 21710 21732 "m_elab.ml" 626 21710 21744
type(
  int
)
"m_elab.ml" 626 21710 21745 "m_elab.ml" 626 21710 21746
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 626 21710 21747 "m_elab.ml" 626 21710 21748
type(
  int
)
ident(
  int_ref n "m_elab.ml" 626 21710 21727 "m_elab.ml" 626 21710 21728
)
"m_elab.ml" 626 21710 21732 "m_elab.ml" 626 21710 21748
type(
  int
)
"m_elab.ml" 627 21749 21768 "m_elab.ml" 627 21749 21769
type(
  string
)
ident(
  def v "m_elab.ml" 628 21773 21789 "m_elab.ml" 630 21881 21926
)
"m_elab.ml" 627 21749 21763 "m_elab.ml" 627 21749 21769
type(
  Proof.T.use_def
)
type(
  Proof.T.use_def
)
"m_elab.ml" 628 21773 21792 "m_elab.ml" 628 21773 21793
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 628 21773 21793 "m_elab.ml" 628 21773 21807
type(
  bool ref
)
ident(
  int_ref Params.verbose "params.mli" 13 193 193 "params.mli" 13 193 215
)
"m_elab.ml" 628 21773 21792 "m_elab.ml" 628 21773 21807
type(
  bool
)
"m_elab.ml" 629 21813 21831 "m_elab.ml" 629 21813 21843
type(
  ?debug:string ->
  ?at:Proof.T.use_def Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit ->
  (string -> unit, Format.formatter, unit) format -> string -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 629 21813 21848 "m_elab.ml" 629 21813 21850
type(
  Proof.T.use_def Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 607 20976 20995 "m_elab.ml" 607 20976 20997
)
type(
  Proof.T.use_def Property.wrapped option
)
"m_elab.ml" 629 21813 21851 "m_elab.ml" 629 21813 21876
type(
  (string -> unit, Format.formatter, unit) format
)
"m_elab.ml" 629 21813 21877 "m_elab.ml" 629 21813 21878
type(
  string
)
ident(
  int_ref v "m_elab.ml" 627 21749 21768 "m_elab.ml" 627 21749 21769
)
"m_elab.ml" 629 21813 21831 "m_elab.ml" 629 21813 21878
type(
  unit
)
"m_elab.ml" 628 21773 21789 "m_elab.ml" 629 21813 21878
type(
  unit
)
"m_elab.ml" 630 21881 21897 "m_elab.ml" 630 21881 21905
type(
  string -> int
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 630 21881 21906 "m_elab.ml" 630 21881 21926
type(
  string
)
"m_elab.ml" 630 21881 21897 "m_elab.ml" 630 21881 21926
type(
  int
)
"m_elab.ml" 628 21773 21789 "m_elab.ml" 630 21881 21926
type(
  int
)
"m_elab.ml" 625 21684 21690 "m_elab.ml" 630 21881 21927
type(
  int
)
"m_elab.ml" 631 21928 21934 "m_elab.ml" 631 21928 21935
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref l "m_elab.ml" 607 20976 20993 "m_elab.ml" 607 20976 20994
)
"m_elab.ml" 624 21675 21679 "m_elab.ml" 631 21928 21935
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 608 21000 21002 "m_elab.ml" 631 21928 21935
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 634 21960 21964 "m_elab.ml" 634 21960 21976
type(
  Expr.T.expr_ Property.wrapped -> Expr.T.expr -> bool
)
ident(
  def domain_match "m_elab.ml" 641 22155 22155 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 634 21960 21977 "m_elab.ml" 634 21960 21978
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def f "m_elab.ml" 634 21960 21979 "m_elab.ml" 638 22116 22130
)
"m_elab.ml" 634 21960 21979 "m_elab.ml" 634 21960 21983
type(
  Expr.T.expr
)
ident(
  def hran "m_elab.ml" 634 21960 21986 "m_elab.ml" 638 22116 22130
)
"m_elab.ml" 634 21960 21992 "m_elab.ml" 634 21960 21993
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  int_ref f "m_elab.ml" 634 21960 21977 "m_elab.ml" 634 21960 21978
)
"m_elab.ml" 634 21960 21992 "m_elab.ml" 634 21960 21998
type(
  Expr.T.expr_
)
"m_elab.ml" 635 22004 22032 "m_elab.ml" 635 22004 22043
type(
  Builtin.builtin
)
"m_elab.ml" 635 22004 22023 "m_elab.ml" 635 22004 22043
type(
  Expr.T.expr_
)
"m_elab.ml" 635 22004 22015 "m_elab.ml" 635 22004 22044
type(
  Expr.T.expr
)
"m_elab.ml" 635 22004 22058 "m_elab.ml" 635 22004 22059
type(
  int
)
"m_elab.ml" 635 22004 22055 "m_elab.ml" 635 22004 22059
type(
  Expr.T.expr_
)
"m_elab.ml" 635 22004 22047 "m_elab.ml" 635 22004 22060
type(
  Expr.T.expr
)
"m_elab.ml" 635 22004 22063 "m_elab.ml" 635 22004 22066
type(
  Expr.T.expr
)
ident(
  def ran "m_elab.ml" 636 22069 22080 "m_elab.ml" 637 22105 22115
)
"m_elab.ml" 635 22004 22046 "m_elab.ml" 635 22004 22067
type(
  Expr.T.expr list
)
"m_elab.ml" 635 22004 22008 "m_elab.ml" 635 22004 22068
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 636 22069 22080 "m_elab.ml" 636 22069 22092
type(
  Expr.T.expr -> Expr.T.expr -> bool
)
ident(
  int_ref Expr.Eq.expr "expr.mli" 586 15497 15501 "expr.mli" 587 15511 15539
)
"m_elab.ml" 636 22069 22093 "m_elab.ml" 636 22069 22097
type(
  Expr.T.expr
)
ident(
  int_ref hran "m_elab.ml" 634 21960 21979 "m_elab.ml" 634 21960 21983
)
"m_elab.ml" 636 22069 22098 "m_elab.ml" 636 22069 22101
type(
  Expr.T.expr
)
ident(
  int_ref ran "m_elab.ml" 635 22004 22063 "m_elab.ml" 635 22004 22066
)
"m_elab.ml" 636 22069 22080 "m_elab.ml" 636 22069 22101
type(
  bool
)
"m_elab.ml" 637 22105 22111 "m_elab.ml" 637 22105 22115
type(
  bool
)
"m_elab.ml" 638 22116 22120 "m_elab.ml" 638 22116 22121
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 638 22116 22125 "m_elab.ml" 638 22116 22130
type(
  bool
)
"m_elab.ml" 634 21960 21986 "m_elab.ml" 638 22116 22130
type(
  bool
)
"m_elab.ml" 641 22155 22159 "m_elab.ml" 641 22155 22167
type(
  Expr.T.visibility ->
  Expr.T.expr ->
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def set_expr "m_elab.ml" 665 22969 22969 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 641 22155 22168 "m_elab.ml" 641 22155 22171
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 641 22155 22172 "m_elab.ml" 662 22959 22966
)
"m_elab.ml" 641 22155 22172 "m_elab.ml" 641 22155 22173
type(
  Expr.T.expr
)
ident(
  def f "m_elab.ml" 641 22155 22174 "m_elab.ml" 662 22959 22966
)
"m_elab.ml" 641 22155 22174 "m_elab.ml" 641 22155 22176
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def cx "m_elab.ml" 642 22179 22181 "m_elab.ml" 662 22959 22966
)
"m_elab.ml" 642 22179 22185 "m_elab.ml" 642 22179 22189
type(
  bool ref
)
ident(
  def succ "m_elab.ml" 643 22205 22207 "m_elab.ml" 662 22959 22966
)
"m_elab.ml" 642 22179 22192 "m_elab.ml" 642 22179 22195
type(
  bool -> bool ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 642 22179 22196 "m_elab.ml" 642 22179 22201
type(
  bool
)
"m_elab.ml" 642 22179 22192 "m_elab.ml" 642 22179 22201
type(
  bool ref
)
"m_elab.ml" 643 22205 22215 "m_elab.ml" 643 22205 22219
type(
  Expr.T.expr ->
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def doit "m_elab.ml" 643 22205 22207 "m_elab.ml" 662 22959 22966
)
"m_elab.ml" 643 22205 22220 "m_elab.ml" 643 22205 22221
type(
  Expr.T.expr
)
ident(
  def f "m_elab.ml" 643 22205 22222 "m_elab.ml" 656 22702 22737
)
"m_elab.ml" 643 22205 22222 "m_elab.ml" 643 22205 22224
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def hs "m_elab.ml" 643 22205 22227 "m_elab.ml" 656 22702 22737
)
"m_elab.ml" 643 22205 22233 "m_elab.ml" 643 22205 22244
type(
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  (Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq)
  option
)
ident(
  int_ref Deque.front "deque.mli" 14 253 253 "deque.mli" 14 253 293
)
"m_elab.ml" 643 22205 22245 "m_elab.ml" 643 22205 22247
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref hs "m_elab.ml" 643 22205 22222 "m_elab.ml" 643 22205 22224
)
"m_elab.ml" 643 22205 22233 "m_elab.ml" 643 22205 22247
type(
  (Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq)
  option
)
"m_elab.ml" 644 22253 22259 "m_elab.ml" 644 22253 22263
type(
  (Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq)
  option
)
type(
  (Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq)
  option
)
"m_elab.ml" 644 22253 22267 "m_elab.ml" 644 22253 22278
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"m_elab.ml" 645 22279 22291 "m_elab.ml" 645 22279 22292
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def h "m_elab.ml" 646 22301 22309 "m_elab.ml" 656 22702 22737
)
"m_elab.ml" 645 22279 22294 "m_elab.ml" 645 22279 22296
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def hs "m_elab.ml" 646 22301 22309 "m_elab.ml" 656 22702 22737
)
"m_elab.ml" 645 22279 22290 "m_elab.ml" 645 22279 22297
type(
  Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 645 22279 22285 "m_elab.ml" 645 22279 22297
type(
  (Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq)
  option
)
type(
  (Expr.T.hyp_ Property.wrapped * Expr.T.hyp_ Property.wrapped Deque.dq)
  option
)
"m_elab.ml" 646 22301 22313 "m_elab.ml" 646 22301 22314
type(
  Expr.T.expr
)
ident(
  def f "m_elab.ml" 647 22344 22352 "m_elab.ml" 656 22702 22737
)
"m_elab.ml" 646 22301 22317 "m_elab.ml" 646 22301 22325
type(
  Expr.Subst.sub -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Subst.app_expr "expr.mli" 447 11184 11188 "expr.mli" 449 11225 11241
)
"m_elab.ml" 646 22301 22327 "m_elab.ml" 646 22301 22332
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 646 22301 22333 "m_elab.ml" 646 22301 22337
type(
  int
)
"m_elab.ml" 646 22301 22326 "m_elab.ml" 646 22301 22338
type(
  Expr.Subst.sub
)
"m_elab.ml" 646 22301 22339 "m_elab.ml" 646 22301 22340
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 643 22205 22220 "m_elab.ml" 643 22205 22221
)
"m_elab.ml" 646 22301 22317 "m_elab.ml" 646 22301 22340
type(
  Expr.T.expr
)
"m_elab.ml" 647 22344 22356 "m_elab.ml" 647 22344 22357
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def h "m_elab.ml" 656 22702 22713 "m_elab.ml" 656 22702 22737
)
"m_elab.ml" 647 22344 22372 "m_elab.ml" 647 22344 22373
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref h "m_elab.ml" 645 22279 22291 "m_elab.ml" 645 22279 22292
)
"m_elab.ml" 647 22344 22372 "m_elab.ml" 647 22344 22378
type(
  Expr.T.hyp_
)
"m_elab.ml" 648 22384 22402 "m_elab.ml" 648 22384 22404
type(
  Expr.T.expr
)
ident(
  def hf "m_elab.ml" 648 22384 22419 "m_elab.ml" 650 22469 22501
)
"m_elab.ml" 648 22384 22406 "m_elab.ml" 648 22384 22408
type(
  Expr.T.visibility
)
ident(
  def hv "m_elab.ml" 648 22384 22419 "m_elab.ml" 650 22469 22501
)
"m_elab.ml" 648 22384 22410 "m_elab.ml" 648 22384 22412
type(
  Expr.T.time
)
ident(
  def tm "m_elab.ml" 648 22384 22419 "m_elab.ml" 650 22469 22501
)
"m_elab.ml" 648 22384 22396 "m_elab.ml" 648 22384 22413
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 648 22384 22419 "m_elab.ml" 648 22384 22431
type(
  Expr.T.expr -> Expr.T.expr -> bool
)
ident(
  int_ref Expr.Eq.expr "expr.mli" 586 15497 15501 "expr.mli" 587 15511 15539
)
"m_elab.ml" 648 22384 22432 "m_elab.ml" 648 22384 22434
type(
  Expr.T.expr
)
ident(
  int_ref hf "m_elab.ml" 648 22384 22402 "m_elab.ml" 648 22384 22404
)
"m_elab.ml" 648 22384 22435 "m_elab.ml" 648 22384 22436
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 646 22301 22313 "m_elab.ml" 646 22301 22314
)
"m_elab.ml" 648 22384 22419 "m_elab.ml" 648 22384 22436
type(
  bool
)
"m_elab.ml" 649 22440 22454 "m_elab.ml" 649 22440 22458
type(
  bool ref
)
ident(
  int_ref succ "m_elab.ml" 642 22179 22185 "m_elab.ml" 642 22179 22189
)
"m_elab.ml" 649 22440 22459 "m_elab.ml" 649 22440 22461
type(
  bool ref -> bool -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 649 22440 22462 "m_elab.ml" 649 22440 22466
type(
  bool
)
"m_elab.ml" 649 22440 22454 "m_elab.ml" 649 22440 22466
type(
  unit
)
"m_elab.ml" 650 22469 22489 "m_elab.ml" 650 22469 22491
type(
  Expr.T.expr
)
ident(
  int_ref hf "m_elab.ml" 648 22384 22402 "m_elab.ml" 648 22384 22404
)
"m_elab.ml" 650 22469 22493 "m_elab.ml" 650 22469 22496
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 641 22155 22168 "m_elab.ml" 641 22155 22171
)
"m_elab.ml" 650 22469 22498 "m_elab.ml" 650 22469 22500
type(
  Expr.T.time
)
ident(
  int_ref tm "m_elab.ml" 648 22384 22410 "m_elab.ml" 648 22384 22412
)
"m_elab.ml" 650 22469 22483 "m_elab.ml" 650 22469 22501
type(
  Expr.T.hyp_
)
"m_elab.ml" 649 22440 22454 "m_elab.ml" 650 22469 22501
type(
  Expr.T.hyp_
)
"m_elab.ml" 651 22502 22521 "m_elab.ml" 651 22502 22523
type(
  Util.hint
)
ident(
  def hx "m_elab.ml" 651 22502 22559 "m_elab.ml" 653 22611 22665
)
"m_elab.ml" 651 22502 22525 "m_elab.ml" 651 22502 22528
type(
  Expr.T.shape
)
ident(
  def shp "m_elab.ml" 651 22502 22559 "m_elab.ml" 653 22611 22665
)
"m_elab.ml" 651 22502 22530 "m_elab.ml" 651 22502 22532
type(
  Expr.T.kind
)
ident(
  def hk "m_elab.ml" 651 22502 22559 "m_elab.ml" 653 22611 22665
)
"m_elab.ml" 651 22502 22543 "m_elab.ml" 651 22502 22547
type(
  Expr.T.expr
)
ident(
  def hran "m_elab.ml" 651 22502 22559 "m_elab.ml" 653 22611 22665
)
"m_elab.ml" 651 22502 22549 "m_elab.ml" 651 22502 22551
type(
  Expr.T.visibility
)
ident(
  def hv "m_elab.ml" 651 22502 22559 "m_elab.ml" 653 22611 22665
)
"m_elab.ml" 651 22502 22534 "m_elab.ml" 651 22502 22552
type(
  Expr.T.hdom
)
"m_elab.ml" 651 22502 22514 "m_elab.ml" 651 22502 22553
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 651 22502 22559 "m_elab.ml" 651 22502 22571
type(
  Expr.T.expr -> Expr.T.expr -> bool
)
ident(
  int_ref domain_match "m_elab.ml" 634 21960 21964 "m_elab.ml" 634 21960 21976
)
"m_elab.ml" 651 22502 22572 "m_elab.ml" 651 22502 22573
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 646 22301 22313 "m_elab.ml" 646 22301 22314
)
"m_elab.ml" 651 22502 22574 "m_elab.ml" 651 22502 22578
type(
  Expr.T.expr
)
ident(
  int_ref hran "m_elab.ml" 651 22502 22543 "m_elab.ml" 651 22502 22547
)
"m_elab.ml" 651 22502 22559 "m_elab.ml" 651 22502 22578
type(
  bool
)
"m_elab.ml" 652 22582 22596 "m_elab.ml" 652 22582 22600
type(
  bool ref
)
ident(
  int_ref succ "m_elab.ml" 642 22179 22185 "m_elab.ml" 642 22179 22189
)
"m_elab.ml" 652 22582 22601 "m_elab.ml" 652 22582 22603
type(
  bool ref -> bool -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 652 22582 22604 "m_elab.ml" 652 22582 22608
type(
  bool
)
"m_elab.ml" 652 22582 22596 "m_elab.ml" 652 22582 22608
type(
  unit
)
"m_elab.ml" 653 22611 22632 "m_elab.ml" 653 22611 22634
type(
  Util.hint
)
ident(
  int_ref hx "m_elab.ml" 651 22502 22521 "m_elab.ml" 651 22502 22523
)
"m_elab.ml" 653 22611 22636 "m_elab.ml" 653 22611 22639
type(
  Expr.T.shape
)
ident(
  int_ref shp "m_elab.ml" 651 22502 22525 "m_elab.ml" 651 22502 22528
)
"m_elab.ml" 653 22611 22641 "m_elab.ml" 653 22611 22643
type(
  Expr.T.kind
)
ident(
  int_ref hk "m_elab.ml" 651 22502 22530 "m_elab.ml" 651 22502 22532
)
"m_elab.ml" 653 22611 22654 "m_elab.ml" 653 22611 22658
type(
  Expr.T.expr
)
ident(
  int_ref hran "m_elab.ml" 651 22502 22543 "m_elab.ml" 651 22502 22547
)
"m_elab.ml" 653 22611 22660 "m_elab.ml" 653 22611 22663
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 641 22155 22168 "m_elab.ml" 641 22155 22171
)
"m_elab.ml" 653 22611 22645 "m_elab.ml" 653 22611 22664
type(
  Expr.T.hdom
)
"m_elab.ml" 653 22611 22625 "m_elab.ml" 653 22611 22665
type(
  Expr.T.hyp_
)
"m_elab.ml" 652 22582 22596 "m_elab.ml" 653 22611 22665
type(
  Expr.T.hyp_
)
"m_elab.ml" 654 22666 22678 "m_elab.ml" 654 22666 22679
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
ident(
  def h "m_elab.ml" 654 22666 22683 "m_elab.ml" 654 22666 22684
)
"m_elab.ml" 654 22666 22683 "m_elab.ml" 654 22666 22684
type(
  Expr.T.hyp_
)
ident(
  int_ref h "m_elab.ml" 654 22666 22678 "m_elab.ml" 654 22666 22679
)
"m_elab.ml" 647 22344 22360 "m_elab.ml" 655 22685 22696
type(
  Expr.T.hyp_
)
"m_elab.ml" 655 22685 22697 "m_elab.ml" 655 22685 22699
type(
  Expr.T.hyp_ -> Expr.T.hyp_ Property.wrapped -> Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 655 22685 22700 "m_elab.ml" 655 22685 22701
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref h "m_elab.ml" 645 22279 22291 "m_elab.ml" 645 22279 22292
)
"m_elab.ml" 647 22344 22360 "m_elab.ml" 655 22685 22701
type(
  Expr.T.hyp_ Property.wrapped
)
"m_elab.ml" 656 22702 22713 "m_elab.ml" 656 22702 22723
type(
  Expr.T.hyp_ Property.wrapped ->
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref Deque.cons "deque.mli" 12 187 187 "deque.mli" 12 187 219
)
"m_elab.ml" 656 22702 22724 "m_elab.ml" 656 22702 22725
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref h "m_elab.ml" 647 22344 22356 "m_elab.ml" 647 22344 22357
)
"m_elab.ml" 656 22702 22727 "m_elab.ml" 656 22702 22731
type(
  Expr.T.expr ->
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref doit "m_elab.ml" 643 22205 22215 "m_elab.ml" 643 22205 22219
)
"m_elab.ml" 656 22702 22732 "m_elab.ml" 656 22702 22733
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 646 22301 22313 "m_elab.ml" 646 22301 22314
)
"m_elab.ml" 656 22702 22734 "m_elab.ml" 656 22702 22736
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref hs "m_elab.ml" 645 22279 22294 "m_elab.ml" 645 22279 22296
)
"m_elab.ml" 656 22702 22726 "m_elab.ml" 656 22702 22737
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 656 22702 22713 "m_elab.ml" 656 22702 22737
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 647 22344 22352 "m_elab.ml" 656 22702 22737
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 646 22301 22309 "m_elab.ml" 656 22702 22737
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 643 22205 22227 "m_elab.ml" 656 22702 22737
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 658 22743 22749 "m_elab.ml" 658 22743 22751
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  def cx "m_elab.ml" 659 22791 22795 "m_elab.ml" 662 22959 22966
)
"m_elab.ml" 658 22743 22754 "m_elab.ml" 658 22743 22763
type(
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref Deque.rev "deque.mli" 16 335 335 "deque.mli" 16 335 361
)
"m_elab.ml" 658 22743 22765 "m_elab.ml" 658 22743 22769
type(
  Expr.T.expr ->
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref doit "m_elab.ml" 643 22205 22215 "m_elab.ml" 643 22205 22219
)
"m_elab.ml" 658 22743 22770 "m_elab.ml" 658 22743 22771
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 641 22155 22172 "m_elab.ml" 641 22155 22173
)
"m_elab.ml" 658 22743 22773 "m_elab.ml" 658 22743 22782
type(
  Expr.T.hyp_ Property.wrapped Deque.dq ->
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref Deque.rev "deque.mli" 16 335 335 "deque.mli" 16 335 361
)
"m_elab.ml" 658 22743 22783 "m_elab.ml" 658 22743 22785
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 641 22155 22174 "m_elab.ml" 641 22155 22176
)
"m_elab.ml" 658 22743 22772 "m_elab.ml" 658 22743 22786
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 658 22743 22764 "m_elab.ml" 658 22743 22787
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 658 22743 22754 "m_elab.ml" 658 22743 22787
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 659 22791 22798 "m_elab.ml" 659 22791 22799
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 659 22791 22799 "m_elab.ml" 659 22791 22803
type(
  bool ref
)
ident(
  int_ref succ "m_elab.ml" 642 22179 22185 "m_elab.ml" 642 22179 22189
)
"m_elab.ml" 659 22791 22798 "m_elab.ml" 659 22791 22803
type(
  bool
)
"m_elab.ml" 659 22791 22809 "m_elab.ml" 659 22791 22811
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 658 22743 22749 "m_elab.ml" 658 22743 22751
)
"m_elab.ml" 660 22823 22829 "m_elab.ml" 660 22823 22841
type(
  ?debug:string ->
  ?at:Expr.T.expr ->
  ?prefix:string ->
  ?nonl:unit -> (unit, Format.formatter, unit) format -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 660 22823 22846 "m_elab.ml" 660 22823 22847
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 641 22155 22172 "m_elab.ml" 641 22155 22173
)
type(
  Expr.T.expr option
)
"m_elab.ml" 660 22823 22848 "m_elab.ml" 660 22823 22920
type(
  (unit, Format.formatter, unit) format
)
"m_elab.ml" 660 22823 22829 "m_elab.ml" 660 22823 22920
type(
  unit
)
"m_elab.ml" 661 22923 22929 "m_elab.ml" 661 22923 22937
type(
  string -> Expr.T.hyp_ Property.wrapped Deque.dq
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 661 22923 22938 "m_elab.ml" 661 22923 22958
type(
  string
)
"m_elab.ml" 661 22923 22929 "m_elab.ml" 661 22923 22958
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 659 22791 22817 "m_elab.ml" 662 22959 22966
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 659 22791 22795 "m_elab.ml" 662 22959 22966
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 658 22743 22745 "m_elab.ml" 662 22959 22966
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 643 22205 22207 "m_elab.ml" 662 22959 22966
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 642 22179 22181 "m_elab.ml" 662 22959 22966
type(
  Expr.T.hyp_ Property.wrapped Deque.dq
)
"m_elab.ml" 665 22969 22973 "m_elab.ml" 665 22969 22997
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  def check_enabled_axioms_map "m_elab.ml" 953 34623 34623 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 665 22969 23008 "m_elab.ml" 665 22969 23012
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
"m_elab.ml" 669 23127 23144 "m_elab.ml" 669 23127 23147
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 669 23127 23148 "m_elab.ml" 681 23645 23653
)
"m_elab.ml" 669 23127 23148 "m_elab.ml" 669 23127 23150
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 669 23127 23153 "m_elab.ml" 681 23645 23653
)
"m_elab.ml" 669 23127 23157 "m_elab.ml" 669 23127 23159
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 681 23645 23651 "m_elab.ml" 681 23645 23653
)
"m_elab.ml" 669 23127 23168 "m_elab.ml" 669 23127 23170
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 669 23127 23148 "m_elab.ml" 669 23127 23150
)
"m_elab.ml" 669 23127 23168 "m_elab.ml" 669 23127 23175
type(
  Proof.T.proof_
)
"m_elab.ml" 670 23181 23197 "m_elab.ml" 670 23181 23198
type(
  Proof.T.omission
)
"m_elab.ml" 670 23181 23189 "m_elab.ml" 670 23181 23198
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 670 23181 23207 "m_elab.ml" 670 23181 23208
type(
  string
)
"m_elab.ml" 670 23181 23201 "m_elab.ml" 670 23181 23208
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 670 23181 23189 "m_elab.ml" 670 23181 23208
type(
  Proof.T.proof_
)
"m_elab.ml" 670 23181 23212 "m_elab.ml" 670 23181 23214
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 669 23127 23148 "m_elab.ml" 669 23127 23150
)
"m_elab.ml" 671 23215 23223 "m_elab.ml" 671 23215 23230
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 672 23234 23244 "m_elab.ml" 672 23234 23248
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 672 23234 23244 "m_elab.ml" 672 23234 23261
type(
  Proof.T.proof ->
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof
)
"m_elab.ml" 672 23234 23262 "m_elab.ml" 672 23234 23264
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 669 23127 23148 "m_elab.ml" 669 23127 23150
)
"m_elab.ml" 672 23234 23265 "m_elab.ml" 672 23234 23268
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 669 23127 23144 "m_elab.ml" 669 23127 23147
)
"m_elab.ml" 672 23234 23276 "m_elab.ml" 672 23234 23278
type(
  Expr.T.expr list
)
"m_elab.ml" 672 23234 23285 "m_elab.ml" 672 23234 23287
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 672 23234 23269 "m_elab.ml" 672 23234 23288
type(
  Proof.T.usable
)
"m_elab.ml" 672 23234 23289 "m_elab.ml" 672 23234 23294
type(
  bool
)
"m_elab.ml" 672 23234 23244 "m_elab.ml" 672 23234 23294
type(
  Proof.T.proof
)
"m_elab.ml" 673 23295 23307 "m_elab.ml" 673 23295 23313
type(
  Proof.T.usable
)
ident(
  def usable "m_elab.ml" 674 23323 23333 "m_elab.ml" 675 23384 23429
)
"m_elab.ml" 673 23295 23315 "m_elab.ml" 673 23295 23318
type(
  bool
)
ident(
  def onl "m_elab.ml" 674 23323 23333 "m_elab.ml" 675 23384 23429
)
"m_elab.ml" 673 23295 23303 "m_elab.ml" 673 23295 23319
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 674 23323 23337 "m_elab.ml" 674 23323 23339
type(
  Proof.T.proof_ Property.wrapped
)
ident(
  def pf "m_elab.ml" 675 23384 23394 "m_elab.ml" 675 23384 23429
)
"m_elab.ml" 674 23323 23346 "m_elab.ml" 674 23323 23350
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 674 23323 23346 "m_elab.ml" 674 23323 23357
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable
)
"m_elab.ml" 674 23323 23358 "m_elab.ml" 674 23323 23361
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 669 23127 23144 "m_elab.ml" 669 23127 23147
)
"m_elab.ml" 674 23323 23362 "m_elab.ml" 674 23323 23368
type(
  Proof.T.usable
)
ident(
  int_ref usable "m_elab.ml" 673 23295 23307 "m_elab.ml" 673 23295 23313
)
"m_elab.ml" 674 23323 23346 "m_elab.ml" 674 23323 23368
type(
  Proof.T.usable
)
"m_elab.ml" 674 23323 23370 "m_elab.ml" 674 23323 23373
type(
  bool
)
ident(
  int_ref onl "m_elab.ml" 673 23295 23315 "m_elab.ml" 673 23295 23318
)
"m_elab.ml" 674 23323 23342 "m_elab.ml" 674 23323 23374
type(
  Proof.T.proof_
)
"m_elab.ml" 674 23323 23375 "m_elab.ml" 674 23323 23377
type(
  Proof.T.proof_ -> Proof.T.proof -> Proof.T.proof_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 674 23323 23378 "m_elab.ml" 674 23323 23380
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 669 23127 23148 "m_elab.ml" 669 23127 23150
)
"m_elab.ml" 674 23323 23342 "m_elab.ml" 674 23323 23380
type(
  Proof.T.proof_ Property.wrapped
)
"m_elab.ml" 675 23384 23394 "m_elab.ml" 675 23384 23398
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 675 23384 23394 "m_elab.ml" 675 23384 23411
type(
  Proof.T.proof ->
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof
)
"m_elab.ml" 675 23384 23412 "m_elab.ml" 675 23384 23414
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 674 23323 23337 "m_elab.ml" 674 23323 23339
)
"m_elab.ml" 675 23384 23415 "m_elab.ml" 675 23384 23418
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 669 23127 23144 "m_elab.ml" 669 23127 23147
)
"m_elab.ml" 675 23384 23419 "m_elab.ml" 675 23384 23425
type(
  Proof.T.usable
)
ident(
  int_ref usable "m_elab.ml" 673 23295 23307 "m_elab.ml" 673 23295 23313
)
"m_elab.ml" 675 23384 23426 "m_elab.ml" 675 23384 23429
type(
  bool
)
ident(
  int_ref onl "m_elab.ml" 673 23295 23315 "m_elab.ml" 673 23295 23318
)
"m_elab.ml" 675 23384 23394 "m_elab.ml" 675 23384 23429
type(
  Proof.T.proof
)
"m_elab.ml" 674 23323 23333 "m_elab.ml" 675 23384 23429
type(
  Proof.T.proof
)
"m_elab.ml" 676 23430 23445 "m_elab.ml" 676 23430 23450
type(
  Proof.T.step list
)
ident(
  def inits "m_elab.ml" 677 23460 23470 "m_elab.ml" 679 23575 23635
)
"m_elab.ml" 676 23430 23452 "m_elab.ml" 676 23430 23455
type(
  Proof.T.qed_step
)
ident(
  def qed "m_elab.ml" 677 23460 23470 "m_elab.ml" 679 23575 23635
)
"m_elab.ml" 676 23430 23438 "m_elab.ml" 676 23430 23456
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 677 23460 23475 "m_elab.ml" 677 23460 23478
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 678 23513 23523 "m_elab.ml" 679 23575 23635
)
"m_elab.ml" 677 23460 23480 "m_elab.ml" 677 23460 23485
type(
  Proof.T.step list
)
ident(
  def inits "m_elab.ml" 678 23513 23523 "m_elab.ml" 679 23575 23635
)
"m_elab.ml" 677 23460 23474 "m_elab.ml" 677 23460 23486
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx * Proof.T.step list
)
"m_elab.ml" 677 23460 23489 "m_elab.ml" 677 23460 23493
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 677 23460 23489 "m_elab.ml" 677 23460 23499
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx ->
  Proof.T.step list ->
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx * Proof.T.step list
)
"m_elab.ml" 677 23460 23500 "m_elab.ml" 677 23460 23503
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 669 23127 23144 "m_elab.ml" 669 23127 23147
)
"m_elab.ml" 677 23460 23504 "m_elab.ml" 677 23460 23509
type(
  Proof.T.step list
)
ident(
  int_ref inits "m_elab.ml" 676 23430 23445 "m_elab.ml" 676 23430 23450
)
"m_elab.ml" 677 23460 23489 "m_elab.ml" 677 23460 23509
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx * Proof.T.step list
)
"m_elab.ml" 678 23513 23527 "m_elab.ml" 678 23513 23534
type(
  Proof.T.proof
)
ident(
  def qed_prf "m_elab.ml" 679 23575 23585 "m_elab.ml" 679 23575 23635
)
"m_elab.ml" 678 23513 23537 "m_elab.ml" 678 23513 23541
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 678 23513 23537 "m_elab.ml" 678 23513 23547
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof
)
"m_elab.ml" 678 23513 23548 "m_elab.ml" 678 23513 23551
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 677 23460 23475 "m_elab.ml" 677 23460 23478
)
"m_elab.ml" 678 23513 23553 "m_elab.ml" 678 23513 23566
type(
  Proof.T.qed_step -> Proof.T.proof
)
ident(
  int_ref Proof.T.get_qed_proof "proof.mli" 60 1611 1613 "proof.mli" 60 1611 1667
)
"m_elab.ml" 678 23513 23567 "m_elab.ml" 678 23513 23570
type(
  Proof.T.qed_step
)
ident(
  int_ref qed "m_elab.ml" 676 23430 23452 "m_elab.ml" 676 23430 23455
)
"m_elab.ml" 678 23513 23552 "m_elab.ml" 678 23513 23571
type(
  Proof.T.proof
)
"m_elab.ml" 678 23513 23537 "m_elab.ml" 678 23513 23571
type(
  Proof.T.proof
)
"m_elab.ml" 679 23575 23592 "m_elab.ml" 679 23575 23597
type(
  Proof.T.step list
)
ident(
  int_ref inits "m_elab.ml" 677 23460 23480 "m_elab.ml" 677 23460 23485
)
"m_elab.ml" 679 23575 23600 "m_elab.ml" 679 23575 23603
type(
  Proof.T.qed_step
)
ident(
  int_ref qed "m_elab.ml" 676 23430 23452 "m_elab.ml" 676 23430 23455
)
"m_elab.ml" 679 23575 23620 "m_elab.ml" 679 23575 23627
type(
  Proof.T.proof
)
ident(
  int_ref qed_prf "m_elab.ml" 678 23513 23527 "m_elab.ml" 678 23513 23534
)
"m_elab.ml" 679 23575 23616 "m_elab.ml" 679 23575 23627
type(
  Proof.T.qed_step_
)
"m_elab.ml" 679 23575 23599 "m_elab.ml" 679 23575 23628
type(
  Proof.T.qed_step
)
"m_elab.ml" 679 23575 23585 "m_elab.ml" 679 23575 23629
type(
  Proof.T.proof_
)
"m_elab.ml" 679 23575 23630 "m_elab.ml" 679 23575 23632
type(
  Proof.T.proof_ -> Proof.T.proof -> Proof.T.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 679 23575 23633 "m_elab.ml" 679 23575 23635
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 669 23127 23148 "m_elab.ml" 669 23127 23150
)
"m_elab.ml" 679 23575 23585 "m_elab.ml" 679 23575 23635
type(
  Proof.T.proof
)
"m_elab.ml" 678 23513 23523 "m_elab.ml" 679 23575 23635
type(
  Proof.T.proof
)
"m_elab.ml" 677 23460 23470 "m_elab.ml" 679 23575 23635
type(
  Proof.T.proof
)
"m_elab.ml" 669 23127 23162 "m_elab.ml" 679 23575 23635
type(
  Proof.T.proof
)
"m_elab.ml" 681 23645 23651 "m_elab.ml" 681 23645 23653
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 669 23127 23157 "m_elab.ml" 669 23127 23159
)
"m_elab.ml" 669 23127 23153 "m_elab.ml" 681 23645 23653
type(
  Proof.T.proof
)
"m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
type(
  int ref
)
ident(
  def level "m_elab.ml" 683 23655 23698 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 683 23655 23681 "m_elab.ml" 683 23655 23683
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 683 23655 23698 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 683 23655 23673 "m_elab.ml" 683 23655 23684
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 683 23655 23698 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 683 23655 23672 "m_elab.ml" 683 23655 23689
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
"m_elab.ml" 683 23655 23671 "m_elab.ml" 683 23655 23697
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
ident(
  def scx "m_elab.ml" 683 23655 23698 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
type(
  Proof.T.step
)
ident(
  def st "m_elab.ml" 689 23840 23848 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
type(
  string
)
ident(
  def stepnm "m_elab.ml" 691 23945 23953 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 689 23840 23861 "m_elab.ml" 689 23840 23877
type(
  ?anonid:bool -> Proof.T.stepno -> string
)
ident(
  int_ref Proof.T.string_of_stepno "proof.mli" 59 1554 1556 "proof.mli" 59 1554 1610
)
"m_elab.ml" 689 23840 23879 "m_elab.ml" 689 23840 23891
type(
  Proof.T.step -> Proof.T.stepno Property.pfuncs -> Proof.T.stepno
)
ident(
  int_ref Property.get "property.mli" 71 2383 2383 "property.mli" 71 2383 2425
)
"m_elab.ml" 689 23840 23892 "m_elab.ml" 689 23840 23894
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 689 23840 23895 "m_elab.ml" 689 23840 23905
type(
  Proof.T.stepno Property.pfuncs
)
ident(
  int_ref Proof.T.Props.step "proof.mli" 50 1247 1251 "proof.mli" 50 1247 1284
)
"m_elab.ml" 689 23840 23878 "m_elab.ml" 689 23840 23906
type(
  Proof.T.stepno
)
"m_elab.ml" 689 23840 23861 "m_elab.ml" 689 23840 23906
type(
  string
)
"m_elab.ml" 691 23945 23962 "m_elab.ml" 691 23945 23965
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"m_elab.ml" 691 23945 23967 "m_elab.ml" 691 23945 23980
type(
  StringMap.key -> (Proof.T.step * Expr.T.ctx * int) StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 691 23945 23981 "m_elab.ml" 691 23945 23987
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 691 23945 23988 "m_elab.ml" 691 23945 23990
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 683 23655 23681 "m_elab.ml" 683 23655 23683
)
"m_elab.ml" 691 23945 23966 "m_elab.ml" 691 23945 23991
type(
  bool
)
"m_elab.ml" 691 23945 23961 "m_elab.ml" 691 23945 23992
type(
  bool
)
"m_elab.ml" 691 23945 23993 "m_elab.ml" 691 23945 23995
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( || ) "stdlib.mli" 227 9492 9492 "stdlib.mli" 227 9492 9542
)
"m_elab.ml" 693 24029 24043 "m_elab.ml" 693 24029 24053
type(
  string -> int -> char
)
ident(
  int_ref Stdlib.String.get "string.mli" 121 4690 4690 "string.mli" 121 4690 4747
)
"m_elab.ml" 693 24029 24054 "m_elab.ml" 693 24029 24060
type(
  string
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 693 24029 24063 "m_elab.ml" 693 24029 24076
type(
  string -> int
)
ident(
  int_ref Stdlib.String.length "string.mli" 118 4569 4569 "string.mli" 118 4569 4619
)
"m_elab.ml" 693 24029 24077 "m_elab.ml" 693 24029 24083
type(
  string
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 693 24029 24062 "m_elab.ml" 693 24029 24084
type(
  int
)
"m_elab.ml" 693 24029 24085 "m_elab.ml" 693 24029 24086
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 693 24029 24087 "m_elab.ml" 693 24029 24088
type(
  int
)
"m_elab.ml" 693 24029 24061 "m_elab.ml" 693 24029 24089
type(
  int
)
"m_elab.ml" 693 24029 24042 "m_elab.ml" 693 24029 24090
type(
  char
)
"m_elab.ml" 693 24029 24091 "m_elab.ml" 693 24029 24092
type(
  char -> char -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 693 24029 24093 "m_elab.ml" 693 24029 24096
type(
  char
)
"m_elab.ml" 693 24029 24041 "m_elab.ml" 693 24029 24097
type(
  bool
)
"m_elab.ml" 691 23945 23960 "m_elab.ml" 693 24029 24098
type(
  bool
)
"m_elab.ml" 691 23945 23953 "m_elab.ml" 693 24029 24098
type(
  unit
)
"m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 696 24201 24209 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 694 24100 24121 "m_elab.ml" 694 24100 24134
type(
  StringMap.key -> (Proof.T.step * Expr.T.ctx * int) StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 694 24100 24135 "m_elab.ml" 694 24100 24141
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 694 24100 24142 "m_elab.ml" 694 24100 24144
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 683 23655 23681 "m_elab.ml" 683 23655 23683
)
"m_elab.ml" 694 24100 24120 "m_elab.ml" 694 24100 24145
type(
  bool
)
"m_elab.ml" 695 24151 24163 "m_elab.ml" 695 24151 24179
type(
  StringMap.key ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref StringMap.remove "map.mli" 111 4538 4542 "map.mli" 111 4538 4573
)
"m_elab.ml" 695 24151 24180 "m_elab.ml" 695 24151 24186
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 695 24151 24187 "m_elab.ml" 695 24151 24189
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 683 23655 23681 "m_elab.ml" 683 23655 23683
)
"m_elab.ml" 695 24151 24163 "m_elab.ml" 695 24151 24189
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 695 24151 24195 "m_elab.ml" 695 24151 24197
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 683 23655 23681 "m_elab.ml" 683 23655 23683
)
"m_elab.ml" 694 24100 24117 "m_elab.ml" 695 24151 24197
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 696 24201 24213 "m_elab.ml" 696 24201 24221
type(
  'a Expr.Visit.scx -> 'a Expr.Visit.scx
)
ident(
  def adj_step "m_elab.ml" 702 24437 24445 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 696 24201 24222 "m_elab.ml" 696 24201 24225
type(
  'a Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 697 24228 24238 "m_elab.ml" 700 24355 24395
)
"m_elab.ml" 697 24228 24238 "m_elab.ml" 697 24228 24252
type(
  'a Expr.Visit.scx -> Expr.T.hyp -> 'a Expr.Visit.scx
)
ident(
  int_ref Expr.Visit.adj "expr.mli" 541 13601 13603 "expr.mli" 541 13601 13637
)
"m_elab.ml" 697 24228 24253 "m_elab.ml" 697 24228 24256
type(
  'a Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 696 24201 24222 "m_elab.ml" 696 24201 24225
)
"m_elab.ml" 698 24275 24291 "m_elab.ml" 698 24275 24297
type(
  string
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 698 24275 24298 "m_elab.ml" 698 24275 24300
type(
  string -> Proof.T.step -> Util.hint
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 698 24275 24301 "m_elab.ml" 698 24275 24303
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 698 24275 24291 "m_elab.ml" 698 24275 24303
type(
  Util.hint
)
"m_elab.ml" 699 24305 24324 "m_elab.ml" 699 24305 24329
type(
  bool
)
"m_elab.ml" 699 24305 24321 "m_elab.ml" 699 24305 24329
type(
  Expr.T.expr_
)
"m_elab.ml" 699 24305 24330 "m_elab.ml" 699 24305 24332
type(
  Expr.T.expr_ -> unit Property.wrapped -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 699 24305 24333 "m_elab.ml" 699 24305 24340
type(
  unit Property.wrapped
)
ident(
  int_ref Property.nowhere "property.mli" 95 3174 3174 "property.mli" 95 3174 3200
)
"m_elab.ml" 699 24305 24321 "m_elab.ml" 699 24305 24340
type(
  Expr.T.expr
)
"m_elab.ml" 697 24228 24264 "m_elab.ml" 699 24305 24341
type(
  Expr.T.defn_
)
"m_elab.ml" 699 24305 24342 "m_elab.ml" 699 24305 24344
type(
  Expr.T.defn_ -> Proof.T.step -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 699 24305 24345 "m_elab.ml" 699 24305 24347
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 697 24228 24264 "m_elab.ml" 699 24305 24347
type(
  Expr.T.defn
)
"m_elab.ml" 700 24355 24365 "m_elab.ml" 700 24355 24371
type(
  Expr.T.time
)
"m_elab.ml" 699 24305 24349 "m_elab.ml" 700 24355 24371
type(
  Expr.T.wheredef
)
"m_elab.ml" 700 24355 24373 "m_elab.ml" 700 24355 24380
type(
  Expr.T.visibility
)
"m_elab.ml" 700 24355 24382 "m_elab.ml" 700 24355 24387
type(
  Expr.T.export
)
"m_elab.ml" 697 24228 24258 "m_elab.ml" 700 24355 24388
type(
  Expr.T.hyp_
)
"m_elab.ml" 700 24355 24389 "m_elab.ml" 700 24355 24391
type(
  Expr.T.hyp_ -> Proof.T.step -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 700 24355 24392 "m_elab.ml" 700 24355 24394
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 697 24228 24257 "m_elab.ml" 700 24355 24395
type(
  Expr.T.hyp
)
"m_elab.ml" 697 24228 24238 "m_elab.ml" 700 24355 24395
type(
  'a Expr.Visit.scx
)
"m_elab.ml" 702 24437 24453 "m_elab.ml" 702 24437 24463
type(
  'b Property.wrapped Deque.dq -> int
)
ident(
  def hyps_level "m_elab.ml" 702 24437 24445 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 702 24437 24464 "m_elab.ml" 702 24437 24466
type(
  'b Property.wrapped Deque.dq
)
ident(
  def hs "m_elab.ml" 703 24469 24481 "m_elab.ml" 708 24666 24702
)
"m_elab.ml" 703 24469 24487 "m_elab.ml" 703 24469 24498
type(
  'b Property.wrapped Deque.dq ->
  ('b Property.wrapped * 'b Property.wrapped Deque.dq) option
)
ident(
  int_ref Deque.front "deque.mli" 14 253 253 "deque.mli" 14 253 293
)
"m_elab.ml" 703 24469 24499 "m_elab.ml" 703 24469 24501
type(
  'b Property.wrapped Deque.dq
)
ident(
  int_ref hs "m_elab.ml" 702 24437 24464 "m_elab.ml" 702 24437 24466
)
"m_elab.ml" 703 24469 24487 "m_elab.ml" 703 24469 24501
type(
  ('b Property.wrapped * 'b Property.wrapped Deque.dq) option
)
"m_elab.ml" 704 24507 24521 "m_elab.ml" 704 24507 24525
type(
  ('b Property.wrapped * 'b Property.wrapped Deque.dq) option
)
type(
  ('b Property.wrapped * 'b Property.wrapped Deque.dq) option
)
"m_elab.ml" 704 24507 24529 "m_elab.ml" 704 24507 24530
type(
  int
)
"m_elab.ml" 705 24531 24551 "m_elab.ml" 705 24531 24552
type(
  'b Property.wrapped
)
ident(
  def h "m_elab.ml" 706 24561 24577 "m_elab.ml" 708 24666 24702
)
"m_elab.ml" 705 24531 24554 "m_elab.ml" 705 24531 24556
type(
  'b Property.wrapped Deque.dq
)
ident(
  def hs "m_elab.ml" 706 24561 24577 "m_elab.ml" 708 24666 24702
)
"m_elab.ml" 705 24531 24550 "m_elab.ml" 705 24531 24557
type(
  'b Property.wrapped * 'b Property.wrapped Deque.dq
)
"m_elab.ml" 705 24531 24545 "m_elab.ml" 705 24531 24557
type(
  ('b Property.wrapped * 'b Property.wrapped Deque.dq) option
)
type(
  ('b Property.wrapped * 'b Property.wrapped Deque.dq) option
)
"m_elab.ml" 706 24561 24581 "m_elab.ml" 706 24561 24588
type(
  int
)
ident(
  def h_level "m_elab.ml" 707 24618 24634 "m_elab.ml" 708 24666 24702
)
"m_elab.ml" 706 24561 24591 "m_elab.ml" 706 24561 24612
type(
  'b Property.wrapped -> int
)
ident(
  int_ref Expr.Levels.get_level "expr.mli" 696 17732 17736 "expr.mli" 697 17751 17785
)
"m_elab.ml" 706 24561 24613 "m_elab.ml" 706 24561 24614
type(
  'b Property.wrapped
)
ident(
  int_ref h "m_elab.ml" 705 24531 24551 "m_elab.ml" 705 24531 24552
)
"m_elab.ml" 706 24561 24591 "m_elab.ml" 706 24561 24614
type(
  int
)
"m_elab.ml" 707 24618 24638 "m_elab.ml" 707 24618 24646
type(
  int
)
ident(
  def hs_level "m_elab.ml" 708 24666 24682 "m_elab.ml" 708 24666 24702
)
"m_elab.ml" 707 24618 24649 "m_elab.ml" 707 24618 24659
type(
  'b Property.wrapped Deque.dq -> int
)
ident(
  int_ref hyps_level "m_elab.ml" 702 24437 24453 "m_elab.ml" 702 24437 24463
)
"m_elab.ml" 707 24618 24660 "m_elab.ml" 707 24618 24662
type(
  'b Property.wrapped Deque.dq
)
ident(
  int_ref hs "m_elab.ml" 705 24531 24554 "m_elab.ml" 705 24531 24556
)
"m_elab.ml" 707 24618 24649 "m_elab.ml" 707 24618 24662
type(
  int
)
"m_elab.ml" 708 24666 24682 "m_elab.ml" 708 24666 24685
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.max "stdlib.mli" 186 7963 7963 "stdlib.mli" 186 7963 7987
)
"m_elab.ml" 708 24666 24686 "m_elab.ml" 708 24666 24693
type(
  int
)
ident(
  int_ref h_level "m_elab.ml" 706 24561 24581 "m_elab.ml" 706 24561 24588
)
"m_elab.ml" 708 24666 24694 "m_elab.ml" 708 24666 24702
type(
  int
)
ident(
  int_ref hs_level "m_elab.ml" 707 24618 24638 "m_elab.ml" 707 24618 24646
)
"m_elab.ml" 708 24666 24682 "m_elab.ml" 708 24666 24702
type(
  int
)
"m_elab.ml" 707 24618 24634 "m_elab.ml" 708 24666 24702
type(
  int
)
"m_elab.ml" 706 24561 24577 "m_elab.ml" 708 24666 24702
type(
  int
)
"m_elab.ml" 703 24469 24481 "m_elab.ml" 708 24666 24702
type(
  int
)
"m_elab.ml" 710 24718 24732 "m_elab.ml" 710 24718 24734
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 710 24718 24732 "m_elab.ml" 710 24718 24739
type(
  Proof.T.step_
)
"m_elab.ml" 711 24745 24762 "m_elab.ml" 711 24745 24763
type(
  int
)
ident(
  def m "m_elab.ml" 712 24767 24779 "m_elab.ml" 720 25132 25163
)
"m_elab.ml" 711 24745 24755 "m_elab.ml" 711 24745 24763
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 712 24767 24783 "m_elab.ml" 712 24767 24789
type(
  int
)
ident(
  def nfacts "m_elab.ml" 713 24809 24821 "m_elab.ml" 720 25132 25163
)
"m_elab.ml" 712 24767 24792 "m_elab.ml" 712 24767 24802
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 712 24767 24803 "m_elab.ml" 712 24767 24805
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 712 24767 24792 "m_elab.ml" 712 24767 24805
type(
  int
)
"m_elab.ml" 713 24809 24825 "m_elab.ml" 713 24809 24827
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 719 25100 25112 "m_elab.ml" 720 25132 25163
)
"m_elab.ml" 713 24809 24830 "m_elab.ml" 713 24809 24839
type(
  (int -> Expr.T.hyp -> Expr.T.hyp) -> Expr.T.ctx -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.map "deque.mli" 20 481 481 "deque.mli" 20 481 528
)
"m_elab.ml" 714 24846 24875 "m_elab.ml" 714 24846 24876
type(
  int
)
ident(
  def n "m_elab.ml" 714 24846 24877 "m_elab.ml" 717 25031 25066
)
"m_elab.ml" 714 24846 24877 "m_elab.ml" 714 24846 24878
type(
  Expr.T.hyp
)
ident(
  def h "m_elab.ml" 714 24846 24882 "m_elab.ml" 717 25031 25066
)
"m_elab.ml" 714 24846 24888 "m_elab.ml" 714 24846 24889
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 714 24846 24877 "m_elab.ml" 714 24846 24878
)
"m_elab.ml" 714 24846 24888 "m_elab.ml" 714 24846 24894
type(
  Expr.T.hyp_
)
"m_elab.ml" 715 24900 24935 "m_elab.ml" 715 24900 24936
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 715 24900 24956 "m_elab.ml" 716 24974 25030
)
"m_elab.ml" 715 24900 24938 "m_elab.ml" 715 24900 24945
type(
  Expr.T.visibility
)
"m_elab.ml" 715 24900 24947 "m_elab.ml" 715 24900 24949
type(
  Expr.T.time
)
ident(
  def tm "m_elab.ml" 715 24900 24956 "m_elab.ml" 716 24974 25030
)
"m_elab.ml" 715 24900 24929 "m_elab.ml" 715 24900 24950
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 715 24900 24956 "m_elab.ml" 715 24900 24957
type(
  int
)
ident(
  int_ref m "m_elab.ml" 711 24745 24762 "m_elab.ml" 711 24745 24763
)
"m_elab.ml" 715 24900 24958 "m_elab.ml" 715 24900 24959
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 715 24900 24960 "m_elab.ml" 715 24900 24961
type(
  int
)
ident(
  int_ref n "m_elab.ml" 714 24846 24875 "m_elab.ml" 714 24846 24876
)
"m_elab.ml" 715 24900 24956 "m_elab.ml" 715 24900 24961
type(
  int
)
"m_elab.ml" 715 24900 24962 "m_elab.ml" 715 24900 24963
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( < ) "stdlib.mli" 135 5721 5721 "stdlib.mli" 135 5721 5768
)
"m_elab.ml" 715 24900 24964 "m_elab.ml" 715 24900 24970
type(
  int
)
ident(
  int_ref nfacts "m_elab.ml" 712 24767 24783 "m_elab.ml" 712 24767 24789
)
"m_elab.ml" 715 24900 24956 "m_elab.ml" 715 24900 24970
type(
  bool
)
"m_elab.ml" 716 24974 25011 "m_elab.ml" 716 24974 25012
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 715 24900 24935 "m_elab.ml" 715 24900 24936
)
"m_elab.ml" 716 24974 25014 "m_elab.ml" 716 24974 25020
type(
  Expr.T.visibility
)
"m_elab.ml" 716 24974 25022 "m_elab.ml" 716 24974 25024
type(
  Expr.T.time
)
ident(
  int_ref tm "m_elab.ml" 715 24900 24947 "m_elab.ml" 715 24900 24949
)
"m_elab.ml" 716 24974 25005 "m_elab.ml" 716 24974 25025
type(
  Expr.T.hyp_
)
"m_elab.ml" 716 24974 25026 "m_elab.ml" 716 24974 25028
type(
  Expr.T.hyp_ -> Expr.T.hyp -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 716 24974 25029 "m_elab.ml" 716 24974 25030
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 714 24846 24877 "m_elab.ml" 714 24846 24878
)
"m_elab.ml" 716 24974 25005 "m_elab.ml" 716 24974 25030
type(
  Expr.T.hyp
)
"m_elab.ml" 717 25031 25060 "m_elab.ml" 717 25031 25061
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 717 25031 25065 "m_elab.ml" 717 25031 25066
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 714 24846 24877 "m_elab.ml" 714 24846 24878
)
"m_elab.ml" 714 24846 24882 "m_elab.ml" 717 25031 25066
type(
  Expr.T.hyp
)
"m_elab.ml" 713 24809 24840 "m_elab.ml" 718 25067 25093
type(
  int -> Expr.T.hyp -> Expr.T.hyp
)
"m_elab.ml" 718 25067 25094 "m_elab.ml" 718 25067 25096
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 713 24809 24830 "m_elab.ml" 718 25067 25096
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 719 25100 25115 "m_elab.ml" 719 25100 25120
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 719 25100 25122 "m_elab.ml" 719 25100 25124
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
)
"m_elab.ml" 719 25100 25114 "m_elab.ml" 719 25100 25125
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 719 25100 25127 "m_elab.ml" 719 25100 25129
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 713 24809 24825 "m_elab.ml" 713 24809 24827
)
"m_elab.ml" 719 25100 25113 "m_elab.ml" 719 25100 25130
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 720 25132 25155 "m_elab.ml" 720 25132 25156
type(
  int
)
ident(
  int_ref m "m_elab.ml" 711 24745 24762 "m_elab.ml" 711 24745 24763
)
"m_elab.ml" 720 25132 25148 "m_elab.ml" 720 25132 25156
type(
  Proof.T.step_
)
"m_elab.ml" 720 25132 25157 "m_elab.ml" 720 25132 25159
type(
  Proof.T.step_ -> Proof.T.step -> Proof.T.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 720 25132 25160 "m_elab.ml" 720 25132 25162
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 720 25132 25148 "m_elab.ml" 720 25132 25162
type(
  Proof.T.step
)
"m_elab.ml" 719 25100 25112 "m_elab.ml" 720 25132 25163
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 713 24809 24821 "m_elab.ml" 720 25132 25163
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 712 24767 24779 "m_elab.ml" 720 25132 25163
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 721 25164 25179 "m_elab.ml" 721 25164 25186
type(
  Proof.T.usable
)
ident(
  def usables "m_elab.ml" 722 25190 25202 "m_elab.ml" 725 25370 25405
)
"m_elab.ml" 721 25164 25174 "m_elab.ml" 721 25164 25186
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 722 25190 25206 "m_elab.ml" 722 25190 25208
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 723 25263 25275 "m_elab.ml" 725 25370 25405
)
"m_elab.ml" 722 25190 25211 "m_elab.ml" 722 25190 25225
type(
  (Expr.T.ctx -> Proof.T.use_def Property.wrapped -> Expr.T.ctx) ->
  Expr.T.ctx -> Proof.T.use_def Property.wrapped list -> Expr.T.ctx
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"m_elab.ml" 722 25190 25227 "m_elab.ml" 722 25190 25235
type(
  Expr.T.visibility ->
  Expr.T.ctx -> Proof.T.use_def Property.wrapped -> Expr.T.ctx
)
ident(
  int_ref set_defn "m_elab.ml" 607 20976 20980 "m_elab.ml" 607 20976 20988
)
"m_elab.ml" 722 25190 25236 "m_elab.ml" 722 25190 25242
type(
  Expr.T.visibility
)
"m_elab.ml" 722 25190 25226 "m_elab.ml" 722 25190 25243
type(
  Expr.T.ctx -> Proof.T.use_def Property.wrapped -> Expr.T.ctx
)
"m_elab.ml" 722 25190 25244 "m_elab.ml" 722 25190 25246
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 722 25190 25247 "m_elab.ml" 722 25190 25254
type(
  Proof.T.usable
)
ident(
  int_ref usables "m_elab.ml" 721 25164 25179 "m_elab.ml" 721 25164 25186
)
"m_elab.ml" 722 25190 25247 "m_elab.ml" 722 25190 25259
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 722 25190 25211 "m_elab.ml" 722 25190 25259
type(
  Expr.T.ctx
)
"m_elab.ml" 723 25263 25279 "m_elab.ml" 723 25263 25281
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 724 25338 25350 "m_elab.ml" 725 25370 25405
)
"m_elab.ml" 723 25263 25284 "m_elab.ml" 723 25263 25299
type(
  (Expr.T.expr -> Expr.T.ctx -> Expr.T.ctx) ->
  Expr.T.expr list -> Expr.T.ctx -> Expr.T.ctx
)
ident(
  int_ref Ext.List.fold_right "ext.mli" 20 621 623 "ext.mli" 20 621 679
)
"m_elab.ml" 723 25263 25301 "m_elab.ml" 723 25263 25309
type(
  Expr.T.visibility -> Expr.T.expr -> Expr.T.ctx -> Expr.T.ctx
)
ident(
  int_ref set_expr "m_elab.ml" 641 22155 22159 "m_elab.ml" 641 22155 22167
)
"m_elab.ml" 723 25263 25310 "m_elab.ml" 723 25263 25316
type(
  Expr.T.visibility
)
"m_elab.ml" 723 25263 25300 "m_elab.ml" 723 25263 25317
type(
  Expr.T.expr -> Expr.T.ctx -> Expr.T.ctx
)
"m_elab.ml" 723 25263 25318 "m_elab.ml" 723 25263 25325
type(
  Proof.T.usable
)
ident(
  int_ref usables "m_elab.ml" 721 25164 25179 "m_elab.ml" 721 25164 25186
)
"m_elab.ml" 723 25263 25318 "m_elab.ml" 723 25263 25331
type(
  Expr.T.expr list
)
"m_elab.ml" 723 25263 25332 "m_elab.ml" 723 25263 25334
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 722 25190 25206 "m_elab.ml" 722 25190 25208
)
"m_elab.ml" 723 25263 25284 "m_elab.ml" 723 25263 25334
type(
  Expr.T.ctx
)
"m_elab.ml" 724 25338 25353 "m_elab.ml" 724 25338 25358
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 724 25338 25360 "m_elab.ml" 724 25338 25362
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
)
"m_elab.ml" 724 25338 25352 "m_elab.ml" 724 25338 25363
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 724 25338 25365 "m_elab.ml" 724 25338 25367
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 723 25263 25279 "m_elab.ml" 723 25263 25281
)
"m_elab.ml" 724 25338 25351 "m_elab.ml" 724 25338 25368
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
"m_elab.ml" 725 25370 25391 "m_elab.ml" 725 25370 25398
type(
  Proof.T.usable
)
ident(
  int_ref usables "m_elab.ml" 721 25164 25179 "m_elab.ml" 721 25164 25186
)
"m_elab.ml" 725 25370 25386 "m_elab.ml" 725 25370 25398
type(
  Proof.T.step_
)
"m_elab.ml" 725 25370 25399 "m_elab.ml" 725 25370 25401
type(
  Proof.T.step_ -> Proof.T.step -> Proof.T.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 725 25370 25402 "m_elab.ml" 725 25370 25404
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 725 25370 25386 "m_elab.ml" 725 25370 25404
type(
  Proof.T.step
)
"m_elab.ml" 724 25338 25350 "m_elab.ml" 725 25370 25405
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx) *
  Proof.T.step
)
"m_elab.ml" 723 25263 25275 "m_elab.ml" 725 25370 25405
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx) *
  Proof.T.step
)
"m_elab.ml" 722 25190 25202 "m_elab.ml" 725 25370 25405
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 726 25406 25429 "m_elab.ml" 726 25406 25431
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 726 25406 25442 "m_elab.ml" 726 25406 25443
type(
  Expr.T.expr
)
ident(
  def f "m_elab.ml" 727 25456 25468 "m_elab.ml" 730 25586 25645
)
"m_elab.ml" 726 25406 25441 "m_elab.ml" 726 25406 25444
type(
  Expr.T.expr list
)
"m_elab.ml" 726 25406 25421 "m_elab.ml" 726 25406 25445
type(
  Proof.T.usable
)
"m_elab.ml" 726 25406 25447 "m_elab.ml" 726 25406 25451
type(
  bool
)
ident(
  def only "m_elab.ml" 727 25456 25468 "m_elab.ml" 730 25586 25645
)
"m_elab.ml" 726 25406 25416 "m_elab.ml" 726 25406 25452
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 727 25456 25472 "m_elab.ml" 727 25456 25474
type(
  Expr.T.time
)
ident(
  def tm "m_elab.ml" 728 25487 25499 "m_elab.ml" 730 25586 25645
)
"m_elab.ml" 727 25456 25477 "m_elab.ml" 727 25456 25483
type(
  Expr.T.time
)
"m_elab.ml" 728 25487 25503 "m_elab.ml" 728 25487 25505
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 729 25554 25566 "m_elab.ml" 730 25586 25645
)
"m_elab.ml" 728 25487 25508 "m_elab.ml" 728 25487 25518
type(
  Expr.T.ctx -> Expr.T.hyp -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.snoc "deque.mli" 13 220 220 "deque.mli" 13 220 252
)
"m_elab.ml" 728 25487 25519 "m_elab.ml" 728 25487 25521
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 728 25487 25529 "m_elab.ml" 728 25487 25530
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 726 25406 25442 "m_elab.ml" 726 25406 25443
)
"m_elab.ml" 728 25487 25532 "m_elab.ml" 728 25487 25539
type(
  Expr.T.visibility
)
"m_elab.ml" 728 25487 25541 "m_elab.ml" 728 25487 25543
type(
  Expr.T.time
)
ident(
  int_ref tm "m_elab.ml" 727 25456 25472 "m_elab.ml" 727 25456 25474
)
"m_elab.ml" 728 25487 25523 "m_elab.ml" 728 25487 25544
type(
  Expr.T.hyp_
)
"m_elab.ml" 728 25487 25545 "m_elab.ml" 728 25487 25547
type(
  Expr.T.hyp_ -> Expr.T.expr -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 728 25487 25548 "m_elab.ml" 728 25487 25549
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 726 25406 25442 "m_elab.ml" 726 25406 25443
)
"m_elab.ml" 728 25487 25522 "m_elab.ml" 728 25487 25550
type(
  Expr.T.hyp
)
"m_elab.ml" 728 25487 25508 "m_elab.ml" 728 25487 25550
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 729 25554 25569 "m_elab.ml" 729 25554 25574
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 729 25554 25576 "m_elab.ml" 729 25554 25578
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
)
"m_elab.ml" 729 25554 25568 "m_elab.ml" 729 25554 25579
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 729 25554 25581 "m_elab.ml" 729 25554 25583
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 728 25487 25503 "m_elab.ml" 728 25487 25505
)
"m_elab.ml" 729 25554 25567 "m_elab.ml" 729 25554 25584
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 730 25586 25615 "m_elab.ml" 730 25586 25617
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 730 25586 25628 "m_elab.ml" 730 25586 25629
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 726 25406 25442 "m_elab.ml" 726 25406 25443
)
"m_elab.ml" 730 25586 25627 "m_elab.ml" 730 25586 25630
type(
  Expr.T.expr list
)
"m_elab.ml" 730 25586 25607 "m_elab.ml" 730 25586 25631
type(
  Proof.T.usable
)
"m_elab.ml" 730 25586 25633 "m_elab.ml" 730 25586 25637
type(
  bool
)
ident(
  int_ref only "m_elab.ml" 726 25406 25447 "m_elab.ml" 726 25406 25451
)
"m_elab.ml" 730 25586 25602 "m_elab.ml" 730 25586 25638
type(
  Proof.T.step_
)
"m_elab.ml" 730 25586 25639 "m_elab.ml" 730 25586 25641
type(
  Proof.T.step_ -> Proof.T.step -> Proof.T.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 730 25586 25642 "m_elab.ml" 730 25586 25644
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 730 25586 25602 "m_elab.ml" 730 25586 25644
type(
  Proof.T.step
)
"m_elab.ml" 729 25554 25566 "m_elab.ml" 730 25586 25645
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 728 25487 25499 "m_elab.ml" 730 25586 25645
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 727 25456 25468 "m_elab.ml" 730 25586 25645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 731 25646 25664 "m_elab.ml" 731 25646 25666
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 733 25725 25737 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 731 25646 25668 "m_elab.ml" 731 25646 25671
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 733 25725 25737 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 731 25646 25656 "m_elab.ml" 731 25646 25672
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 733 25725 25741 "m_elab.ml" 733 25725 25748
type(
  Expr.T.expr
)
ident(
  def sq_expr "m_elab.ml" 734 25806 25818 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 733 25725 25751 "m_elab.ml" 733 25725 25776
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Levels.compute_level "expr.mli" 712 18148 18152 "expr.mli" 713 18171 18198
)
"m_elab.ml" 733 25725 25777 "m_elab.ml" 733 25725 25779
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 733 25725 25781 "m_elab.ml" 733 25725 25788
type(
  Expr.T.expr_ -> Expr.T.expr
)
ident(
  int_ref Property.noprops "property.mli" 92 3086 3086 "property.mli" 92 3086 3116
)
"m_elab.ml" 733 25725 25798 "m_elab.ml" 733 25725 25800
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 731 25646 25664 "m_elab.ml" 731 25646 25666
)
"m_elab.ml" 733 25725 25789 "m_elab.ml" 733 25725 25801
type(
  Expr.T.expr_
)
"m_elab.ml" 733 25725 25780 "m_elab.ml" 733 25725 25802
type(
  Expr.T.expr
)
"m_elab.ml" 733 25725 25751 "m_elab.ml" 733 25725 25802
type(
  Expr.T.expr
)
"m_elab.ml" 734 25806 25822 "m_elab.ml" 734 25806 25824
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 738 25941 25953 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 734 25806 25833 "m_elab.ml" 734 25806 25840
type(
  Expr.T.expr
)
ident(
  int_ref sq_expr "m_elab.ml" 733 25725 25741 "m_elab.ml" 733 25725 25748
)
"m_elab.ml" 734 25806 25833 "m_elab.ml" 734 25806 25845
type(
  Expr.T.expr_
)
"m_elab.ml" 735 25851 25877 "m_elab.ml" 735 25851 25879
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 735 25851 25883 "m_elab.ml" 735 25851 25885
)
"m_elab.ml" 735 25851 25869 "m_elab.ml" 735 25851 25879
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 735 25851 25883 "m_elab.ml" 735 25851 25885
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 735 25851 25877 "m_elab.ml" 735 25851 25879
)
"m_elab.ml" 736 25886 25904 "m_elab.ml" 736 25886 25905
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 736 25886 25916 "m_elab.ml" 736 25886 25921
type(
  bool
)
"m_elab.ml" 736 25886 25909 "m_elab.ml" 736 25886 25921
type(
  Expr.T.sequent
)
"m_elab.ml" 734 25806 25827 "m_elab.ml" 736 25886 25921
type(
  Expr.T.sequent
)
"m_elab.ml" 738 25941 25957 "m_elab.ml" 738 25941 25968
type(
  int ref
)
ident(
  def proof_level "m_elab.ml" 739 25980 25992 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 738 25941 25971 "m_elab.ml" 738 25941 25974
type(
  int -> int ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 738 25941 25975 "m_elab.ml" 738 25941 25976
type(
  int
)
"m_elab.ml" 738 25941 25971 "m_elab.ml" 738 25941 25976
type(
  int ref
)
"m_elab.ml" 739 25980 25996 "m_elab.ml" 739 25980 25999
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 750 26550 26562 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 740 26002 26022 "m_elab.ml" 740 26002 26032
type(
  int
)
ident(
  def level_hyps "m_elab.ml" 742 26126 26142 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 740 26002 26035 "m_elab.ml" 740 26002 26045
type(
  Expr.T.hyp Deque.dq -> int
)
ident(
  int_ref hyps_level "m_elab.ml" 702 24437 24453 "m_elab.ml" 702 24437 24463
)
"m_elab.ml" 740 26002 26046 "m_elab.ml" 740 26002 26048
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 734 25806 25822 "m_elab.ml" 734 25806 25824
)
"m_elab.ml" 740 26002 26046 "m_elab.ml" 740 26002 26056
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 740 26002 26035 "m_elab.ml" 740 26002 26056
type(
  int
)
"m_elab.ml" 742 26126 26146 "m_elab.ml" 742 26126 26148
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 743 26199 26215 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 742 26126 26151 "m_elab.ml" 742 26126 26164
type(
  StringMap.key ->
  Proof.T.step * Expr.T.ctx * int ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref StringMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 742 26126 26165 "m_elab.ml" 742 26126 26171
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 742 26126 26173 "m_elab.ml" 742 26126 26175
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 742 26126 26177 "m_elab.ml" 742 26126 26179
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 742 26126 26181 "m_elab.ml" 742 26126 26191
type(
  int
)
ident(
  int_ref level_hyps "m_elab.ml" 740 26002 26022 "m_elab.ml" 740 26002 26032
)
"m_elab.ml" 742 26126 26172 "m_elab.ml" 742 26126 26192
type(
  Proof.T.step * Expr.T.ctx * int
)
"m_elab.ml" 742 26126 26193 "m_elab.ml" 742 26126 26195
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
)
"m_elab.ml" 742 26126 26151 "m_elab.ml" 742 26126 26195
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 743 26199 26219 "m_elab.ml" 743 26199 26222
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
ident(
  def scx "m_elab.ml" 745 26290 26306 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 743 26199 26227 "m_elab.ml" 743 26199 26238
type(
  int ref
)
ident(
  int_ref proof_level "m_elab.ml" 738 25941 25957 "m_elab.ml" 738 25941 25968
)
"m_elab.ml" 743 26199 26240 "m_elab.ml" 743 26199 26242
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 742 26126 26146 "m_elab.ml" 742 26126 26148
)
"m_elab.ml" 743 26199 26226 "m_elab.ml" 743 26199 26243
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 743 26199 26245 "m_elab.ml" 743 26199 26247
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 743 26199 26225 "m_elab.ml" 743 26199 26248
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
"m_elab.ml" 745 26290 26310 "m_elab.ml" 745 26290 26313
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 746 26366 26382 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 745 26290 26316 "m_elab.ml" 745 26290 26331
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  Expr.T.hyp list ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Expr.Visit.adjs "expr.mli" 542 13638 13640 "expr.mli" 542 13638 13679
)
"m_elab.ml" 745 26290 26332 "m_elab.ml" 745 26290 26335
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 743 26199 26219 "m_elab.ml" 743 26199 26222
)
"m_elab.ml" 745 26290 26337 "m_elab.ml" 745 26290 26350
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp list
)
ident(
  int_ref Deque.to_list "deque.mli" 35 1014 1014 "deque.mli" 35 1014 1044
)
"m_elab.ml" 745 26290 26351 "m_elab.ml" 745 26290 26353
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 734 25806 25822 "m_elab.ml" 734 25806 25824
)
"m_elab.ml" 745 26290 26351 "m_elab.ml" 745 26290 26361
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 745 26290 26336 "m_elab.ml" 745 26290 26362
type(
  Expr.T.hyp list
)
"m_elab.ml" 745 26290 26316 "m_elab.ml" 745 26290 26362
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 746 26366 26386 "m_elab.ml" 746 26366 26389
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 747 26418 26434 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 746 26366 26392 "m_elab.ml" 746 26366 26408
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  int ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 746 26366 26409 "m_elab.ml" 746 26366 26412
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 745 26290 26310 "m_elab.ml" 745 26290 26313
)
"m_elab.ml" 746 26366 26413 "m_elab.ml" 746 26366 26414
type(
  int
)
"m_elab.ml" 746 26366 26392 "m_elab.ml" 746 26366 26414
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 747 26418 26438 "m_elab.ml" 747 26418 26441
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 748 26460 26476 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 747 26418 26444 "m_elab.ml" 747 26418 26452
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 696 24201 24213 "m_elab.ml" 696 24201 24221
)
"m_elab.ml" 747 26418 26453 "m_elab.ml" 747 26418 26456
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 746 26366 26386 "m_elab.ml" 746 26366 26389
)
"m_elab.ml" 747 26418 26444 "m_elab.ml" 747 26418 26456
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 748 26460 26480 "m_elab.ml" 748 26460 26483
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 749 26512 26528 "m_elab.ml" 749 26512 26546
)
"m_elab.ml" 748 26460 26486 "m_elab.ml" 748 26460 26502
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  int ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 748 26460 26503 "m_elab.ml" 748 26460 26506
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 747 26418 26438 "m_elab.ml" 747 26418 26441
)
"m_elab.ml" 748 26460 26507 "m_elab.ml" 748 26460 26508
type(
  int
)
"m_elab.ml" 748 26460 26486 "m_elab.ml" 748 26460 26508
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 749 26512 26528 "m_elab.ml" 749 26512 26532
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 749 26512 26528 "m_elab.ml" 749 26512 26538
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  Proof.T.proof -> Proof.T.proof
)
"m_elab.ml" 749 26512 26539 "m_elab.ml" 749 26512 26542
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 748 26460 26480 "m_elab.ml" 748 26460 26483
)
"m_elab.ml" 749 26512 26543 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 731 25646 25668 "m_elab.ml" 731 25646 25671
)
"m_elab.ml" 749 26512 26528 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 748 26460 26476 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 747 26418 26434 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 746 26366 26382 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 745 26290 26306 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 743 26199 26215 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 742 26126 26142 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 740 26002 26018 "m_elab.ml" 749 26512 26546
type(
  Proof.T.proof
)
"m_elab.ml" 750 26550 26566 "m_elab.ml" 750 26550 26569
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 751 26588 26600 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 750 26550 26572 "m_elab.ml" 750 26550 26580
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 696 24201 24213 "m_elab.ml" 696 24201 24221
)
"m_elab.ml" 750 26550 26581 "m_elab.ml" 750 26550 26584
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 683 23655 23671 "m_elab.ml" 683 23655 23697
)
"m_elab.ml" 750 26550 26572 "m_elab.ml" 750 26550 26584
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 751 26588 26604 "m_elab.ml" 751 26588 26607
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 752 26636 26648 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 751 26588 26610 "m_elab.ml" 751 26588 26626
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  int ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 751 26588 26627 "m_elab.ml" 751 26588 26630
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 750 26550 26566 "m_elab.ml" 750 26550 26569
)
"m_elab.ml" 751 26588 26631 "m_elab.ml" 751 26588 26632
type(
  int
)
"m_elab.ml" 751 26588 26610 "m_elab.ml" 751 26588 26632
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 752 26636 26654 "m_elab.ml" 752 26636 26655
type(
  int ref
)
"m_elab.ml" 752 26636 26657 "m_elab.ml" 752 26636 26659
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 754 26711 26723 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 752 26636 26653 "m_elab.ml" 752 26636 26660
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 752 26636 26662 "m_elab.ml" 752 26636 26664
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 754 26711 26723 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 752 26636 26652 "m_elab.ml" 752 26636 26665
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 752 26636 26668 "m_elab.ml" 752 26636 26671
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 751 26588 26604 "m_elab.ml" 751 26588 26607
)
"m_elab.ml" 754 26711 26727 "m_elab.ml" 754 26711 26735
type(
  int
)
ident(
  def sq_level "m_elab.ml" 761 26931 26943 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 754 26711 26738 "m_elab.ml" 754 26711 26759
type(
  Expr.T.expr -> int
)
ident(
  int_ref Expr.Levels.get_level "expr.mli" 696 17732 17736 "expr.mli" 697 17751 17785
)
"m_elab.ml" 754 26711 26760 "m_elab.ml" 754 26711 26767
type(
  Expr.T.expr
)
ident(
  int_ref sq_expr "m_elab.ml" 733 25725 25741 "m_elab.ml" 733 25725 25748
)
"m_elab.ml" 754 26711 26738 "m_elab.ml" 754 26711 26767
type(
  int
)
"m_elab.ml" 761 26931 26943 "m_elab.ml" 761 26931 26948
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 761 26931 26949 "m_elab.ml" 761 26931 26951
type(
  int ref -> int -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 761 26931 26955 "m_elab.ml" 761 26931 26956
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 761 26931 26956 "m_elab.ml" 761 26931 26967
type(
  int ref
)
ident(
  int_ref proof_level "m_elab.ml" 738 25941 25957 "m_elab.ml" 738 25941 25968
)
"m_elab.ml" 761 26931 26955 "m_elab.ml" 761 26931 26967
type(
  int
)
"m_elab.ml" 761 26931 26968 "m_elab.ml" 761 26931 26969
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( < ) "stdlib.mli" 135 5721 5721 "stdlib.mli" 135 5721 5768
)
"m_elab.ml" 761 26931 26970 "m_elab.ml" 761 26931 26971
type(
  int
)
"m_elab.ml" 761 26931 26955 "m_elab.ml" 761 26931 26971
type(
  bool
)
"m_elab.ml" 762 26977 26993 "m_elab.ml" 762 26977 26994
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 762 26977 26994 "m_elab.ml" 762 26977 27005
type(
  int ref
)
ident(
  int_ref proof_level "m_elab.ml" 738 25941 25957 "m_elab.ml" 738 25941 25968
)
"m_elab.ml" 762 26977 26993 "m_elab.ml" 762 26977 27005
type(
  int
)
"m_elab.ml" 764 27023 27039 "m_elab.ml" 764 27023 27042
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.min "stdlib.mli" 181 7799 7799 "stdlib.mli" 181 7799 7823
)
"m_elab.ml" 764 27023 27043 "m_elab.ml" 764 27023 27051
type(
  int
)
ident(
  int_ref sq_level "m_elab.ml" 754 26711 26727 "m_elab.ml" 754 26711 26735
)
"m_elab.ml" 764 27023 27052 "m_elab.ml" 764 27023 27053
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 764 27023 27053 "m_elab.ml" 764 27023 27064
type(
  int ref
)
ident(
  int_ref proof_level "m_elab.ml" 738 25941 25957 "m_elab.ml" 738 25941 25968
)
"m_elab.ml" 764 27023 27052 "m_elab.ml" 764 27023 27064
type(
  int
)
"m_elab.ml" 764 27023 27039 "m_elab.ml" 764 27023 27064
type(
  int
)
"m_elab.ml" 761 26931 26952 "m_elab.ml" 764 27023 27064
type(
  int
)
"m_elab.ml" 761 26931 26943 "m_elab.ml" 764 27023 27064
type(
  unit
)
"m_elab.ml" 770 27225 27241 "m_elab.ml" 770 27225 27243
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 771 27290 27302 "m_elab.ml" 772 27322 27361
)
"m_elab.ml" 770 27225 27246 "m_elab.ml" 770 27225 27259
type(
  StringMap.key ->
  Proof.T.step * Expr.T.ctx * int ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref StringMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 770 27225 27260 "m_elab.ml" 770 27225 27266
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 770 27225 27268 "m_elab.ml" 770 27225 27270
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 770 27225 27272 "m_elab.ml" 770 27225 27274
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 752 26636 26662 "m_elab.ml" 752 26636 26664
)
"m_elab.ml" 770 27225 27276 "m_elab.ml" 770 27225 27277
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 770 27225 27277 "m_elab.ml" 770 27225 27282
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 770 27225 27276 "m_elab.ml" 770 27225 27282
type(
  int
)
"m_elab.ml" 770 27225 27267 "m_elab.ml" 770 27225 27283
type(
  Proof.T.step * Expr.T.ctx * int
)
"m_elab.ml" 770 27225 27284 "m_elab.ml" 770 27225 27286
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 752 26636 26657 "m_elab.ml" 752 26636 26659
)
"m_elab.ml" 770 27225 27246 "m_elab.ml" 770 27225 27286
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 771 27290 27305 "m_elab.ml" 771 27290 27310
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 771 27290 27312 "m_elab.ml" 771 27290 27314
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 770 27225 27241 "m_elab.ml" 770 27225 27243
)
"m_elab.ml" 771 27290 27304 "m_elab.ml" 771 27290 27315
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 771 27290 27317 "m_elab.ml" 771 27290 27319
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 752 26636 26662 "m_elab.ml" 752 26636 26664
)
"m_elab.ml" 771 27290 27303 "m_elab.ml" 771 27290 27320
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 772 27322 27346 "m_elab.ml" 772 27322 27348
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 734 25806 25822 "m_elab.ml" 734 25806 25824
)
"m_elab.ml" 772 27322 27350 "m_elab.ml" 772 27322 27353
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 739 25980 25996 "m_elab.ml" 739 25980 25999
)
"m_elab.ml" 772 27322 27338 "m_elab.ml" 772 27322 27354
type(
  Proof.T.step_
)
"m_elab.ml" 772 27322 27355 "m_elab.ml" 772 27322 27357
type(
  Proof.T.step_ -> Proof.T.step -> Proof.T.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 772 27322 27358 "m_elab.ml" 772 27322 27360
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 772 27322 27338 "m_elab.ml" 772 27322 27360
type(
  Proof.T.step
)
"m_elab.ml" 771 27290 27302 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 770 27225 27237 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 761 26931 26943 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 754 26711 26723 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 752 26636 26648 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 751 26588 26600 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 750 26550 26562 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 739 25980 25992 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 738 25941 25953 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 734 25806 25818 "m_elab.ml" 772 27322 27361
type(
  ((int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
   Expr.T.hyp Deque.dq) *
  Proof.T.step
)
"m_elab.ml" 733 25725 25737 "m_elab.ml" 772 27322 27361
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 773 27362 27382 "m_elab.ml" 773 27362 27384
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 775 27443 27455 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 773 27362 27386 "m_elab.ml" 773 27362 27389
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 775 27443 27455 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 773 27362 27372 "m_elab.ml" 773 27362 27390
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 775 27443 27459 "m_elab.ml" 775 27443 27466
type(
  Expr.T.expr
)
ident(
  def sq_expr "m_elab.ml" 776 27524 27536 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 775 27443 27469 "m_elab.ml" 775 27443 27494
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Levels.compute_level "expr.mli" 712 18148 18152 "expr.mli" 713 18171 18198
)
"m_elab.ml" 775 27443 27495 "m_elab.ml" 775 27443 27497
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 775 27443 27499 "m_elab.ml" 775 27443 27506
type(
  Expr.T.expr_ -> Expr.T.expr
)
ident(
  int_ref Property.noprops "property.mli" 92 3086 3086 "property.mli" 92 3086 3116
)
"m_elab.ml" 775 27443 27516 "m_elab.ml" 775 27443 27518
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 773 27362 27382 "m_elab.ml" 773 27362 27384
)
"m_elab.ml" 775 27443 27507 "m_elab.ml" 775 27443 27519
type(
  Expr.T.expr_
)
"m_elab.ml" 775 27443 27498 "m_elab.ml" 775 27443 27520
type(
  Expr.T.expr
)
"m_elab.ml" 775 27443 27469 "m_elab.ml" 775 27443 27520
type(
  Expr.T.expr
)
"m_elab.ml" 776 27524 27540 "m_elab.ml" 776 27524 27542
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 780 27659 27671 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 776 27524 27551 "m_elab.ml" 776 27524 27558
type(
  Expr.T.expr
)
ident(
  int_ref sq_expr "m_elab.ml" 775 27443 27459 "m_elab.ml" 775 27443 27466
)
"m_elab.ml" 776 27524 27551 "m_elab.ml" 776 27524 27563
type(
  Expr.T.expr_
)
"m_elab.ml" 777 27569 27595 "m_elab.ml" 777 27569 27597
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 777 27569 27601 "m_elab.ml" 777 27569 27603
)
"m_elab.ml" 777 27569 27587 "m_elab.ml" 777 27569 27597
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 777 27569 27601 "m_elab.ml" 777 27569 27603
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 777 27569 27595 "m_elab.ml" 777 27569 27597
)
"m_elab.ml" 778 27604 27622 "m_elab.ml" 778 27604 27623
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 778 27604 27634 "m_elab.ml" 778 27604 27639
type(
  bool
)
"m_elab.ml" 778 27604 27627 "m_elab.ml" 778 27604 27639
type(
  Expr.T.sequent
)
"m_elab.ml" 776 27524 27545 "m_elab.ml" 778 27604 27639
type(
  Expr.T.sequent
)
"m_elab.ml" 780 27659 27675 "m_elab.ml" 780 27659 27686
type(
  int ref
)
ident(
  def proof_level "m_elab.ml" 781 27698 27710 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 780 27659 27689 "m_elab.ml" 780 27659 27692
type(
  int -> int ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 780 27659 27693 "m_elab.ml" 780 27659 27694
type(
  int
)
"m_elab.ml" 780 27659 27689 "m_elab.ml" 780 27659 27694
type(
  int ref
)
"m_elab.ml" 781 27698 27714 "m_elab.ml" 781 27698 27717
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 791 28112 28124 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 782 27720 27738 "m_elab.ml" 782 27720 27741
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 783 27760 27774 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 782 27720 27744 "m_elab.ml" 782 27720 27752
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 696 24201 24213 "m_elab.ml" 696 24201 24221
)
"m_elab.ml" 782 27720 27753 "m_elab.ml" 782 27720 27756
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 683 23655 23671 "m_elab.ml" 683 23655 23697
)
"m_elab.ml" 782 27720 27744 "m_elab.ml" 782 27720 27756
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 783 27760 27778 "m_elab.ml" 783 27760 27781
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 784 27810 27824 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 783 27760 27784 "m_elab.ml" 783 27760 27800
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  int ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 783 27760 27801 "m_elab.ml" 783 27760 27804
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 782 27720 27738 "m_elab.ml" 782 27720 27741
)
"m_elab.ml" 783 27760 27805 "m_elab.ml" 783 27760 27806
type(
  int
)
"m_elab.ml" 783 27760 27784 "m_elab.ml" 783 27760 27806
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 784 27810 27830 "m_elab.ml" 784 27810 27831
type(
  int ref
)
"m_elab.ml" 784 27810 27833 "m_elab.ml" 784 27810 27835
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 785 27851 27865 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 784 27810 27829 "m_elab.ml" 784 27810 27836
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 784 27810 27838 "m_elab.ml" 784 27810 27840
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 785 27851 27865 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 784 27810 27828 "m_elab.ml" 784 27810 27841
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 784 27810 27844 "m_elab.ml" 784 27810 27847
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 783 27760 27778 "m_elab.ml" 783 27760 27781
)
"m_elab.ml" 785 27851 27869 "m_elab.ml" 785 27851 27877
type(
  int
)
ident(
  def sq_level "m_elab.ml" 786 27913 27927 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 785 27851 27880 "m_elab.ml" 785 27851 27901
type(
  Expr.T.expr -> int
)
ident(
  int_ref Expr.Levels.get_level "expr.mli" 696 17732 17736 "expr.mli" 697 17751 17785
)
"m_elab.ml" 785 27851 27902 "m_elab.ml" 785 27851 27909
type(
  Expr.T.expr
)
ident(
  int_ref sq_expr "m_elab.ml" 775 27443 27459 "m_elab.ml" 775 27443 27466
)
"m_elab.ml" 785 27851 27880 "m_elab.ml" 785 27851 27909
type(
  int
)
"m_elab.ml" 786 27913 27927 "m_elab.ml" 786 27913 27932
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 786 27913 27933 "m_elab.ml" 786 27913 27935
type(
  int ref -> int -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 786 27913 27936 "m_elab.ml" 786 27913 27944
type(
  int
)
ident(
  int_ref sq_level "m_elab.ml" 785 27851 27869 "m_elab.ml" 785 27851 27877
)
"m_elab.ml" 786 27913 27927 "m_elab.ml" 786 27913 27944
type(
  unit
)
"m_elab.ml" 787 27946 27964 "m_elab.ml" 787 27946 27966
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 788 28013 28027 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 787 27946 27969 "m_elab.ml" 787 27946 27982
type(
  StringMap.key ->
  Proof.T.step * Expr.T.ctx * int ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref StringMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 787 27946 27983 "m_elab.ml" 787 27946 27989
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 787 27946 27991 "m_elab.ml" 787 27946 27993
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 787 27946 27995 "m_elab.ml" 787 27946 27997
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 784 27810 27838 "m_elab.ml" 784 27810 27840
)
"m_elab.ml" 787 27946 27999 "m_elab.ml" 787 27946 28000
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 787 27946 28000 "m_elab.ml" 787 27946 28005
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 787 27946 27999 "m_elab.ml" 787 27946 28005
type(
  int
)
"m_elab.ml" 787 27946 27990 "m_elab.ml" 787 27946 28006
type(
  Proof.T.step * Expr.T.ctx * int
)
"m_elab.ml" 787 27946 28007 "m_elab.ml" 787 27946 28009
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 784 27810 27833 "m_elab.ml" 784 27810 27835
)
"m_elab.ml" 787 27946 27969 "m_elab.ml" 787 27946 28009
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 788 28013 28031 "m_elab.ml" 788 28013 28034
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
  Expr.T.hyp Deque.dq
)
ident(
  def scx "m_elab.ml" 789 28064 28078 "m_elab.ml" 789 28064 28096
)
"m_elab.ml" 788 28013 28039 "m_elab.ml" 788 28013 28050
type(
  int ref
)
ident(
  int_ref proof_level "m_elab.ml" 780 27659 27675 "m_elab.ml" 780 27659 27686
)
"m_elab.ml" 788 28013 28052 "m_elab.ml" 788 28013 28054
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 787 27946 27964 "m_elab.ml" 787 27946 27966
)
"m_elab.ml" 788 28013 28038 "m_elab.ml" 788 28013 28055
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 788 28013 28057 "m_elab.ml" 788 28013 28059
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 784 27810 27838 "m_elab.ml" 784 27810 27840
)
"m_elab.ml" 788 28013 28037 "m_elab.ml" 788 28013 28060
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) *
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 789 28064 28078 "m_elab.ml" 789 28064 28082
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
"m_elab.ml" 789 28064 28078 "m_elab.ml" 789 28064 28088
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  Proof.T.proof -> Proof.T.proof
)
"m_elab.ml" 789 28064 28089 "m_elab.ml" 789 28064 28092
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 788 28013 28031 "m_elab.ml" 788 28013 28034
)
"m_elab.ml" 789 28064 28093 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 773 27362 27386 "m_elab.ml" 773 27362 27389
)
"m_elab.ml" 789 28064 28078 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 788 28013 28027 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 787 27946 27960 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 786 27913 27927 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 785 27851 27865 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 784 27810 27824 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 783 27760 27774 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 782 27720 27734 "m_elab.ml" 789 28064 28096
type(
  Proof.T.proof
)
"m_elab.ml" 791 28112 28128 "m_elab.ml" 791 28112 28138
type(
  int
)
ident(
  def level_hyps "m_elab.ml" 793 28228 28240 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 791 28112 28141 "m_elab.ml" 791 28112 28151
type(
  Expr.T.hyp Deque.dq -> int
)
ident(
  int_ref hyps_level "m_elab.ml" 702 24437 24453 "m_elab.ml" 702 24437 24463
)
"m_elab.ml" 791 28112 28152 "m_elab.ml" 791 28112 28154
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 776 27524 27540 "m_elab.ml" 776 27524 27542
)
"m_elab.ml" 791 28112 28152 "m_elab.ml" 791 28112 28162
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 791 28112 28141 "m_elab.ml" 791 28112 28162
type(
  int
)
"m_elab.ml" 793 28228 28244 "m_elab.ml" 793 28228 28246
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 794 28297 28309 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 793 28228 28249 "m_elab.ml" 793 28228 28262
type(
  StringMap.key ->
  Proof.T.step * Expr.T.ctx * int ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref StringMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 793 28228 28263 "m_elab.ml" 793 28228 28269
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 793 28228 28271 "m_elab.ml" 793 28228 28273
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 793 28228 28275 "m_elab.ml" 793 28228 28277
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 793 28228 28279 "m_elab.ml" 793 28228 28289
type(
  int
)
ident(
  int_ref level_hyps "m_elab.ml" 791 28112 28128 "m_elab.ml" 791 28112 28138
)
"m_elab.ml" 793 28228 28270 "m_elab.ml" 793 28228 28290
type(
  Proof.T.step * Expr.T.ctx * int
)
"m_elab.ml" 793 28228 28291 "m_elab.ml" 793 28228 28293
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
)
"m_elab.ml" 793 28228 28249 "m_elab.ml" 793 28228 28293
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 794 28297 28313 "m_elab.ml" 794 28297 28316
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
ident(
  def scx "m_elab.ml" 796 28380 28392 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 794 28297 28321 "m_elab.ml" 794 28297 28332
type(
  int ref
)
ident(
  int_ref proof_level "m_elab.ml" 780 27659 27675 "m_elab.ml" 780 27659 27686
)
"m_elab.ml" 794 28297 28334 "m_elab.ml" 794 28297 28336
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 793 28228 28244 "m_elab.ml" 793 28228 28246
)
"m_elab.ml" 794 28297 28320 "m_elab.ml" 794 28297 28337
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 794 28297 28339 "m_elab.ml" 794 28297 28341
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 794 28297 28319 "m_elab.ml" 794 28297 28342
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
"m_elab.ml" 796 28380 28396 "m_elab.ml" 796 28380 28399
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 797 28452 28464 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 796 28380 28402 "m_elab.ml" 796 28380 28417
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  Expr.T.hyp list ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Expr.Visit.adjs "expr.mli" 542 13638 13640 "expr.mli" 542 13638 13679
)
"m_elab.ml" 796 28380 28418 "m_elab.ml" 796 28380 28421
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 794 28297 28313 "m_elab.ml" 794 28297 28316
)
"m_elab.ml" 796 28380 28423 "m_elab.ml" 796 28380 28436
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp list
)
ident(
  int_ref Deque.to_list "deque.mli" 35 1014 1014 "deque.mli" 35 1014 1044
)
"m_elab.ml" 796 28380 28437 "m_elab.ml" 796 28380 28439
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 776 27524 27540 "m_elab.ml" 776 27524 27542
)
"m_elab.ml" 796 28380 28437 "m_elab.ml" 796 28380 28447
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 796 28380 28422 "m_elab.ml" 796 28380 28448
type(
  Expr.T.hyp list
)
"m_elab.ml" 796 28380 28402 "m_elab.ml" 796 28380 28448
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 797 28452 28468 "m_elab.ml" 797 28452 28471
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 798 28500 28512 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 797 28452 28474 "m_elab.ml" 797 28452 28490
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  int ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 797 28452 28491 "m_elab.ml" 797 28452 28494
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 796 28380 28396 "m_elab.ml" 796 28380 28399
)
"m_elab.ml" 797 28452 28495 "m_elab.ml" 797 28452 28496
type(
  int
)
"m_elab.ml" 797 28452 28474 "m_elab.ml" 797 28452 28496
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 798 28500 28516 "m_elab.ml" 798 28500 28519
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 799 28538 28550 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 798 28500 28522 "m_elab.ml" 798 28500 28530
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 696 24201 24213 "m_elab.ml" 696 24201 24221
)
"m_elab.ml" 798 28500 28531 "m_elab.ml" 798 28500 28534
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 797 28452 28468 "m_elab.ml" 797 28452 28471
)
"m_elab.ml" 798 28500 28522 "m_elab.ml" 798 28500 28534
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 799 28538 28554 "m_elab.ml" 799 28538 28557
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 800 28586 28598 "m_elab.ml" 801 28604 28645
)
"m_elab.ml" 799 28538 28560 "m_elab.ml" 799 28538 28576
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  int ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 799 28538 28577 "m_elab.ml" 799 28538 28580
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 798 28500 28516 "m_elab.ml" 798 28500 28519
)
"m_elab.ml" 799 28538 28581 "m_elab.ml" 799 28538 28582
type(
  int
)
"m_elab.ml" 799 28538 28560 "m_elab.ml" 799 28538 28582
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
"m_elab.ml" 800 28586 28599 "m_elab.ml" 800 28586 28602
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 799 28538 28554 "m_elab.ml" 799 28538 28557
)
"m_elab.ml" 801 28604 28630 "m_elab.ml" 801 28604 28632
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 776 27524 27540 "m_elab.ml" 776 27524 27542
)
"m_elab.ml" 801 28604 28634 "m_elab.ml" 801 28604 28637
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 781 27698 27714 "m_elab.ml" 781 27698 27717
)
"m_elab.ml" 801 28604 28620 "m_elab.ml" 801 28604 28638
type(
  Proof.T.step_
)
"m_elab.ml" 801 28604 28639 "m_elab.ml" 801 28604 28641
type(
  Proof.T.step_ -> Proof.T.step -> Proof.T.step
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 801 28604 28642 "m_elab.ml" 801 28604 28644
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 801 28604 28620 "m_elab.ml" 801 28604 28644
type(
  Proof.T.step
)
"m_elab.ml" 800 28586 28598 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 799 28538 28550 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 798 28500 28512 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 797 28452 28464 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 796 28380 28392 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 794 28297 28309 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 793 28228 28240 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 791 28112 28124 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 781 27698 27710 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 780 27659 27671 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 776 27524 27536 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 775 27443 27455 "m_elab.ml" 801 28604 28645
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 802 28646 28662 "m_elab.ml" 802 28646 28663
type(
  Proof.T.proof
)
type(
  Expr.T.expr
)
"m_elab.ml" 802 28646 28656 "m_elab.ml" 802 28646 28663
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 803 28664 28679 "m_elab.ml" 803 28664 28680
type(
  Expr.T.expr
)
"m_elab.ml" 803 28664 28674 "m_elab.ml" 803 28664 28680
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 802 28646 28656 "m_elab.ml" 803 28664 28680
type(
  Proof.T.step_
)
"m_elab.ml" 804 28681 28696 "m_elab.ml" 804 28681 28697
type(
  Expr.T.bound list
)
"m_elab.ml" 804 28681 28691 "m_elab.ml" 804 28681 28697
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 802 28646 28656 "m_elab.ml" 804 28681 28697
type(
  Proof.T.step_
)
"m_elab.ml" 805 28698 28716 "m_elab.ml" 805 28698 28717
type(
  Expr.T.expr list
)
"m_elab.ml" 805 28698 28708 "m_elab.ml" 805 28698 28717
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 802 28646 28656 "m_elab.ml" 805 28698 28717
type(
  Proof.T.step_
)
"m_elab.ml" 806 28718 28733 "m_elab.ml" 806 28718 28734
type(
  Proof.T.proof
)
type(
  Expr.T.expr
)
type(
  Expr.T.bound list
)
"m_elab.ml" 806 28718 28728 "m_elab.ml" 806 28718 28734
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 802 28646 28656 "m_elab.ml" 806 28718 28734
type(
  Proof.T.step_
)
"m_elab.ml" 807 28738 28757 "m_elab.ml" 807 28738 28762
type(
  bool
)
"m_elab.ml" 807 28738 28750 "m_elab.ml" 807 28738 28762
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 808 28802 28812 "m_elab.ml" 808 28802 28813
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 809 28817 28833 "m_elab.ml" 809 28817 28835
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 810 28877 28889 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 809 28817 28838 "m_elab.ml" 809 28817 28851
type(
  StringMap.key ->
  Proof.T.step * Expr.T.ctx * int ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t ->
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref StringMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 809 28817 28852 "m_elab.ml" 809 28817 28858
type(
  StringMap.key
)
ident(
  int_ref stepnm "m_elab.ml" 689 23840 23852 "m_elab.ml" 689 23840 23858
)
"m_elab.ml" 809 28817 28860 "m_elab.ml" 809 28817 28862
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 809 28817 28864 "m_elab.ml" 809 28817 28866
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 809 28817 28868 "m_elab.ml" 809 28817 28869
type(
  int
)
"m_elab.ml" 809 28817 28859 "m_elab.ml" 809 28817 28870
type(
  Proof.T.step * Expr.T.ctx * int
)
"m_elab.ml" 809 28817 28871 "m_elab.ml" 809 28817 28873
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 694 24100 24112 "m_elab.ml" 694 24100 24114
)
"m_elab.ml" 809 28817 28838 "m_elab.ml" 809 28817 28873
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 810 28877 28893 "m_elab.ml" 810 28877 28896
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
ident(
  def scx "m_elab.ml" 811 28920 28932 "m_elab.ml" 811 28920 28949
)
"m_elab.ml" 810 28877 28901 "m_elab.ml" 810 28877 28906
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 683 23655 23674 "m_elab.ml" 683 23655 23679
)
"m_elab.ml" 810 28877 28908 "m_elab.ml" 810 28877 28910
type(
  (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 809 28817 28833 "m_elab.ml" 809 28817 28835
)
"m_elab.ml" 810 28877 28900 "m_elab.ml" 810 28877 28911
type(
  int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t
)
"m_elab.ml" 810 28877 28913 "m_elab.ml" 810 28877 28915
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 683 23655 23686 "m_elab.ml" 683 23655 23688
)
"m_elab.ml" 810 28877 28899 "m_elab.ml" 810 28877 28916
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) * Expr.T.ctx
)
"m_elab.ml" 811 28920 28932 "m_elab.ml" 811 28920 28937
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  ext_ref self-3
)
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref super "m_elab.ml" 666 23021 23033 "m_elab.ml" 667 23093 23116
)
"m_elab.ml" 811 28920 28932 "m_elab.ml" 811 28920 28942
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable > ->
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx ->
  Proof.T.step ->
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx * Proof.T.step
)
ident(
  ext_ref step
)
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx ->
  Proof.T.step ->
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx * Proof.T.step
)
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx ->
  Proof.T.step ->
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 811 28920 28943 "m_elab.ml" 811 28920 28946
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 810 28877 28893 "m_elab.ml" 810 28877 28896
)
"m_elab.ml" 811 28920 28947 "m_elab.ml" 811 28920 28949
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 683 23655 23698 "m_elab.ml" 683 23655 23700
)
"m_elab.ml" 811 28920 28932 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 810 28877 28889 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 809 28817 28829 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 710 24718 24726 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 702 24437 24445 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 696 24201 24209 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 694 24100 24108 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 691 23945 23953 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 689 23840 23848 "m_elab.ml" 811 28920 28949
type(
  (int ref * (Proof.T.step * Expr.T.ctx * int) StringMap.t) Expr.Visit.scx *
  Proof.T.step
)
"m_elab.ml" 813 28951 28975 "m_elab.ml" 813 28951 28977
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 813 28951 28978 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 813 28951 28980 "m_elab.ml" 813 28951 28985
type(
  int ref
)
ident(
  def level "m_elab.ml" 813 28951 28996 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 813 28951 28987 "m_elab.ml" 813 28951 28989
type(
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
ident(
  def sm "m_elab.ml" 813 28951 28996 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 813 28951 28979 "m_elab.ml" 813 28951 28990
type(
  int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
"m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 813 28951 28996 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 813 28951 28978 "m_elab.ml" 813 28951 28995
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t) *
  Expr.T.ctx
)
"m_elab.ml" 813 28951 28996 "m_elab.ml" 813 28951 29003
type(
  Proof.T.usable
)
ident(
  def usables "m_elab.ml" 813 28951 29004 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 813 28951 29004 "m_elab.ml" 813 28951 29008
type(
  bool
)
ident(
  def only "m_elab.ml" 815 29076 29084 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 815 29076 29088 "m_elab.ml" 815 29076 29098
type(
  Expr.T.ctx -> Expr.T.expr -> unit
)
ident(
  def check_fact "m_elab.ml" 846 30442 30450 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 815 29076 29099 "m_elab.ml" 815 29076 29101
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 815 29076 29102 "m_elab.ml" 843 30354 30369
)
"m_elab.ml" 815 29076 29102 "m_elab.ml" 815 29076 29106
type(
  Expr.T.expr
)
ident(
  def fact "m_elab.ml" 816 29109 29121 "m_elab.ml" 843 30354 30369
)
"m_elab.ml" 816 29109 29133 "m_elab.ml" 816 29109 29137
type(
  Expr.T.expr
)
ident(
  int_ref fact "m_elab.ml" 815 29076 29102 "m_elab.ml" 815 29076 29106
)
"m_elab.ml" 816 29109 29133 "m_elab.ml" 816 29109 29142
type(
  Expr.T.expr_
)
"m_elab.ml" 817 29148 29165 "m_elab.ml" 817 29148 29166
type(
  int
)
ident(
  def n "m_elab.ml" 817 29148 29170 "m_elab.ml" 837 30079 30098
)
"m_elab.ml" 817 29148 29162 "m_elab.ml" 817 29148 29166
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 818 29176 29192 "m_elab.ml" 818 29176 29195
type(
  Expr.T.hyp
)
ident(
  def hyp "m_elab.ml" 819 29226 29238 "m_elab.ml" 836 30053 30078
)
"m_elab.ml" 818 29176 29198 "m_elab.ml" 818 29176 29217
type(
  Expr.T.ctx -> int -> Expr.T.hyp
)
ident(
  int_ref E_t.get_val_from_id "e_t.mli" 359 7973 7973 "e_t.mli" 360 7994 8026
)
"m_elab.ml" 818 29176 29218 "m_elab.ml" 818 29176 29220
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 815 29076 29099 "m_elab.ml" 815 29076 29101
)
"m_elab.ml" 818 29176 29221 "m_elab.ml" 818 29176 29222
type(
  int
)
ident(
  int_ref n "m_elab.ml" 817 29148 29165 "m_elab.ml" 817 29148 29166
)
"m_elab.ml" 818 29176 29198 "m_elab.ml" 818 29176 29222
type(
  Expr.T.hyp
)
"m_elab.ml" 819 29226 29242 "m_elab.ml" 819 29226 29245
type(
  Expr.T.ctx
)
ident(
  def cx_ "m_elab.ml" 820 29272 29288 "m_elab.ml" 836 30053 30078
)
"m_elab.ml" 819 29226 29248 "m_elab.ml" 819 29226 29263
type(
  Expr.T.ctx -> int -> Expr.T.ctx
)
ident(
  int_ref Expr.T.cx_front "expr.mli" 339 8716 8718 "expr.mli" 339 8716 8750
)
"m_elab.ml" 819 29226 29264 "m_elab.ml" 819 29226 29266
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 815 29076 29099 "m_elab.ml" 815 29076 29101
)
"m_elab.ml" 819 29226 29267 "m_elab.ml" 819 29226 29268
type(
  int
)
ident(
  int_ref n "m_elab.ml" 817 29148 29165 "m_elab.ml" 817 29148 29166
)
"m_elab.ml" 819 29226 29248 "m_elab.ml" 819 29226 29268
type(
  Expr.T.ctx
)
"m_elab.ml" 820 29272 29294 "m_elab.ml" 820 29272 29297
type(
  Expr.T.hyp
)
ident(
  int_ref hyp "m_elab.ml" 818 29176 29192 "m_elab.ml" 818 29176 29195
)
"m_elab.ml" 820 29272 29294 "m_elab.ml" 820 29272 29302
type(
  Expr.T.hyp_
)
"m_elab.ml" 821 29308 29332 "m_elab.ml" 821 29308 29336
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 822 29353 29373 "m_elab.ml" 823 29422 29454
)
"m_elab.ml" 821 29308 29338 "m_elab.ml" 821 29308 29345
type(
  Expr.T.visibility
)
"m_elab.ml" 821 29308 29347 "m_elab.ml" 821 29308 29348
type(
  Expr.T.time
)
"m_elab.ml" 821 29308 29326 "m_elab.ml" 821 29308 29349
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 822 29353 29373 "m_elab.ml" 822 29353 29385
type(
  string -> unit
)
ident(
  int_ref Stdlib.Format.print_string "format.mli" 221 9130 9130 "format.mli" 221 9130 9163
)
"m_elab.ml" 822 29353 29387 "m_elab.ml" 822 29353 29410
type(
  Expr.T.ctx -> Expr.T.expr -> string
)
ident(
  int_ref Expr.Fmt.string_of_expr "expr.mli" 417 10657 10661 "expr.mli" 419 10713 10731
)
"m_elab.ml" 822 29353 29411 "m_elab.ml" 822 29353 29414
type(
  Expr.T.ctx
)
ident(
  int_ref cx_ "m_elab.ml" 819 29226 29242 "m_elab.ml" 819 29226 29245
)
"m_elab.ml" 822 29353 29415 "m_elab.ml" 822 29353 29419
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 821 29308 29332 "m_elab.ml" 821 29308 29336
)
"m_elab.ml" 822 29353 29386 "m_elab.ml" 822 29353 29420
type(
  string
)
"m_elab.ml" 822 29353 29373 "m_elab.ml" 822 29353 29420
type(
  unit
)
"m_elab.ml" 823 29422 29449 "m_elab.ml" 823 29422 29454
type(
  bool
)
"m_elab.ml" 823 29422 29442 "m_elab.ml" 823 29422 29454
type(
  unit
)
"m_elab.ml" 822 29353 29373 "m_elab.ml" 823 29422 29454
type(
  unit
)
"m_elab.ml" 825 29503 29543 "m_elab.ml" 825 29503 29547
type(
  Util.hint
)
ident(
  def name "m_elab.ml" 830 29713 29733 "m_elab.ml" 835 30021 30052
)
"m_elab.ml" 825 29503 29549 "m_elab.ml" 825 29503 29550
type(
  Expr.T.expr
)
"m_elab.ml" 825 29503 29533 "m_elab.ml" 825 29503 29551
type(
  Expr.T.defn_
)
"m_elab.ml" 825 29503 29527 "m_elab.ml" 825 29503 29552
type(
  Expr.T.defn
)
"m_elab.ml" 825 29503 29554 "m_elab.ml" 825 29503 29555
type(
  Expr.T.wheredef
)
"m_elab.ml" 825 29503 29557 "m_elab.ml" 825 29503 29564
type(
  Expr.T.visibility
)
"m_elab.ml" 825 29503 29566 "m_elab.ml" 825 29503 29567
type(
  Expr.T.export
)
"m_elab.ml" 825 29503 29521 "m_elab.ml" 825 29503 29568
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 830 29713 29737 "m_elab.ml" 830 29713 29739
type(
  string
)
ident(
  def nm "m_elab.ml" 831 29755 29775 "m_elab.ml" 835 30021 30052
)
"m_elab.ml" 830 29713 29742 "m_elab.ml" 830 29713 29746
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 825 29503 29543 "m_elab.ml" 825 29503 29547
)
"m_elab.ml" 830 29713 29742 "m_elab.ml" 830 29713 29751
type(
  string
)
"m_elab.ml" 831 29755 29779 "m_elab.ml" 831 29755 29799
type(
  string -> int -> char -> bool
)
ident(
  int_ref Stdlib.String.contains_from "string.mli" 172 6277 6277 "string.mli" 172 6277 6326
)
"m_elab.ml" 831 29755 29800 "m_elab.ml" 831 29755 29802
type(
  string
)
ident(
  int_ref nm "m_elab.ml" 830 29713 29737 "m_elab.ml" 830 29713 29739
)
"m_elab.ml" 831 29755 29803 "m_elab.ml" 831 29755 29804
type(
  int
)
"m_elab.ml" 831 29755 29805 "m_elab.ml" 831 29755 29808
type(
  char
)
"m_elab.ml" 831 29755 29778 "m_elab.ml" 831 29755 29809
type(
  bool
)
"m_elab.ml" 832 29821 29849 "m_elab.ml" 832 29821 29862
type(
  StringMap.key ->
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 832 29821 29863 "m_elab.ml" 832 29821 29865
type(
  StringMap.key
)
ident(
  int_ref nm "m_elab.ml" 830 29713 29737 "m_elab.ml" 830 29713 29739
)
"m_elab.ml" 832 29821 29866 "m_elab.ml" 832 29821 29868
type(
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 813 28951 28987 "m_elab.ml" 813 28951 28989
)
"m_elab.ml" 832 29821 29848 "m_elab.ml" 832 29821 29869
type(
  bool
)
"m_elab.ml" 833 29881 29914 "m_elab.ml" 833 29881 29918
type(
  Proof.T.step
)
ident(
  def step "m_elab.ml" 834 29962 29990 "m_elab.ml" 834 29962 30020
)
"m_elab.ml" 833 29881 29920 "m_elab.ml" 833 29881 29922
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 834 29962 29990 "m_elab.ml" 834 29962 30020
)
"m_elab.ml" 833 29881 29924 "m_elab.ml" 833 29881 29934
type(
  int
)
ident(
  def step_level "m_elab.ml" 834 29962 29990 "m_elab.ml" 834 29962 30020
)
"m_elab.ml" 833 29881 29913 "m_elab.ml" 833 29881 29935
type(
  Proof.T.step * Expr.T.hyp Deque.dq * int
)
"m_elab.ml" 833 29881 29938 "m_elab.ml" 833 29881 29952
type(
  StringMap.key ->
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t ->
  Proof.T.step * Expr.T.hyp Deque.dq * int
)
ident(
  int_ref StringMap.find "map.mli" 278 11157 11161 "map.mli" 278 11157 11188
)
"m_elab.ml" 833 29881 29953 "m_elab.ml" 833 29881 29955
type(
  StringMap.key
)
ident(
  int_ref nm "m_elab.ml" 830 29713 29737 "m_elab.ml" 830 29713 29739
)
"m_elab.ml" 833 29881 29956 "m_elab.ml" 833 29881 29958
type(
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 813 28951 28987 "m_elab.ml" 813 28951 28989
)
"m_elab.ml" 833 29881 29938 "m_elab.ml" 833 29881 29958
type(
  Proof.T.step * Expr.T.hyp Deque.dq * int
)
"m_elab.ml" 834 29962 29990 "m_elab.ml" 834 29962 29995
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 813 28951 28980 "m_elab.ml" 813 28951 28985
)
"m_elab.ml" 834 29962 29996 "m_elab.ml" 834 29962 29998
type(
  int ref -> int -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 834 29962 29999 "m_elab.ml" 834 29962 30002
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.max "stdlib.mli" 186 7963 7963 "stdlib.mli" 186 7963 7987
)
"m_elab.ml" 834 29962 30003 "m_elab.ml" 834 29962 30013
type(
  int
)
ident(
  int_ref step_level "m_elab.ml" 833 29881 29924 "m_elab.ml" 833 29881 29934
)
"m_elab.ml" 834 29962 30014 "m_elab.ml" 834 29962 30015
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 834 29962 30015 "m_elab.ml" 834 29962 30020
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 813 28951 28980 "m_elab.ml" 813 28951 28985
)
"m_elab.ml" 834 29962 30014 "m_elab.ml" 834 29962 30020
type(
  int
)
"m_elab.ml" 834 29962 29999 "m_elab.ml" 834 29962 30020
type(
  int
)
"m_elab.ml" 834 29962 29990 "m_elab.ml" 834 29962 30020
type(
  unit
)
"m_elab.ml" 832 29821 29875 "m_elab.ml" 835 30021 30048
type(
  unit
)
"m_elab.ml" 831 29755 29815 "m_elab.ml" 835 30021 30052
type(
  unit
)
"m_elab.ml" 831 29755 29775 "m_elab.ml" 835 30021 30052
type(
  unit
)
"m_elab.ml" 830 29713 29733 "m_elab.ml" 835 30021 30052
type(
  unit
)
"m_elab.ml" 836 30053 30071 "m_elab.ml" 836 30053 30072
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 836 30053 30076 "m_elab.ml" 836 30053 30078
type(
  unit
)
"m_elab.ml" 820 29272 29288 "m_elab.ml" 836 30053 30078
type(
  unit
)
"m_elab.ml" 819 29226 29238 "m_elab.ml" 836 30053 30078
type(
  unit
)
"m_elab.ml" 817 29148 29170 "m_elab.ml" 837 30079 30098
type(
  unit
)
"m_elab.ml" 839 30161 30175 "m_elab.ml" 839 30161 30176
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 840 30180 30200 "m_elab.ml" 840 30180 30204
type(
  Expr.T.expr
)
ident(
  def fact "m_elab.ml" 841 30244 30260 "m_elab.ml" 842 30307 30353
)
"m_elab.ml" 840 30180 30207 "m_elab.ml" 840 30180 30232
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Levels.compute_level "expr.mli" 712 18148 18152 "expr.mli" 713 18171 18198
)
"m_elab.ml" 840 30180 30233 "m_elab.ml" 840 30180 30235
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 815 29076 29099 "m_elab.ml" 815 29076 29101
)
"m_elab.ml" 840 30180 30236 "m_elab.ml" 840 30180 30240
type(
  Expr.T.expr
)
ident(
  int_ref fact "m_elab.ml" 815 29076 29102 "m_elab.ml" 815 29076 29106
)
"m_elab.ml" 840 30180 30207 "m_elab.ml" 840 30180 30240
type(
  Expr.T.expr
)
"m_elab.ml" 841 30244 30264 "m_elab.ml" 841 30244 30274
type(
  int
)
ident(
  def expr_level "m_elab.ml" 842 30307 30323 "m_elab.ml" 842 30307 30353
)
"m_elab.ml" 841 30244 30277 "m_elab.ml" 841 30244 30298
type(
  Expr.T.expr -> int
)
ident(
  int_ref Expr.Levels.get_level "expr.mli" 696 17732 17736 "expr.mli" 697 17751 17785
)
"m_elab.ml" 841 30244 30299 "m_elab.ml" 841 30244 30303
type(
  Expr.T.expr
)
ident(
  int_ref fact "m_elab.ml" 840 30180 30200 "m_elab.ml" 840 30180 30204
)
"m_elab.ml" 841 30244 30277 "m_elab.ml" 841 30244 30303
type(
  int
)
"m_elab.ml" 842 30307 30323 "m_elab.ml" 842 30307 30328
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 813 28951 28980 "m_elab.ml" 813 28951 28985
)
"m_elab.ml" 842 30307 30329 "m_elab.ml" 842 30307 30331
type(
  int ref -> int -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 842 30307 30332 "m_elab.ml" 842 30307 30335
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.max "stdlib.mli" 186 7963 7963 "stdlib.mli" 186 7963 7987
)
"m_elab.ml" 842 30307 30336 "m_elab.ml" 842 30307 30346
type(
  int
)
ident(
  int_ref expr_level "m_elab.ml" 841 30244 30264 "m_elab.ml" 841 30244 30274
)
"m_elab.ml" 842 30307 30347 "m_elab.ml" 842 30307 30348
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 842 30307 30348 "m_elab.ml" 842 30307 30353
type(
  int ref
)
ident(
  int_ref level "m_elab.ml" 813 28951 28980 "m_elab.ml" 813 28951 28985
)
"m_elab.ml" 842 30307 30347 "m_elab.ml" 842 30307 30353
type(
  int
)
"m_elab.ml" 842 30307 30332 "m_elab.ml" 842 30307 30353
type(
  int
)
"m_elab.ml" 842 30307 30323 "m_elab.ml" 842 30307 30353
type(
  unit
)
"m_elab.ml" 841 30244 30260 "m_elab.ml" 842 30307 30353
type(
  unit
)
"m_elab.ml" 840 30180 30196 "m_elab.ml" 842 30307 30353
type(
  unit
)
"m_elab.ml" 816 29109 29121 "m_elab.ml" 843 30354 30369
type(
  unit
)
"m_elab.ml" 846 30442 30453 "m_elab.ml" 846 30442 30456
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"m_elab.ml" 846 30442 30457 "m_elab.ml" 846 30442 30461
type(
  bool
)
ident(
  int_ref only "m_elab.ml" 813 28951 29004 "m_elab.ml" 813 28951 29008
)
"m_elab.ml" 846 30442 30453 "m_elab.ml" 846 30442 30461
type(
  bool
)
"m_elab.ml" 847 30473 30485 "m_elab.ml" 847 30473 30502
type(
  int -> Expr.T.hyp_ Property.wrapped -> unit
)
ident(
  def check_assumptions "m_elab.ml" 859 30934 30942 "m_elab.ml" 859 30934 30973
)
"m_elab.ml" 847 30473 30503 "m_elab.ml" 847 30473 30504
type(
  int
)
ident(
  def n "m_elab.ml" 847 30473 30505 "m_elab.ml" 857 30897 30918
)
"m_elab.ml" 847 30473 30505 "m_elab.ml" 847 30473 30508
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def hyp "m_elab.ml" 848 30511 30523 "m_elab.ml" 857 30897 30918
)
"m_elab.ml" 848 30511 30529 "m_elab.ml" 848 30511 30532
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref hyp "m_elab.ml" 847 30473 30505 "m_elab.ml" 847 30473 30508
)
"m_elab.ml" 848 30511 30529 "m_elab.ml" 848 30511 30537
type(
  Expr.T.hyp_
)
"m_elab.ml" 849 30543 30572 "m_elab.ml" 849 30543 30573
type(
  bool
)
"m_elab.ml" 849 30543 30569 "m_elab.ml" 849 30543 30573
type(
  Expr.T.expr_
)
"m_elab.ml" 849 30543 30563 "m_elab.ml" 849 30543 30574
type(
  Expr.T.expr
)
"m_elab.ml" 849 30543 30576 "m_elab.ml" 849 30543 30577
type(
  Expr.T.visibility
)
"m_elab.ml" 849 30543 30579 "m_elab.ml" 849 30543 30580
type(
  Expr.T.time
)
"m_elab.ml" 849 30543 30557 "m_elab.ml" 849 30543 30581
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 849 30543 30585 "m_elab.ml" 849 30543 30587
type(
  unit
)
"m_elab.ml" 850 30607 30627 "m_elab.ml" 850 30607 30631
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 851 30648 30664 "m_elab.ml" 856 30861 30896
)
"m_elab.ml" 850 30607 30633 "m_elab.ml" 850 30607 30640
type(
  Expr.T.visibility
)
"m_elab.ml" 850 30607 30642 "m_elab.ml" 850 30607 30643
type(
  Expr.T.time
)
"m_elab.ml" 850 30607 30621 "m_elab.ml" 850 30607 30644
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 851 30648 30668 "m_elab.ml" 851 30648 30671
type(
  Expr.T.ctx
)
ident(
  def cx_ "m_elab.ml" 856 30861 30877 "m_elab.ml" 856 30861 30896
)
"m_elab.ml" 851 30648 30674 "m_elab.ml" 851 30648 30689
type(
  Expr.T.ctx -> int -> Expr.T.ctx
)
ident(
  int_ref Expr.T.cx_front "expr.mli" 339 8716 8718 "expr.mli" 339 8716 8750
)
"m_elab.ml" 851 30648 30690 "m_elab.ml" 851 30648 30692
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 851 30648 30695 "m_elab.ml" 851 30648 30705
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 851 30648 30706 "m_elab.ml" 851 30648 30708
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 851 30648 30694 "m_elab.ml" 851 30648 30709
type(
  int
)
"m_elab.ml" 851 30648 30710 "m_elab.ml" 851 30648 30711
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 851 30648 30712 "m_elab.ml" 851 30648 30713
type(
  int
)
ident(
  int_ref n "m_elab.ml" 847 30473 30503 "m_elab.ml" 847 30473 30504
)
"m_elab.ml" 851 30648 30693 "m_elab.ml" 851 30648 30714
type(
  int
)
"m_elab.ml" 851 30648 30674 "m_elab.ml" 851 30648 30714
type(
  Expr.T.ctx
)
"m_elab.ml" 856 30861 30877 "m_elab.ml" 856 30861 30887
type(
  Expr.T.ctx -> Expr.T.expr -> unit
)
ident(
  int_ref check_fact "m_elab.ml" 815 29076 29088 "m_elab.ml" 815 29076 29098
)
"m_elab.ml" 856 30861 30888 "m_elab.ml" 856 30861 30891
type(
  Expr.T.ctx
)
ident(
  int_ref cx_ "m_elab.ml" 851 30648 30668 "m_elab.ml" 851 30648 30671
)
"m_elab.ml" 856 30861 30892 "m_elab.ml" 856 30861 30896
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 850 30607 30627 "m_elab.ml" 850 30607 30631
)
"m_elab.ml" 856 30861 30877 "m_elab.ml" 856 30861 30896
type(
  unit
)
"m_elab.ml" 851 30648 30664 "m_elab.ml" 856 30861 30896
type(
  unit
)
"m_elab.ml" 857 30897 30911 "m_elab.ml" 857 30897 30912
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 857 30897 30916 "m_elab.ml" 857 30897 30918
type(
  unit
)
"m_elab.ml" 848 30511 30523 "m_elab.ml" 857 30897 30918
type(
  unit
)
"m_elab.ml" 859 30934 30942 "m_elab.ml" 859 30934 30952
type(
  (int -> Expr.T.hyp -> unit) -> Expr.T.ctx -> unit
)
ident(
  int_ref Deque.iter "deque.mli" 21 529 529 "deque.mli" 21 529 577
)
"m_elab.ml" 859 30934 30953 "m_elab.ml" 859 30934 30970
type(
  int -> Expr.T.hyp -> unit
)
ident(
  int_ref check_assumptions "m_elab.ml" 847 30473 30485 "m_elab.ml" 847 30473 30502
)
"m_elab.ml" 859 30934 30971 "m_elab.ml" 859 30934 30973
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 859 30934 30942 "m_elab.ml" 859 30934 30973
type(
  unit
)
"m_elab.ml" 846 30442 30467 "m_elab.ml" 860 30974 30985
type(
  unit
)
"m_elab.ml" 846 30442 30450 "m_elab.ml" 860 30974 30985
type(
  unit
)
"m_elab.ml" 862 30988 31000 "m_elab.ml" 862 30988 31009
type(
  int ref
)
ident(
  def max_level "m_elab.ml" 863 31021 31029 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 862 30988 31012 "m_elab.ml" 862 30988 31015
type(
  int -> int ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 862 30988 31016 "m_elab.ml" 862 30988 31017
type(
  int
)
"m_elab.ml" 862 30988 31012 "m_elab.ml" 862 30988 31017
type(
  int ref
)
"m_elab.ml" 863 31021 31033 "m_elab.ml" 863 31021 31043
type(
  Expr.T.ctx -> Expr.T.expr -> unit
)
ident(
  def check_step "m_elab.ml" 885 32039 32047 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 863 31021 31044 "m_elab.ml" 863 31021 31046
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 863 31021 31047 "m_elab.ml" 883 32008 32023
)
"m_elab.ml" 863 31021 31047 "m_elab.ml" 863 31021 31051
type(
  Expr.T.expr
)
ident(
  def fact "m_elab.ml" 864 31054 31066 "m_elab.ml" 883 32008 32023
)
"m_elab.ml" 864 31054 31078 "m_elab.ml" 864 31054 31082
type(
  Expr.T.expr
)
ident(
  int_ref fact "m_elab.ml" 863 31021 31047 "m_elab.ml" 863 31021 31051
)
"m_elab.ml" 864 31054 31078 "m_elab.ml" 864 31054 31087
type(
  Expr.T.expr_
)
"m_elab.ml" 865 31093 31110 "m_elab.ml" 865 31093 31111
type(
  int
)
ident(
  def n "m_elab.ml" 865 31093 31115 "m_elab.ml" 878 31787 31806
)
"m_elab.ml" 865 31093 31107 "m_elab.ml" 865 31093 31111
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 866 31121 31141 "m_elab.ml" 866 31121 31144
type(
  Expr.T.hyp
)
ident(
  def hyp "m_elab.ml" 867 31175 31191 "m_elab.ml" 877 31761 31786
)
"m_elab.ml" 866 31121 31147 "m_elab.ml" 866 31121 31166
type(
  Expr.T.ctx -> int -> Expr.T.hyp
)
ident(
  int_ref E_t.get_val_from_id "e_t.mli" 359 7973 7973 "e_t.mli" 360 7994 8026
)
"m_elab.ml" 866 31121 31167 "m_elab.ml" 866 31121 31169
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 863 31021 31044 "m_elab.ml" 863 31021 31046
)
"m_elab.ml" 866 31121 31170 "m_elab.ml" 866 31121 31171
type(
  int
)
ident(
  int_ref n "m_elab.ml" 865 31093 31110 "m_elab.ml" 865 31093 31111
)
"m_elab.ml" 866 31121 31147 "m_elab.ml" 866 31121 31171
type(
  Expr.T.hyp
)
"m_elab.ml" 867 31175 31197 "m_elab.ml" 867 31175 31200
type(
  Expr.T.hyp
)
ident(
  int_ref hyp "m_elab.ml" 866 31121 31141 "m_elab.ml" 866 31121 31144
)
"m_elab.ml" 867 31175 31197 "m_elab.ml" 867 31175 31205
type(
  Expr.T.hyp_
)
"m_elab.ml" 868 31211 31251 "m_elab.ml" 868 31211 31255
type(
  Util.hint
)
ident(
  def name "m_elab.ml" 869 31280 31300 "m_elab.ml" 876 31729 31760
)
"m_elab.ml" 868 31211 31257 "m_elab.ml" 868 31211 31258
type(
  Expr.T.expr
)
"m_elab.ml" 868 31211 31241 "m_elab.ml" 868 31211 31259
type(
  Expr.T.defn_
)
"m_elab.ml" 868 31211 31235 "m_elab.ml" 868 31211 31260
type(
  Expr.T.defn
)
"m_elab.ml" 868 31211 31262 "m_elab.ml" 868 31211 31263
type(
  Expr.T.wheredef
)
"m_elab.ml" 868 31211 31265 "m_elab.ml" 868 31211 31272
type(
  Expr.T.visibility
)
"m_elab.ml" 868 31211 31274 "m_elab.ml" 868 31211 31275
type(
  Expr.T.export
)
"m_elab.ml" 868 31211 31229 "m_elab.ml" 868 31211 31276
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 869 31280 31304 "m_elab.ml" 869 31280 31306
type(
  string
)
ident(
  def nm "m_elab.ml" 871 31372 31392 "m_elab.ml" 876 31729 31760
)
"m_elab.ml" 869 31280 31309 "m_elab.ml" 869 31280 31313
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 868 31211 31251 "m_elab.ml" 868 31211 31255
)
"m_elab.ml" 869 31280 31309 "m_elab.ml" 869 31280 31318
type(
  string
)
"m_elab.ml" 871 31372 31396 "m_elab.ml" 871 31372 31416
type(
  string -> int -> char -> bool
)
ident(
  int_ref Stdlib.String.contains_from "string.mli" 172 6277 6277 "string.mli" 172 6277 6326
)
"m_elab.ml" 871 31372 31417 "m_elab.ml" 871 31372 31419
type(
  string
)
ident(
  int_ref nm "m_elab.ml" 869 31280 31304 "m_elab.ml" 869 31280 31306
)
"m_elab.ml" 871 31372 31420 "m_elab.ml" 871 31372 31421
type(
  int
)
"m_elab.ml" 871 31372 31422 "m_elab.ml" 871 31372 31425
type(
  char
)
"m_elab.ml" 871 31372 31395 "m_elab.ml" 871 31372 31426
type(
  bool
)
"m_elab.ml" 872 31438 31466 "m_elab.ml" 872 31438 31479
type(
  StringMap.key ->
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 872 31438 31480 "m_elab.ml" 872 31438 31482
type(
  StringMap.key
)
ident(
  int_ref nm "m_elab.ml" 869 31280 31304 "m_elab.ml" 869 31280 31306
)
"m_elab.ml" 872 31438 31483 "m_elab.ml" 872 31438 31485
type(
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 813 28951 28987 "m_elab.ml" 813 28951 28989
)
"m_elab.ml" 872 31438 31465 "m_elab.ml" 872 31438 31486
type(
  bool
)
"m_elab.ml" 874 31581 31614 "m_elab.ml" 874 31581 31618
type(
  Proof.T.step
)
ident(
  def step "m_elab.ml" 875 31662 31690 "m_elab.ml" 875 31662 31728
)
"m_elab.ml" 874 31581 31620 "m_elab.ml" 874 31581 31622
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 875 31662 31690 "m_elab.ml" 875 31662 31728
)
"m_elab.ml" 874 31581 31624 "m_elab.ml" 874 31581 31634
type(
  int
)
ident(
  def step_level "m_elab.ml" 875 31662 31690 "m_elab.ml" 875 31662 31728
)
"m_elab.ml" 874 31581 31613 "m_elab.ml" 874 31581 31635
type(
  Proof.T.step * Expr.T.hyp Deque.dq * int
)
"m_elab.ml" 874 31581 31638 "m_elab.ml" 874 31581 31652
type(
  StringMap.key ->
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t ->
  Proof.T.step * Expr.T.hyp Deque.dq * int
)
ident(
  int_ref StringMap.find "map.mli" 278 11157 11161 "map.mli" 278 11157 11188
)
"m_elab.ml" 874 31581 31653 "m_elab.ml" 874 31581 31655
type(
  StringMap.key
)
ident(
  int_ref nm "m_elab.ml" 869 31280 31304 "m_elab.ml" 869 31280 31306
)
"m_elab.ml" 874 31581 31656 "m_elab.ml" 874 31581 31658
type(
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
ident(
  int_ref sm "m_elab.ml" 813 28951 28987 "m_elab.ml" 813 28951 28989
)
"m_elab.ml" 874 31581 31638 "m_elab.ml" 874 31581 31658
type(
  Proof.T.step * Expr.T.hyp Deque.dq * int
)
"m_elab.ml" 875 31662 31690 "m_elab.ml" 875 31662 31699
type(
  int ref
)
ident(
  int_ref max_level "m_elab.ml" 862 30988 31000 "m_elab.ml" 862 30988 31009
)
"m_elab.ml" 875 31662 31700 "m_elab.ml" 875 31662 31702
type(
  int ref -> int -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 875 31662 31703 "m_elab.ml" 875 31662 31706
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.max "stdlib.mli" 186 7963 7963 "stdlib.mli" 186 7963 7987
)
"m_elab.ml" 875 31662 31707 "m_elab.ml" 875 31662 31717
type(
  int
)
ident(
  int_ref step_level "m_elab.ml" 874 31581 31624 "m_elab.ml" 874 31581 31634
)
"m_elab.ml" 875 31662 31718 "m_elab.ml" 875 31662 31719
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 875 31662 31719 "m_elab.ml" 875 31662 31728
type(
  int ref
)
ident(
  int_ref max_level "m_elab.ml" 862 30988 31000 "m_elab.ml" 862 30988 31009
)
"m_elab.ml" 875 31662 31718 "m_elab.ml" 875 31662 31728
type(
  int
)
"m_elab.ml" 875 31662 31703 "m_elab.ml" 875 31662 31728
type(
  int
)
"m_elab.ml" 875 31662 31690 "m_elab.ml" 875 31662 31728
type(
  unit
)
"m_elab.ml" 872 31438 31492 "m_elab.ml" 876 31729 31756
type(
  unit
)
"m_elab.ml" 871 31372 31432 "m_elab.ml" 876 31729 31760
type(
  unit
)
"m_elab.ml" 871 31372 31392 "m_elab.ml" 876 31729 31760
type(
  unit
)
"m_elab.ml" 869 31280 31300 "m_elab.ml" 876 31729 31760
type(
  unit
)
"m_elab.ml" 877 31761 31779 "m_elab.ml" 877 31761 31780
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 877 31761 31784 "m_elab.ml" 877 31761 31786
type(
  unit
)
"m_elab.ml" 867 31175 31191 "m_elab.ml" 877 31761 31786
type(
  unit
)
"m_elab.ml" 865 31093 31115 "m_elab.ml" 878 31787 31806
type(
  unit
)
"m_elab.ml" 879 31807 31821 "m_elab.ml" 879 31807 31822
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 880 31826 31846 "m_elab.ml" 880 31826 31850
type(
  Expr.T.expr
)
ident(
  def fact "m_elab.ml" 881 31890 31906 "m_elab.ml" 882 31953 32007
)
"m_elab.ml" 880 31826 31853 "m_elab.ml" 880 31826 31878
type(
  Expr.T.ctx -> Expr.T.expr -> Expr.T.expr
)
ident(
  int_ref Expr.Levels.compute_level "expr.mli" 712 18148 18152 "expr.mli" 713 18171 18198
)
"m_elab.ml" 880 31826 31879 "m_elab.ml" 880 31826 31881
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 863 31021 31044 "m_elab.ml" 863 31021 31046
)
"m_elab.ml" 880 31826 31882 "m_elab.ml" 880 31826 31886
type(
  Expr.T.expr
)
ident(
  int_ref fact "m_elab.ml" 863 31021 31047 "m_elab.ml" 863 31021 31051
)
"m_elab.ml" 880 31826 31853 "m_elab.ml" 880 31826 31886
type(
  Expr.T.expr
)
"m_elab.ml" 881 31890 31910 "m_elab.ml" 881 31890 31920
type(
  int
)
ident(
  def expr_level "m_elab.ml" 882 31953 31969 "m_elab.ml" 882 31953 32007
)
"m_elab.ml" 881 31890 31923 "m_elab.ml" 881 31890 31944
type(
  Expr.T.expr -> int
)
ident(
  int_ref Expr.Levels.get_level "expr.mli" 696 17732 17736 "expr.mli" 697 17751 17785
)
"m_elab.ml" 881 31890 31945 "m_elab.ml" 881 31890 31949
type(
  Expr.T.expr
)
ident(
  int_ref fact "m_elab.ml" 880 31826 31846 "m_elab.ml" 880 31826 31850
)
"m_elab.ml" 881 31890 31923 "m_elab.ml" 881 31890 31949
type(
  int
)
"m_elab.ml" 882 31953 31969 "m_elab.ml" 882 31953 31978
type(
  int ref
)
ident(
  int_ref max_level "m_elab.ml" 862 30988 31000 "m_elab.ml" 862 30988 31009
)
"m_elab.ml" 882 31953 31979 "m_elab.ml" 882 31953 31981
type(
  int ref -> int -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 882 31953 31982 "m_elab.ml" 882 31953 31985
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.max "stdlib.mli" 186 7963 7963 "stdlib.mli" 186 7963 7987
)
"m_elab.ml" 882 31953 31986 "m_elab.ml" 882 31953 31996
type(
  int
)
ident(
  int_ref expr_level "m_elab.ml" 881 31890 31910 "m_elab.ml" 881 31890 31920
)
"m_elab.ml" 882 31953 31997 "m_elab.ml" 882 31953 31998
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 882 31953 31998 "m_elab.ml" 882 31953 32007
type(
  int ref
)
ident(
  int_ref max_level "m_elab.ml" 862 30988 31000 "m_elab.ml" 862 30988 31009
)
"m_elab.ml" 882 31953 31997 "m_elab.ml" 882 31953 32007
type(
  int
)
"m_elab.ml" 882 31953 31982 "m_elab.ml" 882 31953 32007
type(
  int
)
"m_elab.ml" 882 31953 31969 "m_elab.ml" 882 31953 32007
type(
  unit
)
"m_elab.ml" 881 31890 31906 "m_elab.ml" 882 31953 32007
type(
  unit
)
"m_elab.ml" 880 31826 31842 "m_elab.ml" 882 31953 32007
type(
  unit
)
"m_elab.ml" 864 31054 31066 "m_elab.ml" 883 32008 32023
type(
  unit
)
"m_elab.ml" 885 32039 32051 "m_elab.ml" 885 32039 32062
type(
  int -> Expr.T.hyp_ Property.wrapped -> unit
)
ident(
  def check_steps "m_elab.ml" 913 33253 33261 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 885 32039 32063 "m_elab.ml" 885 32039 32064
type(
  int
)
ident(
  def n "m_elab.ml" 885 32039 32065 "m_elab.ml" 910 33166 33187
)
"m_elab.ml" 885 32039 32065 "m_elab.ml" 885 32039 32068
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def hyp "m_elab.ml" 886 32071 32083 "m_elab.ml" 910 33166 33187
)
"m_elab.ml" 886 32071 32089 "m_elab.ml" 886 32071 32092
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref hyp "m_elab.ml" 885 32039 32065 "m_elab.ml" 885 32039 32068
)
"m_elab.ml" 886 32071 32089 "m_elab.ml" 886 32071 32097
type(
  Expr.T.hyp_
)
"m_elab.ml" 902 32817 32846 "m_elab.ml" 902 32817 32847
type(
  bool
)
"m_elab.ml" 902 32817 32843 "m_elab.ml" 902 32817 32847
type(
  Expr.T.expr_
)
"m_elab.ml" 902 32817 32837 "m_elab.ml" 902 32817 32848
type(
  Expr.T.expr
)
"m_elab.ml" 902 32817 32850 "m_elab.ml" 902 32817 32851
type(
  Expr.T.visibility
)
"m_elab.ml" 902 32817 32853 "m_elab.ml" 902 32817 32854
type(
  Expr.T.time
)
"m_elab.ml" 902 32817 32831 "m_elab.ml" 902 32817 32855
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 902 32817 32859 "m_elab.ml" 902 32817 32861
type(
  unit
)
"m_elab.ml" 903 32881 32901 "m_elab.ml" 903 32881 32905
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 904 32922 32938 "m_elab.ml" 909 33130 33165
)
"m_elab.ml" 903 32881 32907 "m_elab.ml" 903 32881 32914
type(
  Expr.T.visibility
)
"m_elab.ml" 903 32881 32916 "m_elab.ml" 903 32881 32917
type(
  Expr.T.time
)
"m_elab.ml" 903 32881 32895 "m_elab.ml" 903 32881 32918
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 904 32922 32942 "m_elab.ml" 904 32922 32945
type(
  Expr.T.ctx
)
ident(
  def cx_ "m_elab.ml" 909 33130 33146 "m_elab.ml" 909 33130 33165
)
"m_elab.ml" 904 32922 32948 "m_elab.ml" 904 32922 32963
type(
  Expr.T.ctx -> int -> Expr.T.ctx
)
ident(
  int_ref Expr.T.cx_front "expr.mli" 339 8716 8718 "expr.mli" 339 8716 8750
)
"m_elab.ml" 904 32922 32964 "m_elab.ml" 904 32922 32966
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 904 32922 32969 "m_elab.ml" 904 32922 32979
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 904 32922 32980 "m_elab.ml" 904 32922 32982
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 904 32922 32968 "m_elab.ml" 904 32922 32983
type(
  int
)
"m_elab.ml" 904 32922 32984 "m_elab.ml" 904 32922 32985
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 904 32922 32986 "m_elab.ml" 904 32922 32987
type(
  int
)
ident(
  int_ref n "m_elab.ml" 885 32039 32063 "m_elab.ml" 885 32039 32064
)
"m_elab.ml" 904 32922 32967 "m_elab.ml" 904 32922 32988
type(
  int
)
"m_elab.ml" 904 32922 32948 "m_elab.ml" 904 32922 32988
type(
  Expr.T.ctx
)
"m_elab.ml" 909 33130 33146 "m_elab.ml" 909 33130 33156
type(
  Expr.T.ctx -> Expr.T.expr -> unit
)
ident(
  int_ref check_step "m_elab.ml" 863 31021 31033 "m_elab.ml" 863 31021 31043
)
"m_elab.ml" 909 33130 33157 "m_elab.ml" 909 33130 33160
type(
  Expr.T.ctx
)
ident(
  int_ref cx_ "m_elab.ml" 904 32922 32942 "m_elab.ml" 904 32922 32945
)
"m_elab.ml" 909 33130 33161 "m_elab.ml" 909 33130 33165
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 903 32881 32901 "m_elab.ml" 903 32881 32905
)
"m_elab.ml" 909 33130 33146 "m_elab.ml" 909 33130 33165
type(
  unit
)
"m_elab.ml" 904 32922 32938 "m_elab.ml" 909 33130 33165
type(
  unit
)
"m_elab.ml" 910 33166 33180 "m_elab.ml" 910 33166 33181
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 910 33166 33185 "m_elab.ml" 910 33166 33187
type(
  unit
)
"m_elab.ml" 886 32071 32083 "m_elab.ml" 910 33166 33187
type(
  unit
)
"m_elab.ml" 913 33253 33265 "m_elab.ml" 913 33253 33270
type(
  bool ref
)
ident(
  def found "m_elab.ml" 914 33286 33294 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 913 33253 33273 "m_elab.ml" 913 33253 33276
type(
  bool -> bool ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 913 33253 33277 "m_elab.ml" 913 33253 33282
type(
  bool
)
"m_elab.ml" 913 33253 33273 "m_elab.ml" 913 33253 33282
type(
  bool ref
)
"m_elab.ml" 914 33286 33298 "m_elab.ml" 914 33286 33318
type(
  int -> Expr.T.hyp_ Property.wrapped -> unit
)
ident(
  def find_proof_directive "m_elab.ml" 930 33923 33931 "m_elab.ml" 949 34576 34616
)
"m_elab.ml" 914 33286 33319 "m_elab.ml" 914 33286 33320
type(
  int
)
ident(
  def n "m_elab.ml" 914 33286 33321 "m_elab.ml" 928 33886 33907
)
"m_elab.ml" 914 33286 33321 "m_elab.ml" 914 33286 33324
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def hyp "m_elab.ml" 915 33327 33339 "m_elab.ml" 928 33886 33907
)
"m_elab.ml" 915 33327 33345 "m_elab.ml" 915 33327 33348
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref hyp "m_elab.ml" 914 33286 33321 "m_elab.ml" 914 33286 33324
)
"m_elab.ml" 915 33327 33345 "m_elab.ml" 915 33327 33353
type(
  Expr.T.hyp_
)
"m_elab.ml" 916 33359 33379 "m_elab.ml" 916 33359 33383
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 917 33400 33416 "m_elab.ml" 927 33866 33885
)
"m_elab.ml" 916 33359 33385 "m_elab.ml" 916 33359 33392
type(
  Expr.T.visibility
)
"m_elab.ml" 916 33359 33394 "m_elab.ml" 916 33359 33395
type(
  Expr.T.time
)
"m_elab.ml" 916 33359 33373 "m_elab.ml" 916 33359 33396
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 917 33400 33420 "m_elab.ml" 917 33400 33423
type(
  Expr.T.ctx
)
ident(
  def cx_ "m_elab.ml" 918 33470 33486 "m_elab.ml" 927 33866 33885
)
"m_elab.ml" 917 33400 33426 "m_elab.ml" 917 33400 33441
type(
  Expr.T.ctx -> int -> Expr.T.ctx
)
ident(
  int_ref Expr.T.cx_front "expr.mli" 339 8716 8718 "expr.mli" 339 8716 8750
)
"m_elab.ml" 917 33400 33442 "m_elab.ml" 917 33400 33444
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 917 33400 33447 "m_elab.ml" 917 33400 33457
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 917 33400 33458 "m_elab.ml" 917 33400 33460
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 917 33400 33446 "m_elab.ml" 917 33400 33461
type(
  int
)
"m_elab.ml" 917 33400 33462 "m_elab.ml" 917 33400 33463
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 917 33400 33464 "m_elab.ml" 917 33400 33465
type(
  int
)
ident(
  int_ref n "m_elab.ml" 914 33286 33319 "m_elab.ml" 914 33286 33320
)
"m_elab.ml" 917 33400 33445 "m_elab.ml" 917 33400 33466
type(
  int
)
"m_elab.ml" 917 33400 33426 "m_elab.ml" 917 33400 33466
type(
  Expr.T.ctx
)
"m_elab.ml" 918 33470 33498 "m_elab.ml" 918 33470 33502
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 916 33359 33379 "m_elab.ml" 916 33359 33383
)
"m_elab.ml" 918 33470 33498 "m_elab.ml" 918 33470 33507
type(
  Expr.T.expr_
)
"m_elab.ml" 919 33513 33534 "m_elab.ml" 919 33513 33535
type(
  int
)
ident(
  def n "m_elab.ml" 919 33513 33539 "m_elab.ml" 925 33816 33839
)
"m_elab.ml" 919 33513 33531 "m_elab.ml" 919 33513 33535
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 920 33545 33569 "m_elab.ml" 920 33545 33572
type(
  Expr.T.hyp
)
ident(
  def hyp "m_elab.ml" 921 33604 33624 "m_elab.ml" 924 33786 33815
)
"m_elab.ml" 920 33545 33575 "m_elab.ml" 920 33545 33594
type(
  Expr.T.ctx -> int -> Expr.T.hyp
)
ident(
  int_ref E_t.get_val_from_id "e_t.mli" 359 7973 7973 "e_t.mli" 360 7994 8026
)
"m_elab.ml" 920 33545 33595 "m_elab.ml" 920 33545 33598
type(
  Expr.T.ctx
)
ident(
  int_ref cx_ "m_elab.ml" 917 33400 33420 "m_elab.ml" 917 33400 33423
)
"m_elab.ml" 920 33545 33599 "m_elab.ml" 920 33545 33600
type(
  int
)
ident(
  int_ref n "m_elab.ml" 919 33513 33534 "m_elab.ml" 919 33513 33535
)
"m_elab.ml" 920 33545 33575 "m_elab.ml" 920 33545 33600
type(
  Expr.T.hyp
)
"m_elab.ml" 921 33604 33630 "m_elab.ml" 921 33604 33633
type(
  Expr.T.hyp
)
ident(
  int_ref hyp "m_elab.ml" 920 33545 33569 "m_elab.ml" 920 33545 33572
)
"m_elab.ml" 921 33604 33630 "m_elab.ml" 921 33604 33638
type(
  Expr.T.hyp_
)
"m_elab.ml" 922 33644 33687 "m_elab.ml" 922 33644 33691
type(
  Util.hint
)
ident(
  def name "m_elab.ml" 923 33713 33737 "m_elab.ml" 923 33713 33785
)
"m_elab.ml" 922 33644 33693 "m_elab.ml" 922 33644 33694
type(
  Expr.T.expr
)
"m_elab.ml" 922 33644 33696 "m_elab.ml" 922 33644 33697
type(
  (Util.hint * Expr.T.backend_args) list list
)
"m_elab.ml" 922 33644 33678 "m_elab.ml" 922 33644 33698
type(
  Expr.T.defn_
)
"m_elab.ml" 922 33644 33672 "m_elab.ml" 922 33644 33699
type(
  Expr.T.defn
)
"m_elab.ml" 922 33644 33701 "m_elab.ml" 922 33644 33702
type(
  Expr.T.wheredef
)
"m_elab.ml" 922 33644 33704 "m_elab.ml" 922 33644 33705
type(
  Expr.T.visibility
)
"m_elab.ml" 922 33644 33707 "m_elab.ml" 922 33644 33708
type(
  Expr.T.export
)
"m_elab.ml" 922 33644 33666 "m_elab.ml" 922 33644 33709
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 923 33713 33737 "m_elab.ml" 923 33713 33742
type(
  bool ref
)
ident(
  int_ref found "m_elab.ml" 913 33253 33265 "m_elab.ml" 913 33253 33270
)
"m_elab.ml" 923 33713 33743 "m_elab.ml" 923 33713 33745
type(
  bool ref -> bool -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 923 33713 33746 "m_elab.ml" 923 33713 33747
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 923 33713 33747 "m_elab.ml" 923 33713 33752
type(
  bool ref
)
ident(
  int_ref found "m_elab.ml" 913 33253 33265 "m_elab.ml" 913 33253 33270
)
"m_elab.ml" 923 33713 33746 "m_elab.ml" 923 33713 33752
type(
  bool
)
"m_elab.ml" 923 33713 33753 "m_elab.ml" 923 33713 33755
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( || ) "stdlib.mli" 227 9492 9492 "stdlib.mli" 227 9492 9542
)
"m_elab.ml" 923 33713 33757 "m_elab.ml" 923 33713 33761
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 922 33644 33687 "m_elab.ml" 922 33644 33691
)
"m_elab.ml" 923 33713 33757 "m_elab.ml" 923 33713 33766
type(
  string
)
"m_elab.ml" 923 33713 33767 "m_elab.ml" 923 33713 33768
type(
  string -> string -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 923 33713 33769 "m_elab.ml" 923 33713 33784
type(
  string
)
"m_elab.ml" 923 33713 33756 "m_elab.ml" 923 33713 33785
type(
  bool
)
"m_elab.ml" 923 33713 33746 "m_elab.ml" 923 33713 33785
type(
  bool
)
"m_elab.ml" 923 33713 33737 "m_elab.ml" 923 33713 33785
type(
  unit
)
"m_elab.ml" 924 33786 33808 "m_elab.ml" 924 33786 33809
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 924 33786 33813 "m_elab.ml" 924 33786 33815
type(
  unit
)
"m_elab.ml" 921 33604 33624 "m_elab.ml" 924 33786 33815
type(
  unit
)
"m_elab.ml" 919 33513 33539 "m_elab.ml" 925 33816 33839
type(
  unit
)
"m_elab.ml" 926 33840 33858 "m_elab.ml" 926 33840 33859
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 926 33840 33863 "m_elab.ml" 926 33840 33865
type(
  unit
)
"m_elab.ml" 918 33470 33486 "m_elab.ml" 927 33866 33885
type(
  unit
)
"m_elab.ml" 917 33400 33416 "m_elab.ml" 927 33866 33885
type(
  unit
)
"m_elab.ml" 928 33886 33900 "m_elab.ml" 928 33886 33901
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 928 33886 33905 "m_elab.ml" 928 33886 33907
type(
  unit
)
"m_elab.ml" 915 33327 33339 "m_elab.ml" 928 33886 33907
type(
  unit
)
"m_elab.ml" 930 33923 33931 "m_elab.ml" 930 33923 33941
type(
  (int -> Expr.T.hyp -> unit) -> Expr.T.ctx -> unit
)
ident(
  int_ref Deque.iter "deque.mli" 21 529 529 "deque.mli" 21 529 577
)
"m_elab.ml" 930 33923 33942 "m_elab.ml" 930 33923 33962
type(
  int -> Expr.T.hyp -> unit
)
ident(
  int_ref find_proof_directive "m_elab.ml" 914 33286 33298 "m_elab.ml" 914 33286 33318
)
"m_elab.ml" 930 33923 33963 "m_elab.ml" 930 33923 33965
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 930 33923 33931 "m_elab.ml" 930 33923 33965
type(
  unit
)
"m_elab.ml" 932 33968 33979 "m_elab.ml" 932 33968 33980
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 932 33968 33980 "m_elab.ml" 932 33968 33985
type(
  bool ref
)
ident(
  int_ref found "m_elab.ml" 913 33253 33265 "m_elab.ml" 913 33253 33270
)
"m_elab.ml" 932 33968 33979 "m_elab.ml" 932 33968 33985
type(
  bool
)
"m_elab.ml" 934 34053 34065 "m_elab.ml" 934 34053 34075
type(
  (int -> Expr.T.hyp -> unit) -> Expr.T.ctx -> unit
)
ident(
  int_ref Deque.iter "deque.mli" 21 529 529 "deque.mli" 21 529 577
)
"m_elab.ml" 934 34053 34076 "m_elab.ml" 934 34053 34087
type(
  int -> Expr.T.hyp -> unit
)
ident(
  int_ref check_steps "m_elab.ml" 885 32039 32051 "m_elab.ml" 885 32039 32062
)
"m_elab.ml" 934 34053 34088 "m_elab.ml" 934 34053 34090
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 813 28951 28992 "m_elab.ml" 813 28951 28994
)
"m_elab.ml" 934 34053 34065 "m_elab.ml" 934 34053 34090
type(
  unit
)
"m_elab.ml" 935 34092 34108 "m_elab.ml" 935 34092 34109
type(
  int ref -> int
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 935 34092 34109 "m_elab.ml" 935 34092 34118
type(
  int ref
)
ident(
  int_ref max_level "m_elab.ml" 862 30988 31000 "m_elab.ml" 862 30988 31009
)
"m_elab.ml" 935 34092 34108 "m_elab.ml" 935 34092 34118
type(
  int
)
"m_elab.ml" 935 34092 34119 "m_elab.ml" 935 34092 34120
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( > ) "stdlib.mli" 140 5875 5875 "stdlib.mli" 140 5875 5925
)
"m_elab.ml" 935 34092 34121 "m_elab.ml" 935 34092 34122
type(
  int
)
"m_elab.ml" 935 34092 34107 "m_elab.ml" 935 34092 34123
type(
  bool
)
"m_elab.ml" 937 34151 34167 "m_elab.ml" 937 34151 34179
type(
  ?debug:string ->
  ?at:Proof.T.proof ->
  ?prefix:string ->
  ?nonl:unit ->
  (string -> unit, Format.formatter, unit) format -> string -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 937 34151 34184 "m_elab.ml" 937 34151 34186
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 813 28951 28975 "m_elab.ml" 813 28951 28977
)
type(
  Proof.T.proof option
)
"m_elab.ml" 937 34151 34187 "m_elab.ml" 937 34151 34191
type(
  (string -> unit, Format.formatter, unit) format
)
"m_elab.ml" 938 34192 34213 "m_elab.ml" 938 34192 34265
type(
  string
)
"m_elab.ml" 938 34192 34266 "m_elab.ml" 938 34192 34267
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 939 34268 34288 "m_elab.ml" 939 34268 34299
type(
  string
)
"m_elab.ml" 938 34192 34212 "m_elab.ml" 939 34268 34300
type(
  string
)
"m_elab.ml" 937 34151 34167 "m_elab.ml" 939 34268 34300
type(
  unit
)
"m_elab.ml" 943 34419 34435 "m_elab.ml" 943 34419 34441
type(
  Proof.T.proof -> bool Property.pfuncs -> bool -> Proof.T.proof
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"m_elab.ml" 943 34419 34442 "m_elab.ml" 943 34419 34444
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 813 28951 28975 "m_elab.ml" 813 28951 28977
)
"m_elab.ml" 943 34419 34445 "m_elab.ml" 943 34419 34458
type(
  bool Property.pfuncs
)
ident(
  int_ref Expr.T.enabledaxioms "expr.mli" 348 8956 8958 "expr.mli" 348 8956 8989
)
"m_elab.ml" 943 34419 34459 "m_elab.ml" 943 34419 34464
type(
  bool
)
"m_elab.ml" 943 34419 34435 "m_elab.ml" 943 34419 34464
type(
  Proof.T.proof
)
"m_elab.ml" 936 34129 34145 "m_elab.ml" 944 34465 34484
type(
  Proof.T.proof
)
"m_elab.ml" 946 34502 34518 "m_elab.ml" 946 34502 34524
type(
  Proof.T.proof -> bool Property.pfuncs -> bool -> Proof.T.proof
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"m_elab.ml" 946 34502 34525 "m_elab.ml" 946 34502 34527
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 813 28951 28975 "m_elab.ml" 813 28951 28977
)
"m_elab.ml" 946 34502 34528 "m_elab.ml" 946 34502 34541
type(
  bool Property.pfuncs
)
ident(
  int_ref Expr.T.enabledaxioms "expr.mli" 348 8956 8958 "expr.mli" 348 8956 8989
)
"m_elab.ml" 946 34502 34542 "m_elab.ml" 946 34502 34546
type(
  bool
)
"m_elab.ml" 946 34502 34518 "m_elab.ml" 946 34502 34546
type(
  Proof.T.proof
)
"m_elab.ml" 935 34092 34104 "m_elab.ml" 946 34502 34546
type(
  Proof.T.proof
)
"m_elab.ml" 932 33968 33991 "m_elab.ml" 947 34547 34562
type(
  Proof.T.proof
)
"m_elab.ml" 949 34576 34588 "m_elab.ml" 949 34576 34594
type(
  Proof.T.proof -> bool Property.pfuncs -> bool -> Proof.T.proof
)
ident(
  int_ref Property.assign "property.mli" 80 2747 2747 "property.mli" 80 2747 2803
)
"m_elab.ml" 949 34576 34595 "m_elab.ml" 949 34576 34597
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 813 28951 28975 "m_elab.ml" 813 28951 28977
)
"m_elab.ml" 949 34576 34598 "m_elab.ml" 949 34576 34611
type(
  bool Property.pfuncs
)
ident(
  int_ref Expr.T.enabledaxioms "expr.mli" 348 8956 8958 "expr.mli" 348 8956 8989
)
"m_elab.ml" 949 34576 34612 "m_elab.ml" 949 34576 34616
type(
  bool
)
"m_elab.ml" 949 34576 34588 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 932 33968 33976 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 930 33923 33931 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 914 33286 33294 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 913 33253 33261 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 885 32039 32047 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 863 31021 31029 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 862 30988 30996 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 846 30442 30450 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 815 29076 29084 "m_elab.ml" 949 34576 34616
type(
  Proof.T.proof
)
"m_elab.ml" 665 22969 23000 "m_elab.ml" 950 34617 34620
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
"m_elab.ml" 953 34623 34627 "m_elab.ml" 953 34623 34653
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  def check_enabled_axioms_usage "m_elab.ml" 1062 38577 38577 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 953 34623 34664 "m_elab.ml" 953 34623 34668
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
"m_elab.ml" 957 34731 34776 "m_elab.ml" 957 34731 34781
type(
  bool
)
"m_elab.ml" 959 34783 34814 "m_elab.ml" 959 34783 34816
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 959 34783 34817 "m_elab.ml" 963 34918 34946
)
"m_elab.ml" 959 34783 34817 "m_elab.ml" 959 34783 34819
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 960 34822 34830 "m_elab.ml" 963 34918 34946
)
"m_elab.ml" 960 34822 34854 "m_elab.ml" 960 34822 34859
type(
  bool
)
"m_elab.ml" 960 34822 34830 "m_elab.ml" 960 34822 34859
type(
  unit
)
"m_elab.ml" 961 34861 34873 "m_elab.ml" 961 34861 34876
type(
  unit * Expr.T.hyp Deque.dq
)
ident(
  def scx "m_elab.ml" 962 34891 34899 "m_elab.ml" 963 34918 34946
)
"m_elab.ml" 961 34861 34880 "m_elab.ml" 961 34861 34882
type(
  unit
)
"m_elab.ml" 961 34861 34884 "m_elab.ml" 961 34861 34886
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 959 34783 34814 "m_elab.ml" 959 34783 34816
)
"m_elab.ml" 961 34861 34879 "m_elab.ml" 961 34861 34887
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 962 34891 34899 "m_elab.ml" 962 34891 34903
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 962 34891 34899 "m_elab.ml" 962 34891 34909
type(
  unit Expr.Visit.scx -> Proof.T.proof -> unit
)
"m_elab.ml" 962 34891 34910 "m_elab.ml" 962 34891 34913
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 961 34861 34873 "m_elab.ml" 961 34861 34876
)
"m_elab.ml" 962 34891 34914 "m_elab.ml" 962 34891 34916
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 959 34783 34817 "m_elab.ml" 959 34783 34819
)
"m_elab.ml" 962 34891 34899 "m_elab.ml" 962 34891 34916
type(
  unit
)
"m_elab.ml" 963 34918 34926 "m_elab.ml" 963 34918 34946
type(
  bool
)
"m_elab.ml" 962 34891 34899 "m_elab.ml" 963 34918 34946
type(
  bool
)
"m_elab.ml" 961 34861 34869 "m_elab.ml" 963 34918 34946
type(
  bool
)
"m_elab.ml" 960 34822 34830 "m_elab.ml" 963 34918 34946
type(
  bool
)
"m_elab.ml" 965 34948 34967 "m_elab.ml" 965 34948 34968
type(
  unit
)
"m_elab.ml" 965 34948 34970 "m_elab.ml" 965 34948 34972
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 965 34948 34982 "m_elab.ml" 973 35282 35329
)
"m_elab.ml" 965 34948 34966 "m_elab.ml" 965 34948 34973
type(
  unit * Expr.T.ctx
)
"m_elab.ml" 965 34948 34965 "m_elab.ml" 965 34948 34981
type(
  unit * Expr.T.ctx
)
ident(
  def scx "m_elab.ml" 965 34948 34982 "m_elab.ml" 973 35282 35329
)
"m_elab.ml" 965 34948 34982 "m_elab.ml" 965 34948 34984
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 965 34948 34987 "m_elab.ml" 973 35282 35329
)
"m_elab.ml" 965 34948 34993 "m_elab.ml" 965 34948 34995
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 965 34948 34982 "m_elab.ml" 965 34948 34984
)
"m_elab.ml" 965 34948 34993 "m_elab.ml" 965 34948 35000
type(
  Proof.T.proof_
)
"m_elab.ml" 966 35006 35024 "m_elab.ml" 966 35006 35025
type(
  Proof.T.omission
)
"m_elab.ml" 966 35006 35016 "m_elab.ml" 966 35006 35025
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 966 35006 35034 "m_elab.ml" 966 35006 35035
type(
  string
)
"m_elab.ml" 966 35006 35028 "m_elab.ml" 966 35006 35035
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 966 35006 35016 "m_elab.ml" 966 35006 35035
type(
  Proof.T.proof_
)
"m_elab.ml" 966 35006 35039 "m_elab.ml" 966 35006 35041
type(
  unit
)
"m_elab.ml" 967 35042 35052 "m_elab.ml" 967 35042 35059
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 968 35063 35075 "m_elab.ml" 968 35063 35079
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 968 35063 35075 "m_elab.ml" 968 35063 35092
type(
  Proof.T.proof -> unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit
)
"m_elab.ml" 968 35063 35093 "m_elab.ml" 968 35063 35095
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 965 34948 34982 "m_elab.ml" 965 34948 34984
)
"m_elab.ml" 968 35063 35096 "m_elab.ml" 968 35063 35099
type(
  unit * Expr.T.ctx
)
ident(
  int_ref scx "m_elab.ml" 965 34948 34965 "m_elab.ml" 965 34948 34981
)
"m_elab.ml" 968 35063 35107 "m_elab.ml" 968 35063 35109
type(
  Expr.T.expr list
)
"m_elab.ml" 968 35063 35116 "m_elab.ml" 968 35063 35118
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 968 35063 35100 "m_elab.ml" 968 35063 35119
type(
  Proof.T.usable
)
"m_elab.ml" 968 35063 35120 "m_elab.ml" 968 35063 35125
type(
  bool
)
"m_elab.ml" 968 35063 35075 "m_elab.ml" 968 35063 35125
type(
  unit
)
"m_elab.ml" 969 35126 35140 "m_elab.ml" 969 35126 35146
type(
  Proof.T.usable
)
ident(
  def usable "m_elab.ml" 970 35156 35168 "m_elab.ml" 970 35156 35203
)
"m_elab.ml" 969 35126 35148 "m_elab.ml" 969 35126 35151
type(
  bool
)
ident(
  def onl "m_elab.ml" 970 35156 35168 "m_elab.ml" 970 35156 35203
)
"m_elab.ml" 969 35126 35136 "m_elab.ml" 969 35126 35152
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 970 35156 35168 "m_elab.ml" 970 35156 35172
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 970 35156 35168 "m_elab.ml" 970 35156 35185
type(
  Proof.T.proof -> unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit
)
"m_elab.ml" 970 35156 35186 "m_elab.ml" 970 35156 35188
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 965 34948 34982 "m_elab.ml" 965 34948 34984
)
"m_elab.ml" 970 35156 35189 "m_elab.ml" 970 35156 35192
type(
  unit * Expr.T.ctx
)
ident(
  int_ref scx "m_elab.ml" 965 34948 34965 "m_elab.ml" 965 34948 34981
)
"m_elab.ml" 970 35156 35193 "m_elab.ml" 970 35156 35199
type(
  Proof.T.usable
)
ident(
  int_ref usable "m_elab.ml" 969 35126 35140 "m_elab.ml" 969 35126 35146
)
"m_elab.ml" 970 35156 35200 "m_elab.ml" 970 35156 35203
type(
  bool
)
ident(
  int_ref onl "m_elab.ml" 969 35126 35148 "m_elab.ml" 969 35126 35151
)
"m_elab.ml" 970 35156 35168 "m_elab.ml" 970 35156 35203
type(
  unit
)
"m_elab.ml" 971 35204 35221 "m_elab.ml" 971 35204 35226
type(
  Proof.T.step list
)
ident(
  def inits "m_elab.ml" 972 35236 35248 "m_elab.ml" 973 35282 35329
)
"m_elab.ml" 971 35204 35228 "m_elab.ml" 971 35204 35231
type(
  Proof.T.qed_step
)
ident(
  def qed "m_elab.ml" 972 35236 35248 "m_elab.ml" 973 35282 35329
)
"m_elab.ml" 971 35204 35214 "m_elab.ml" 971 35204 35232
type(
  Proof.T.proof_
)
type(
  Proof.T.proof_
)
"m_elab.ml" 972 35236 35252 "m_elab.ml" 972 35236 35255
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 973 35282 35294 "m_elab.ml" 973 35282 35328
)
"m_elab.ml" 972 35236 35258 "m_elab.ml" 972 35236 35262
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 972 35236 35258 "m_elab.ml" 972 35236 35268
type(
  unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx
)
"m_elab.ml" 972 35236 35269 "m_elab.ml" 972 35236 35272
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 965 34948 34965 "m_elab.ml" 965 34948 34981
)
"m_elab.ml" 972 35236 35273 "m_elab.ml" 972 35236 35278
type(
  Proof.T.step list
)
ident(
  int_ref inits "m_elab.ml" 971 35204 35221 "m_elab.ml" 971 35204 35226
)
"m_elab.ml" 972 35236 35258 "m_elab.ml" 972 35236 35278
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 973 35282 35294 "m_elab.ml" 973 35282 35298
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 973 35282 35294 "m_elab.ml" 973 35282 35304
type(
  unit Expr.Visit.scx -> Proof.T.proof -> unit
)
"m_elab.ml" 973 35282 35305 "m_elab.ml" 973 35282 35308
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 972 35236 35252 "m_elab.ml" 972 35236 35255
)
"m_elab.ml" 973 35282 35310 "m_elab.ml" 973 35282 35323
type(
  Proof.T.qed_step -> Proof.T.proof
)
ident(
  int_ref Proof.T.get_qed_proof "proof.mli" 60 1611 1613 "proof.mli" 60 1611 1667
)
"m_elab.ml" 973 35282 35324 "m_elab.ml" 973 35282 35327
type(
  Proof.T.qed_step
)
ident(
  int_ref qed "m_elab.ml" 971 35204 35228 "m_elab.ml" 971 35204 35231
)
"m_elab.ml" 973 35282 35309 "m_elab.ml" 973 35282 35328
type(
  Proof.T.proof
)
"m_elab.ml" 973 35282 35294 "m_elab.ml" 973 35282 35328
type(
  unit
)
"m_elab.ml" 972 35236 35248 "m_elab.ml" 973 35282 35329
type(
  unit
)
"m_elab.ml" 965 34948 34987 "m_elab.ml" 973 35282 35329
type(
  unit
)
"m_elab.ml" 975 35331 35349 "m_elab.ml" 975 35331 35350
type(
  unit
)
"m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 975 35331 35364 "m_elab.ml" 1033 37590 37619
)
"m_elab.ml" 975 35331 35348 "m_elab.ml" 975 35331 35355
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 975 35331 35347 "m_elab.ml" 975 35331 35363
type(
  unit * Expr.T.hyp Deque.dq
)
ident(
  def scx "m_elab.ml" 975 35331 35364 "m_elab.ml" 1033 37590 37619
)
"m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
type(
  Proof.T.step
)
ident(
  def st "m_elab.ml" 976 35369 35377 "m_elab.ml" 1033 37590 37619
)
"m_elab.ml" 976 35369 35381 "m_elab.ml" 976 35369 35387
type(
  string
)
ident(
  def stepnm "m_elab.ml" 977 35439 35447 "m_elab.ml" 1033 37590 37619
)
"m_elab.ml" 976 35369 35390 "m_elab.ml" 976 35369 35406
type(
  ?anonid:bool -> Proof.T.stepno -> string
)
ident(
  int_ref Proof.T.string_of_stepno "proof.mli" 59 1554 1556 "proof.mli" 59 1554 1610
)
"m_elab.ml" 976 35369 35408 "m_elab.ml" 976 35369 35420
type(
  Proof.T.step -> Proof.T.stepno Property.pfuncs -> Proof.T.stepno
)
ident(
  int_ref Property.get "property.mli" 71 2383 2383 "property.mli" 71 2383 2425
)
"m_elab.ml" 976 35369 35421 "m_elab.ml" 976 35369 35423
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
)
"m_elab.ml" 976 35369 35424 "m_elab.ml" 976 35369 35434
type(
  Proof.T.stepno Property.pfuncs
)
ident(
  int_ref Proof.T.Props.step "proof.mli" 50 1247 1251 "proof.mli" 50 1247 1284
)
"m_elab.ml" 976 35369 35407 "m_elab.ml" 976 35369 35435
type(
  Proof.T.stepno
)
"m_elab.ml" 976 35369 35390 "m_elab.ml" 976 35369 35435
type(
  string
)
"m_elab.ml" 977 35439 35451 "m_elab.ml" 977 35439 35459
type(
  'a Expr.Visit.scx -> 'a Expr.Visit.scx
)
ident(
  def adj_step "m_elab.ml" 982 35637 35645 "m_elab.ml" 1033 37590 37619
)
"m_elab.ml" 977 35439 35460 "m_elab.ml" 977 35439 35463
type(
  'a Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 978 35466 35476 "m_elab.ml" 981 35593 35633
)
"m_elab.ml" 978 35466 35476 "m_elab.ml" 978 35466 35490
type(
  'a Expr.Visit.scx -> Expr.T.hyp -> 'a Expr.Visit.scx
)
ident(
  int_ref Expr.Visit.adj "expr.mli" 541 13601 13603 "expr.mli" 541 13601 13637
)
"m_elab.ml" 978 35466 35491 "m_elab.ml" 978 35466 35494
type(
  'a Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 977 35439 35460 "m_elab.ml" 977 35439 35463
)
"m_elab.ml" 979 35513 35529 "m_elab.ml" 979 35513 35535
type(
  string
)
ident(
  int_ref stepnm "m_elab.ml" 976 35369 35381 "m_elab.ml" 976 35369 35387
)
"m_elab.ml" 979 35513 35536 "m_elab.ml" 979 35513 35538
type(
  string -> Proof.T.step -> Util.hint
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 979 35513 35539 "m_elab.ml" 979 35513 35541
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
)
"m_elab.ml" 979 35513 35529 "m_elab.ml" 979 35513 35541
type(
  Util.hint
)
"m_elab.ml" 980 35543 35562 "m_elab.ml" 980 35543 35567
type(
  bool
)
"m_elab.ml" 980 35543 35559 "m_elab.ml" 980 35543 35567
type(
  Expr.T.expr_
)
"m_elab.ml" 980 35543 35568 "m_elab.ml" 980 35543 35570
type(
  Expr.T.expr_ -> unit Property.wrapped -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 980 35543 35571 "m_elab.ml" 980 35543 35578
type(
  unit Property.wrapped
)
ident(
  int_ref Property.nowhere "property.mli" 95 3174 3174 "property.mli" 95 3174 3200
)
"m_elab.ml" 980 35543 35559 "m_elab.ml" 980 35543 35578
type(
  Expr.T.expr
)
"m_elab.ml" 978 35466 35502 "m_elab.ml" 980 35543 35579
type(
  Expr.T.defn_
)
"m_elab.ml" 980 35543 35580 "m_elab.ml" 980 35543 35582
type(
  Expr.T.defn_ -> Proof.T.step -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 980 35543 35583 "m_elab.ml" 980 35543 35585
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
)
"m_elab.ml" 978 35466 35502 "m_elab.ml" 980 35543 35585
type(
  Expr.T.defn
)
"m_elab.ml" 981 35593 35603 "m_elab.ml" 981 35593 35609
type(
  Expr.T.time
)
"m_elab.ml" 980 35543 35587 "m_elab.ml" 981 35593 35609
type(
  Expr.T.wheredef
)
"m_elab.ml" 981 35593 35611 "m_elab.ml" 981 35593 35618
type(
  Expr.T.visibility
)
"m_elab.ml" 981 35593 35620 "m_elab.ml" 981 35593 35625
type(
  Expr.T.export
)
"m_elab.ml" 978 35466 35496 "m_elab.ml" 981 35593 35626
type(
  Expr.T.hyp_
)
"m_elab.ml" 981 35593 35627 "m_elab.ml" 981 35593 35629
type(
  Expr.T.hyp_ -> Proof.T.step -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 981 35593 35630 "m_elab.ml" 981 35593 35632
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
)
"m_elab.ml" 978 35466 35495 "m_elab.ml" 981 35593 35633
type(
  Expr.T.hyp
)
"m_elab.ml" 978 35466 35476 "m_elab.ml" 981 35593 35633
type(
  'a Expr.Visit.scx
)
"m_elab.ml" 982 35637 35651 "m_elab.ml" 982 35637 35653
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
)
"m_elab.ml" 982 35637 35651 "m_elab.ml" 982 35637 35658
type(
  Proof.T.step_
)
"m_elab.ml" 983 35664 35681 "m_elab.ml" 983 35664 35682
type(
  int
)
ident(
  def m "m_elab.ml" 984 35686 35698 "m_elab.ml" 991 36019 36039
)
"m_elab.ml" 983 35664 35674 "m_elab.ml" 983 35664 35682
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 984 35686 35702 "m_elab.ml" 984 35686 35708
type(
  int
)
ident(
  def nfacts "m_elab.ml" 985 35728 35740 "m_elab.ml" 991 36019 36039
)
"m_elab.ml" 984 35686 35711 "m_elab.ml" 984 35686 35721
type(
  Expr.T.hyp Deque.dq -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 984 35686 35722 "m_elab.ml" 984 35686 35724
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 984 35686 35711 "m_elab.ml" 984 35686 35724
type(
  int
)
"m_elab.ml" 985 35728 35744 "m_elab.ml" 985 35728 35746
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 991 36019 36031 "m_elab.ml" 991 36019 36039
)
"m_elab.ml" 985 35728 35749 "m_elab.ml" 985 35728 35758
type(
  (int -> Expr.T.hyp -> Expr.T.hyp) ->
  Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.map "deque.mli" 20 481 481 "deque.mli" 20 481 528
)
"m_elab.ml" 986 35765 35794 "m_elab.ml" 986 35765 35795
type(
  int
)
ident(
  def n "m_elab.ml" 986 35765 35796 "m_elab.ml" 989 35950 35985
)
"m_elab.ml" 986 35765 35796 "m_elab.ml" 986 35765 35797
type(
  Expr.T.hyp
)
ident(
  def h "m_elab.ml" 986 35765 35801 "m_elab.ml" 989 35950 35985
)
"m_elab.ml" 986 35765 35807 "m_elab.ml" 986 35765 35808
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 986 35765 35796 "m_elab.ml" 986 35765 35797
)
"m_elab.ml" 986 35765 35807 "m_elab.ml" 986 35765 35813
type(
  Expr.T.hyp_
)
"m_elab.ml" 987 35819 35854 "m_elab.ml" 987 35819 35855
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 987 35819 35875 "m_elab.ml" 988 35893 35949
)
"m_elab.ml" 987 35819 35857 "m_elab.ml" 987 35819 35864
type(
  Expr.T.visibility
)
"m_elab.ml" 987 35819 35866 "m_elab.ml" 987 35819 35868
type(
  Expr.T.time
)
ident(
  def tm "m_elab.ml" 987 35819 35875 "m_elab.ml" 988 35893 35949
)
"m_elab.ml" 987 35819 35848 "m_elab.ml" 987 35819 35869
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 987 35819 35875 "m_elab.ml" 987 35819 35876
type(
  int
)
ident(
  int_ref m "m_elab.ml" 983 35664 35681 "m_elab.ml" 983 35664 35682
)
"m_elab.ml" 987 35819 35877 "m_elab.ml" 987 35819 35878
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 987 35819 35879 "m_elab.ml" 987 35819 35880
type(
  int
)
ident(
  int_ref n "m_elab.ml" 986 35765 35794 "m_elab.ml" 986 35765 35795
)
"m_elab.ml" 987 35819 35875 "m_elab.ml" 987 35819 35880
type(
  int
)
"m_elab.ml" 987 35819 35881 "m_elab.ml" 987 35819 35882
type(
  int -> int -> bool
)
ident(
  int_ref Stdlib.( < ) "stdlib.mli" 135 5721 5721 "stdlib.mli" 135 5721 5768
)
"m_elab.ml" 987 35819 35883 "m_elab.ml" 987 35819 35889
type(
  int
)
ident(
  int_ref nfacts "m_elab.ml" 984 35686 35702 "m_elab.ml" 984 35686 35708
)
"m_elab.ml" 987 35819 35875 "m_elab.ml" 987 35819 35889
type(
  bool
)
"m_elab.ml" 988 35893 35930 "m_elab.ml" 988 35893 35931
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 987 35819 35854 "m_elab.ml" 987 35819 35855
)
"m_elab.ml" 988 35893 35933 "m_elab.ml" 988 35893 35939
type(
  Expr.T.visibility
)
"m_elab.ml" 988 35893 35941 "m_elab.ml" 988 35893 35943
type(
  Expr.T.time
)
ident(
  int_ref tm "m_elab.ml" 987 35819 35866 "m_elab.ml" 987 35819 35868
)
"m_elab.ml" 988 35893 35924 "m_elab.ml" 988 35893 35944
type(
  Expr.T.hyp_
)
"m_elab.ml" 988 35893 35945 "m_elab.ml" 988 35893 35947
type(
  Expr.T.hyp_ -> Expr.T.hyp -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 988 35893 35948 "m_elab.ml" 988 35893 35949
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 986 35765 35796 "m_elab.ml" 986 35765 35797
)
"m_elab.ml" 988 35893 35924 "m_elab.ml" 988 35893 35949
type(
  Expr.T.hyp
)
"m_elab.ml" 989 35950 35979 "m_elab.ml" 989 35950 35980
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 989 35950 35984 "m_elab.ml" 989 35950 35985
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 986 35765 35796 "m_elab.ml" 986 35765 35797
)
"m_elab.ml" 986 35765 35801 "m_elab.ml" 989 35950 35985
type(
  Expr.T.hyp
)
"m_elab.ml" 985 35728 35759 "m_elab.ml" 990 35986 36012
type(
  int -> Expr.T.hyp -> Expr.T.hyp
)
"m_elab.ml" 990 35986 36013 "m_elab.ml" 990 35986 36015
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 985 35728 35749 "m_elab.ml" 990 35986 36015
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 991 36019 36032 "m_elab.ml" 991 36019 36034
type(
  unit
)
"m_elab.ml" 991 36019 36036 "m_elab.ml" 991 36019 36038
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 985 35728 35744 "m_elab.ml" 985 35728 35746
)
"m_elab.ml" 991 36019 36031 "m_elab.ml" 991 36019 36039
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 985 35728 35740 "m_elab.ml" 991 36019 36039
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 984 35686 35698 "m_elab.ml" 991 36019 36039
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 992 36040 36055 "m_elab.ml" 992 36040 36062
type(
  Proof.T.usable
)
ident(
  def usables "m_elab.ml" 993 36066 36078 "m_elab.ml" 995 36214 36234
)
"m_elab.ml" 992 36040 36050 "m_elab.ml" 992 36040 36062
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 993 36066 36082 "m_elab.ml" 993 36066 36084
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 994 36139 36151 "m_elab.ml" 995 36214 36234
)
"m_elab.ml" 993 36066 36087 "m_elab.ml" 993 36066 36101
type(
  (Expr.T.hyp Deque.dq ->
   Proof.T.use_def Property.wrapped -> Expr.T.hyp Deque.dq) ->
  Expr.T.hyp Deque.dq ->
  Proof.T.use_def Property.wrapped list -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Ext.List.fold_left "ext.mli" 19 563 565 "ext.mli" 19 563 620
)
"m_elab.ml" 993 36066 36103 "m_elab.ml" 993 36066 36111
type(
  Expr.T.visibility ->
  Expr.T.hyp Deque.dq ->
  Proof.T.use_def Property.wrapped -> Expr.T.hyp Deque.dq
)
ident(
  int_ref set_defn "m_elab.ml" 607 20976 20980 "m_elab.ml" 607 20976 20988
)
"m_elab.ml" 993 36066 36112 "m_elab.ml" 993 36066 36118
type(
  Expr.T.visibility
)
"m_elab.ml" 993 36066 36102 "m_elab.ml" 993 36066 36119
type(
  Expr.T.hyp Deque.dq ->
  Proof.T.use_def Property.wrapped -> Expr.T.hyp Deque.dq
)
"m_elab.ml" 993 36066 36120 "m_elab.ml" 993 36066 36122
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 993 36066 36123 "m_elab.ml" 993 36066 36130
type(
  Proof.T.usable
)
ident(
  int_ref usables "m_elab.ml" 992 36040 36055 "m_elab.ml" 992 36040 36062
)
"m_elab.ml" 993 36066 36123 "m_elab.ml" 993 36066 36135
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 993 36066 36087 "m_elab.ml" 993 36066 36135
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 994 36139 36155 "m_elab.ml" 994 36139 36157
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 995 36214 36226 "m_elab.ml" 995 36214 36234
)
"m_elab.ml" 994 36139 36160 "m_elab.ml" 994 36139 36175
type(
  (Expr.T.expr -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq) ->
  Expr.T.expr list -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Ext.List.fold_right "ext.mli" 20 621 623 "ext.mli" 20 621 679
)
"m_elab.ml" 994 36139 36177 "m_elab.ml" 994 36139 36185
type(
  Expr.T.visibility ->
  Expr.T.expr -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref set_expr "m_elab.ml" 641 22155 22159 "m_elab.ml" 641 22155 22167
)
"m_elab.ml" 994 36139 36186 "m_elab.ml" 994 36139 36192
type(
  Expr.T.visibility
)
"m_elab.ml" 994 36139 36176 "m_elab.ml" 994 36139 36193
type(
  Expr.T.expr -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
"m_elab.ml" 994 36139 36194 "m_elab.ml" 994 36139 36201
type(
  Proof.T.usable
)
ident(
  int_ref usables "m_elab.ml" 992 36040 36055 "m_elab.ml" 992 36040 36062
)
"m_elab.ml" 994 36139 36194 "m_elab.ml" 994 36139 36207
type(
  Expr.T.expr list
)
"m_elab.ml" 994 36139 36208 "m_elab.ml" 994 36139 36210
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 993 36066 36082 "m_elab.ml" 993 36066 36084
)
"m_elab.ml" 994 36139 36160 "m_elab.ml" 994 36139 36210
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 995 36214 36227 "m_elab.ml" 995 36214 36229
type(
  unit
)
"m_elab.ml" 995 36214 36231 "m_elab.ml" 995 36214 36233
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 994 36139 36155 "m_elab.ml" 994 36139 36157
)
"m_elab.ml" 995 36214 36226 "m_elab.ml" 995 36214 36234
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 994 36139 36151 "m_elab.ml" 995 36214 36234
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 993 36066 36078 "m_elab.ml" 995 36214 36234
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 996 36235 36258 "m_elab.ml" 996 36235 36260
type(
  Proof.T.use_def Property.wrapped list
)
"m_elab.ml" 996 36235 36271 "m_elab.ml" 996 36235 36272
type(
  Expr.T.expr
)
ident(
  def f "m_elab.ml" 997 36285 36297 "m_elab.ml" 999 36383 36403
)
"m_elab.ml" 996 36235 36270 "m_elab.ml" 996 36235 36273
type(
  Expr.T.expr list
)
"m_elab.ml" 996 36235 36250 "m_elab.ml" 996 36235 36274
type(
  Proof.T.usable
)
"m_elab.ml" 996 36235 36276 "m_elab.ml" 996 36235 36280
type(
  bool
)
ident(
  def only "m_elab.ml" 997 36285 36297 "m_elab.ml" 999 36383 36403
)
"m_elab.ml" 996 36235 36245 "m_elab.ml" 996 36235 36281
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 997 36285 36301 "m_elab.ml" 997 36285 36303
type(
  Expr.T.time
)
ident(
  def tm "m_elab.ml" 998 36316 36328 "m_elab.ml" 999 36383 36403
)
"m_elab.ml" 997 36285 36306 "m_elab.ml" 997 36285 36312
type(
  Expr.T.time
)
"m_elab.ml" 998 36316 36332 "m_elab.ml" 998 36316 36334
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 999 36383 36395 "m_elab.ml" 999 36383 36403
)
"m_elab.ml" 998 36316 36337 "m_elab.ml" 998 36316 36347
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.snoc "deque.mli" 13 220 220 "deque.mli" 13 220 252
)
"m_elab.ml" 998 36316 36348 "m_elab.ml" 998 36316 36350
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 998 36316 36358 "m_elab.ml" 998 36316 36359
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 996 36235 36271 "m_elab.ml" 996 36235 36272
)
"m_elab.ml" 998 36316 36361 "m_elab.ml" 998 36316 36368
type(
  Expr.T.visibility
)
"m_elab.ml" 998 36316 36370 "m_elab.ml" 998 36316 36372
type(
  Expr.T.time
)
ident(
  int_ref tm "m_elab.ml" 997 36285 36301 "m_elab.ml" 997 36285 36303
)
"m_elab.ml" 998 36316 36352 "m_elab.ml" 998 36316 36373
type(
  Expr.T.hyp_
)
"m_elab.ml" 998 36316 36374 "m_elab.ml" 998 36316 36376
type(
  Expr.T.hyp_ -> Expr.T.expr -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 998 36316 36377 "m_elab.ml" 998 36316 36378
type(
  Expr.T.expr
)
ident(
  int_ref f "m_elab.ml" 996 36235 36271 "m_elab.ml" 996 36235 36272
)
"m_elab.ml" 998 36316 36351 "m_elab.ml" 998 36316 36379
type(
  Expr.T.hyp
)
"m_elab.ml" 998 36316 36337 "m_elab.ml" 998 36316 36379
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 999 36383 36396 "m_elab.ml" 999 36383 36398
type(
  unit
)
"m_elab.ml" 999 36383 36400 "m_elab.ml" 999 36383 36402
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 998 36316 36332 "m_elab.ml" 998 36316 36334
)
"m_elab.ml" 999 36383 36395 "m_elab.ml" 999 36383 36403
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 998 36316 36328 "m_elab.ml" 999 36383 36403
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 997 36285 36297 "m_elab.ml" 999 36383 36403
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1000 36404 36422 "m_elab.ml" 1000 36404 36424
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1001 36434 36446 "m_elab.ml" 1011 36877 36897
)
"m_elab.ml" 1000 36404 36426 "m_elab.ml" 1000 36404 36429
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 1001 36434 36446 "m_elab.ml" 1011 36877 36897
)
"m_elab.ml" 1000 36404 36414 "m_elab.ml" 1000 36404 36430
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1001 36434 36450 "m_elab.ml" 1001 36434 36452
type(
  unit
)
type(
  unit
)
"m_elab.ml" 1003 36493 36513 "m_elab.ml" 1003 36493 36516
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1004 36574 36590 "m_elab.ml" 1007 36720 36754
)
"m_elab.ml" 1003 36493 36519 "m_elab.ml" 1003 36493 36534
type(
  unit Expr.Visit.scx -> Expr.T.hyp list -> unit Expr.Visit.scx
)
ident(
  int_ref Expr.Visit.adjs "expr.mli" 542 13638 13640 "expr.mli" 542 13638 13679
)
"m_elab.ml" 1003 36493 36536 "m_elab.ml" 1003 36493 36538
type(
  unit
)
"m_elab.ml" 1003 36493 36540 "m_elab.ml" 1003 36493 36542
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 1003 36493 36535 "m_elab.ml" 1003 36493 36543
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1003 36493 36545 "m_elab.ml" 1003 36493 36558
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp list
)
ident(
  int_ref Deque.to_list "deque.mli" 35 1014 1014 "deque.mli" 35 1014 1044
)
"m_elab.ml" 1003 36493 36559 "m_elab.ml" 1003 36493 36561
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1000 36404 36422 "m_elab.ml" 1000 36404 36424
)
"m_elab.ml" 1003 36493 36559 "m_elab.ml" 1003 36493 36569
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1003 36493 36544 "m_elab.ml" 1003 36493 36570
type(
  Expr.T.hyp list
)
"m_elab.ml" 1003 36493 36519 "m_elab.ml" 1003 36493 36570
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1004 36574 36594 "m_elab.ml" 1004 36574 36597
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1005 36626 36642 "m_elab.ml" 1007 36720 36754
)
"m_elab.ml" 1004 36574 36600 "m_elab.ml" 1004 36574 36616
type(
  unit Expr.Visit.scx -> int -> unit Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 1004 36574 36617 "m_elab.ml" 1004 36574 36620
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1003 36493 36513 "m_elab.ml" 1003 36493 36516
)
"m_elab.ml" 1004 36574 36621 "m_elab.ml" 1004 36574 36622
type(
  int
)
"m_elab.ml" 1004 36574 36600 "m_elab.ml" 1004 36574 36622
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1005 36626 36646 "m_elab.ml" 1005 36626 36649
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1006 36668 36684 "m_elab.ml" 1007 36720 36754
)
"m_elab.ml" 1005 36626 36652 "m_elab.ml" 1005 36626 36660
type(
  unit Expr.Visit.scx -> unit Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 977 35439 35451 "m_elab.ml" 977 35439 35459
)
"m_elab.ml" 1005 36626 36661 "m_elab.ml" 1005 36626 36664
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1004 36574 36594 "m_elab.ml" 1004 36574 36597
)
"m_elab.ml" 1005 36626 36652 "m_elab.ml" 1005 36626 36664
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1006 36668 36688 "m_elab.ml" 1006 36668 36691
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1007 36720 36736 "m_elab.ml" 1007 36720 36754
)
"m_elab.ml" 1006 36668 36694 "m_elab.ml" 1006 36668 36710
type(
  unit Expr.Visit.scx -> int -> unit Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 1006 36668 36711 "m_elab.ml" 1006 36668 36714
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1005 36626 36646 "m_elab.ml" 1005 36626 36649
)
"m_elab.ml" 1006 36668 36715 "m_elab.ml" 1006 36668 36716
type(
  int
)
"m_elab.ml" 1006 36668 36694 "m_elab.ml" 1006 36668 36716
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1007 36720 36736 "m_elab.ml" 1007 36720 36740
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 1007 36720 36736 "m_elab.ml" 1007 36720 36746
type(
  unit Expr.Visit.scx -> Proof.T.proof -> unit
)
"m_elab.ml" 1007 36720 36747 "m_elab.ml" 1007 36720 36750
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1006 36668 36688 "m_elab.ml" 1006 36668 36691
)
"m_elab.ml" 1007 36720 36751 "m_elab.ml" 1007 36720 36754
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 1000 36404 36426 "m_elab.ml" 1000 36404 36429
)
"m_elab.ml" 1007 36720 36736 "m_elab.ml" 1007 36720 36754
type(
  unit
)
"m_elab.ml" 1006 36668 36684 "m_elab.ml" 1007 36720 36754
type(
  unit
)
"m_elab.ml" 1005 36626 36642 "m_elab.ml" 1007 36720 36754
type(
  unit
)
"m_elab.ml" 1004 36574 36590 "m_elab.ml" 1007 36720 36754
type(
  unit
)
"m_elab.ml" 1003 36493 36509 "m_elab.ml" 1007 36720 36754
type(
  unit
)
"m_elab.ml" 1008 36758 36774 "m_elab.ml" 1008 36758 36777
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1009 36796 36808 "m_elab.ml" 1011 36877 36897
)
"m_elab.ml" 1008 36758 36780 "m_elab.ml" 1008 36758 36788
type(
  unit Expr.Visit.scx -> unit Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 977 35439 35451 "m_elab.ml" 977 35439 35459
)
"m_elab.ml" 1008 36758 36789 "m_elab.ml" 1008 36758 36792
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 975 35331 35347 "m_elab.ml" 975 35331 35363
)
"m_elab.ml" 1008 36758 36780 "m_elab.ml" 1008 36758 36792
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1009 36796 36812 "m_elab.ml" 1009 36796 36815
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1010 36844 36856 "m_elab.ml" 1011 36877 36897
)
"m_elab.ml" 1009 36796 36818 "m_elab.ml" 1009 36796 36834
type(
  unit Expr.Visit.scx -> int -> unit Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 1009 36796 36835 "m_elab.ml" 1009 36796 36838
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1008 36758 36774 "m_elab.ml" 1008 36758 36777
)
"m_elab.ml" 1009 36796 36839 "m_elab.ml" 1009 36796 36840
type(
  int
)
"m_elab.ml" 1009 36796 36818 "m_elab.ml" 1009 36796 36840
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1010 36844 36861 "m_elab.ml" 1010 36844 36862
type(
  unit
)
"m_elab.ml" 1010 36844 36864 "m_elab.ml" 1010 36844 36866
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1011 36877 36889 "m_elab.ml" 1011 36877 36897
)
"m_elab.ml" 1010 36844 36860 "m_elab.ml" 1010 36844 36867
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1010 36844 36870 "m_elab.ml" 1010 36844 36873
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1009 36796 36812 "m_elab.ml" 1009 36796 36815
)
"m_elab.ml" 1011 36877 36890 "m_elab.ml" 1011 36877 36892
type(
  unit
)
"m_elab.ml" 1011 36877 36894 "m_elab.ml" 1011 36877 36896
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1010 36844 36864 "m_elab.ml" 1010 36844 36866
)
"m_elab.ml" 1011 36877 36889 "m_elab.ml" 1011 36877 36897
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 1010 36844 36856 "m_elab.ml" 1011 36877 36897
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 1009 36796 36808 "m_elab.ml" 1011 36877 36897
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 1008 36758 36770 "m_elab.ml" 1011 36877 36897
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1001 36434 36446 "m_elab.ml" 1011 36877 36897
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1012 36898 36918 "m_elab.ml" 1012 36898 36920
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1013 36930 36942 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1012 36898 36922 "m_elab.ml" 1012 36898 36925
type(
  Proof.T.proof
)
ident(
  def prf "m_elab.ml" 1013 36930 36942 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1012 36898 36908 "m_elab.ml" 1012 36898 36926
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1013 36930 36946 "m_elab.ml" 1013 36930 36948
type(
  unit
)
type(
  unit
)
"m_elab.ml" 1014 36951 36969 "m_elab.ml" 1014 36951 36972
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1015 36991 37005 "m_elab.ml" 1017 37076 37113
)
"m_elab.ml" 1014 36951 36975 "m_elab.ml" 1014 36951 36983
type(
  unit Expr.Visit.scx -> unit Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 977 35439 35451 "m_elab.ml" 977 35439 35459
)
"m_elab.ml" 1014 36951 36984 "m_elab.ml" 1014 36951 36987
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 975 35331 35347 "m_elab.ml" 975 35331 35363
)
"m_elab.ml" 1014 36951 36975 "m_elab.ml" 1014 36951 36987
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1015 36991 37009 "m_elab.ml" 1015 36991 37012
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1016 37041 37055 "m_elab.ml" 1017 37076 37113
)
"m_elab.ml" 1015 36991 37015 "m_elab.ml" 1015 36991 37031
type(
  unit Expr.Visit.scx -> int -> unit Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 1015 36991 37032 "m_elab.ml" 1015 36991 37035
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1014 36951 36969 "m_elab.ml" 1014 36951 36972
)
"m_elab.ml" 1015 36991 37036 "m_elab.ml" 1015 36991 37037
type(
  int
)
"m_elab.ml" 1015 36991 37015 "m_elab.ml" 1015 36991 37037
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1016 37041 37060 "m_elab.ml" 1016 37041 37061
type(
  unit
)
"m_elab.ml" 1016 37041 37063 "m_elab.ml" 1016 37041 37065
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1017 37076 37090 "m_elab.ml" 1017 37076 37113
)
"m_elab.ml" 1016 37041 37059 "m_elab.ml" 1016 37041 37066
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1016 37041 37069 "m_elab.ml" 1016 37041 37072
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1015 36991 37009 "m_elab.ml" 1015 36991 37012
)
"m_elab.ml" 1017 37076 37090 "m_elab.ml" 1017 37076 37094
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
"m_elab.ml" 1017 37076 37090 "m_elab.ml" 1017 37076 37100
type(
  unit Expr.Visit.scx -> Proof.T.proof -> unit
)
"m_elab.ml" 1017 37076 37102 "m_elab.ml" 1017 37076 37104
type(
  unit
)
"m_elab.ml" 1017 37076 37106 "m_elab.ml" 1017 37076 37108
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1016 37041 37063 "m_elab.ml" 1016 37041 37065
)
"m_elab.ml" 1017 37076 37101 "m_elab.ml" 1017 37076 37109
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1017 37076 37110 "m_elab.ml" 1017 37076 37113
type(
  Proof.T.proof
)
ident(
  int_ref prf "m_elab.ml" 1012 36898 36922 "m_elab.ml" 1012 36898 36925
)
"m_elab.ml" 1017 37076 37090 "m_elab.ml" 1017 37076 37113
type(
  unit
)
"m_elab.ml" 1016 37041 37055 "m_elab.ml" 1017 37076 37113
type(
  unit
)
"m_elab.ml" 1015 36991 37005 "m_elab.ml" 1017 37076 37113
type(
  unit
)
"m_elab.ml" 1014 36951 36965 "m_elab.ml" 1017 37076 37113
type(
  unit
)
"m_elab.ml" 1019 37129 37145 "m_elab.ml" 1019 37129 37148
type(
  unit * Expr.T.hyp Deque.dq
)
ident(
  def scx "m_elab.ml" 1020 37163 37175 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1019 37129 37152 "m_elab.ml" 1019 37129 37154
type(
  unit
)
"m_elab.ml" 1019 37129 37156 "m_elab.ml" 1019 37129 37158
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 1019 37129 37151 "m_elab.ml" 1019 37129 37159
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 1020 37163 37179 "m_elab.ml" 1020 37163 37182
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1021 37235 37247 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1020 37163 37185 "m_elab.ml" 1020 37163 37200
type(
  unit Expr.Visit.scx -> Expr.T.hyp list -> unit Expr.Visit.scx
)
ident(
  int_ref Expr.Visit.adjs "expr.mli" 542 13638 13640 "expr.mli" 542 13638 13679
)
"m_elab.ml" 1020 37163 37201 "m_elab.ml" 1020 37163 37204
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1019 37129 37145 "m_elab.ml" 1019 37129 37148
)
"m_elab.ml" 1020 37163 37206 "m_elab.ml" 1020 37163 37219
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp list
)
ident(
  int_ref Deque.to_list "deque.mli" 35 1014 1014 "deque.mli" 35 1014 1044
)
"m_elab.ml" 1020 37163 37220 "m_elab.ml" 1020 37163 37222
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1012 36898 36918 "m_elab.ml" 1012 36898 36920
)
"m_elab.ml" 1020 37163 37220 "m_elab.ml" 1020 37163 37230
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1020 37163 37205 "m_elab.ml" 1020 37163 37231
type(
  Expr.T.hyp list
)
"m_elab.ml" 1020 37163 37185 "m_elab.ml" 1020 37163 37231
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1021 37235 37251 "m_elab.ml" 1021 37235 37254
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1022 37283 37295 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1021 37235 37257 "m_elab.ml" 1021 37235 37273
type(
  unit Expr.Visit.scx -> int -> unit Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 1021 37235 37274 "m_elab.ml" 1021 37235 37277
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1020 37163 37179 "m_elab.ml" 1020 37163 37182
)
"m_elab.ml" 1021 37235 37278 "m_elab.ml" 1021 37235 37279
type(
  int
)
"m_elab.ml" 1021 37235 37257 "m_elab.ml" 1021 37235 37279
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1022 37283 37299 "m_elab.ml" 1022 37283 37302
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1023 37321 37333 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1022 37283 37305 "m_elab.ml" 1022 37283 37313
type(
  unit Expr.Visit.scx -> unit Expr.Visit.scx
)
ident(
  int_ref adj_step "m_elab.ml" 977 35439 35451 "m_elab.ml" 977 35439 35459
)
"m_elab.ml" 1022 37283 37314 "m_elab.ml" 1022 37283 37317
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1021 37235 37251 "m_elab.ml" 1021 37235 37254
)
"m_elab.ml" 1022 37283 37305 "m_elab.ml" 1022 37283 37317
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1023 37321 37337 "m_elab.ml" 1023 37321 37340
type(
  unit Expr.Visit.scx
)
ident(
  def scx "m_elab.ml" 1024 37369 37381 "m_elab.ml" 1024 37369 37384
)
"m_elab.ml" 1023 37321 37343 "m_elab.ml" 1023 37321 37359
type(
  unit Expr.Visit.scx -> int -> unit Expr.Visit.scx
)
ident(
  int_ref Proof.Visit.bump "proof.mli" 88 2408 2410 "proof.mli" 88 2408 2444
)
"m_elab.ml" 1023 37321 37360 "m_elab.ml" 1023 37321 37363
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1022 37283 37299 "m_elab.ml" 1022 37283 37302
)
"m_elab.ml" 1023 37321 37364 "m_elab.ml" 1023 37321 37365
type(
  int
)
"m_elab.ml" 1023 37321 37343 "m_elab.ml" 1023 37321 37365
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1024 37369 37381 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1023 37321 37337 "m_elab.ml" 1023 37321 37340
)
"m_elab.ml" 1023 37321 37333 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1022 37283 37295 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1021 37235 37247 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1020 37163 37175 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1019 37129 37141 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1013 36930 36942 "m_elab.ml" 1024 37369 37384
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1025 37385 37401 "m_elab.ml" 1025 37385 37402
type(
  Proof.T.proof
)
type(
  Expr.T.expr
)
"m_elab.ml" 1025 37385 37395 "m_elab.ml" 1025 37385 37402
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1026 37403 37418 "m_elab.ml" 1026 37403 37419
type(
  Expr.T.expr
)
"m_elab.ml" 1026 37403 37413 "m_elab.ml" 1026 37403 37419
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1025 37385 37395 "m_elab.ml" 1026 37403 37419
type(
  Proof.T.step_
)
"m_elab.ml" 1027 37420 37435 "m_elab.ml" 1027 37420 37436
type(
  Expr.T.bound list
)
"m_elab.ml" 1027 37420 37430 "m_elab.ml" 1027 37420 37436
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1025 37385 37395 "m_elab.ml" 1027 37420 37436
type(
  Proof.T.step_
)
"m_elab.ml" 1028 37437 37455 "m_elab.ml" 1028 37437 37456
type(
  Expr.T.expr list
)
"m_elab.ml" 1028 37437 37447 "m_elab.ml" 1028 37437 37456
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1025 37385 37395 "m_elab.ml" 1028 37437 37456
type(
  Proof.T.step_
)
"m_elab.ml" 1029 37457 37472 "m_elab.ml" 1029 37457 37473
type(
  Proof.T.proof
)
type(
  Expr.T.expr
)
type(
  Expr.T.bound list
)
"m_elab.ml" 1029 37457 37467 "m_elab.ml" 1029 37457 37473
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1025 37385 37395 "m_elab.ml" 1029 37457 37473
type(
  Proof.T.step_
)
"m_elab.ml" 1030 37477 37496 "m_elab.ml" 1030 37477 37501
type(
  bool
)
"m_elab.ml" 1030 37477 37489 "m_elab.ml" 1030 37477 37501
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1031 37541 37551 "m_elab.ml" 1031 37541 37552
type(
  Proof.T.step_
)
type(
  Proof.T.step_
)
"m_elab.ml" 1032 37556 37572 "m_elab.ml" 1032 37556 37575
type(
  unit * Expr.T.hyp Deque.dq
)
ident(
  def scx "m_elab.ml" 1033 37590 37602 "m_elab.ml" 1033 37590 37619
)
"m_elab.ml" 1032 37556 37579 "m_elab.ml" 1032 37556 37581
type(
  unit
)
"m_elab.ml" 1032 37556 37583 "m_elab.ml" 1032 37556 37585
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 975 35331 35352 "m_elab.ml" 975 35331 35354
)
"m_elab.ml" 1032 37556 37578 "m_elab.ml" 1032 37556 37586
type(
  unit * Expr.T.hyp Deque.dq
)
"m_elab.ml" 1033 37590 37602 "m_elab.ml" 1033 37590 37607
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  ext_ref self-4
)
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  int_ref super "m_elab.ml" 954 34677 34689 "m_elab.ml" 955 34696 34720
)
"m_elab.ml" 1033 37590 37602 "m_elab.ml" 1033 37590 37612
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit > ->
  unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx
)
ident(
  ext_ref step
)
type(
  unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx
)
type(
  unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx
)
"m_elab.ml" 1033 37590 37613 "m_elab.ml" 1033 37590 37616
type(
  unit Expr.Visit.scx
)
ident(
  int_ref scx "m_elab.ml" 1032 37556 37572 "m_elab.ml" 1032 37556 37575
)
"m_elab.ml" 1033 37590 37617 "m_elab.ml" 1033 37590 37619
type(
  Proof.T.step
)
ident(
  int_ref st "m_elab.ml" 975 35331 35364 "m_elab.ml" 975 35331 35366
)
"m_elab.ml" 1033 37590 37602 "m_elab.ml" 1033 37590 37619
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1032 37556 37568 "m_elab.ml" 1033 37590 37619
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 982 35637 35645 "m_elab.ml" 1033 37590 37619
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 977 35439 35447 "m_elab.ml" 1033 37590 37619
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 976 35369 35377 "m_elab.ml" 1033 37590 37619
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1035 37621 37645 "m_elab.ml" 1035 37621 37647
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1035 37621 37648 "m_elab.ml" 1057 38474 38489
)
"m_elab.ml" 1035 37621 37649 "m_elab.ml" 1035 37621 37650
type(
  unit
)
"m_elab.ml" 1035 37621 37652 "m_elab.ml" 1035 37621 37654
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 1035 37621 37656 "m_elab.ml" 1057 38474 38489
)
"m_elab.ml" 1035 37621 37648 "m_elab.ml" 1035 37621 37655
type(
  unit * Expr.T.ctx
)
"m_elab.ml" 1035 37621 37656 "m_elab.ml" 1035 37621 37663
type(
  Proof.T.usable
)
ident(
  def usables "m_elab.ml" 1035 37621 37664 "m_elab.ml" 1057 38474 38489
)
"m_elab.ml" 1035 37621 37664 "m_elab.ml" 1035 37621 37668
type(
  bool
)
ident(
  def only "m_elab.ml" 1036 37671 37679 "m_elab.ml" 1057 38474 38489
)
"m_elab.ml" 1036 37671 37683 "m_elab.ml" 1036 37671 37688
type(
  bool ref
)
ident(
  def found "m_elab.ml" 1038 37754 37762 "m_elab.ml" 1057 38474 38489
)
"m_elab.ml" 1036 37671 37691 "m_elab.ml" 1036 37671 37694
type(
  bool -> bool ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 1036 37671 37695 "m_elab.ml" 1036 37671 37700
type(
  bool
)
"m_elab.ml" 1036 37671 37691 "m_elab.ml" 1036 37671 37700
type(
  bool ref
)
"m_elab.ml" 1038 37754 37766 "m_elab.ml" 1038 37754 37773
type(
  int -> Expr.T.hyp_ Property.wrapped -> unit
)
ident(
  def cx_iter "m_elab.ml" 1054 38372 38380 "m_elab.ml" 1057 38474 38489
)
"m_elab.ml" 1038 37754 37774 "m_elab.ml" 1038 37754 37775
type(
  int
)
ident(
  def n "m_elab.ml" 1038 37754 37776 "m_elab.ml" 1052 38335 38356
)
"m_elab.ml" 1038 37754 37776 "m_elab.ml" 1038 37754 37779
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def hyp "m_elab.ml" 1039 37782 37794 "m_elab.ml" 1052 38335 38356
)
"m_elab.ml" 1039 37782 37800 "m_elab.ml" 1039 37782 37803
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref hyp "m_elab.ml" 1038 37754 37776 "m_elab.ml" 1038 37754 37779
)
"m_elab.ml" 1039 37782 37800 "m_elab.ml" 1039 37782 37808
type(
  Expr.T.hyp_
)
"m_elab.ml" 1040 37814 37834 "m_elab.ml" 1040 37814 37838
type(
  Expr.T.expr
)
ident(
  def expr "m_elab.ml" 1041 37849 37865 "m_elab.ml" 1051 38315 38334
)
"m_elab.ml" 1040 37814 37840 "m_elab.ml" 1040 37814 37841
type(
  Expr.T.visibility
)
"m_elab.ml" 1040 37814 37843 "m_elab.ml" 1040 37814 37844
type(
  Expr.T.time
)
"m_elab.ml" 1040 37814 37828 "m_elab.ml" 1040 37814 37845
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 1041 37849 37869 "m_elab.ml" 1041 37849 37872
type(
  Expr.T.ctx
)
ident(
  def cx_ "m_elab.ml" 1042 37919 37935 "m_elab.ml" 1051 38315 38334
)
"m_elab.ml" 1041 37849 37875 "m_elab.ml" 1041 37849 37890
type(
  Expr.T.ctx -> int -> Expr.T.ctx
)
ident(
  int_ref Expr.T.cx_front "expr.mli" 339 8716 8718 "expr.mli" 339 8716 8750
)
"m_elab.ml" 1041 37849 37891 "m_elab.ml" 1041 37849 37893
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1035 37621 37652 "m_elab.ml" 1035 37621 37654
)
"m_elab.ml" 1041 37849 37896 "m_elab.ml" 1041 37849 37906
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 1041 37849 37907 "m_elab.ml" 1041 37849 37909
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1035 37621 37652 "m_elab.ml" 1035 37621 37654
)
"m_elab.ml" 1041 37849 37895 "m_elab.ml" 1041 37849 37910
type(
  int
)
"m_elab.ml" 1041 37849 37911 "m_elab.ml" 1041 37849 37912
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( - ) "stdlib.mli" 352 13775 13775 "stdlib.mli" 352 13775 13821
)
"m_elab.ml" 1041 37849 37913 "m_elab.ml" 1041 37849 37914
type(
  int
)
ident(
  int_ref n "m_elab.ml" 1038 37754 37774 "m_elab.ml" 1038 37754 37775
)
"m_elab.ml" 1041 37849 37894 "m_elab.ml" 1041 37849 37915
type(
  int
)
"m_elab.ml" 1041 37849 37875 "m_elab.ml" 1041 37849 37915
type(
  Expr.T.ctx
)
"m_elab.ml" 1042 37919 37947 "m_elab.ml" 1042 37919 37951
type(
  Expr.T.expr
)
ident(
  int_ref expr "m_elab.ml" 1040 37814 37834 "m_elab.ml" 1040 37814 37838
)
"m_elab.ml" 1042 37919 37947 "m_elab.ml" 1042 37919 37956
type(
  Expr.T.expr_
)
"m_elab.ml" 1043 37962 37983 "m_elab.ml" 1043 37962 37984
type(
  int
)
ident(
  def n "m_elab.ml" 1043 37962 37988 "m_elab.ml" 1049 38265 38288
)
"m_elab.ml" 1043 37962 37980 "m_elab.ml" 1043 37962 37984
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 1044 37994 38018 "m_elab.ml" 1044 37994 38021
type(
  Expr.T.hyp
)
ident(
  def hyp "m_elab.ml" 1045 38053 38073 "m_elab.ml" 1048 38235 38264
)
"m_elab.ml" 1044 37994 38024 "m_elab.ml" 1044 37994 38043
type(
  Expr.T.ctx -> int -> Expr.T.hyp
)
ident(
  int_ref E_t.get_val_from_id "e_t.mli" 359 7973 7973 "e_t.mli" 360 7994 8026
)
"m_elab.ml" 1044 37994 38044 "m_elab.ml" 1044 37994 38047
type(
  Expr.T.ctx
)
ident(
  int_ref cx_ "m_elab.ml" 1041 37849 37869 "m_elab.ml" 1041 37849 37872
)
"m_elab.ml" 1044 37994 38048 "m_elab.ml" 1044 37994 38049
type(
  int
)
ident(
  int_ref n "m_elab.ml" 1043 37962 37983 "m_elab.ml" 1043 37962 37984
)
"m_elab.ml" 1044 37994 38024 "m_elab.ml" 1044 37994 38049
type(
  Expr.T.hyp
)
"m_elab.ml" 1045 38053 38079 "m_elab.ml" 1045 38053 38082
type(
  Expr.T.hyp
)
ident(
  int_ref hyp "m_elab.ml" 1044 37994 38018 "m_elab.ml" 1044 37994 38021
)
"m_elab.ml" 1045 38053 38079 "m_elab.ml" 1045 38053 38087
type(
  Expr.T.hyp_
)
"m_elab.ml" 1046 38093 38136 "m_elab.ml" 1046 38093 38140
type(
  Util.hint
)
ident(
  def name "m_elab.ml" 1047 38162 38186 "m_elab.ml" 1047 38162 38234
)
"m_elab.ml" 1046 38093 38142 "m_elab.ml" 1046 38093 38143
type(
  Expr.T.expr
)
"m_elab.ml" 1046 38093 38145 "m_elab.ml" 1046 38093 38146
type(
  (Util.hint * Expr.T.backend_args) list list
)
"m_elab.ml" 1046 38093 38127 "m_elab.ml" 1046 38093 38147
type(
  Expr.T.defn_
)
"m_elab.ml" 1046 38093 38121 "m_elab.ml" 1046 38093 38148
type(
  Expr.T.defn
)
"m_elab.ml" 1046 38093 38150 "m_elab.ml" 1046 38093 38151
type(
  Expr.T.wheredef
)
"m_elab.ml" 1046 38093 38153 "m_elab.ml" 1046 38093 38154
type(
  Expr.T.visibility
)
"m_elab.ml" 1046 38093 38156 "m_elab.ml" 1046 38093 38157
type(
  Expr.T.export
)
"m_elab.ml" 1046 38093 38115 "m_elab.ml" 1046 38093 38158
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 1047 38162 38186 "m_elab.ml" 1047 38162 38191
type(
  bool ref
)
ident(
  int_ref found "m_elab.ml" 1036 37671 37683 "m_elab.ml" 1036 37671 37688
)
"m_elab.ml" 1047 38162 38192 "m_elab.ml" 1047 38162 38194
type(
  bool ref -> bool -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 1047 38162 38195 "m_elab.ml" 1047 38162 38196
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 1047 38162 38196 "m_elab.ml" 1047 38162 38201
type(
  bool ref
)
ident(
  int_ref found "m_elab.ml" 1036 37671 37683 "m_elab.ml" 1036 37671 37688
)
"m_elab.ml" 1047 38162 38195 "m_elab.ml" 1047 38162 38201
type(
  bool
)
"m_elab.ml" 1047 38162 38202 "m_elab.ml" 1047 38162 38204
type(
  bool -> bool -> bool
)
ident(
  int_ref Stdlib.( || ) "stdlib.mli" 227 9492 9492 "stdlib.mli" 227 9492 9542
)
"m_elab.ml" 1047 38162 38206 "m_elab.ml" 1047 38162 38210
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 1046 38093 38136 "m_elab.ml" 1046 38093 38140
)
"m_elab.ml" 1047 38162 38206 "m_elab.ml" 1047 38162 38215
type(
  string
)
"m_elab.ml" 1047 38162 38216 "m_elab.ml" 1047 38162 38217
type(
  string -> string -> bool
)
ident(
  int_ref Stdlib.( = ) "stdlib.mli" 121 5051 5051 "stdlib.mli" 121 5051 5095
)
"m_elab.ml" 1047 38162 38218 "m_elab.ml" 1047 38162 38233
type(
  string
)
"m_elab.ml" 1047 38162 38205 "m_elab.ml" 1047 38162 38234
type(
  bool
)
"m_elab.ml" 1047 38162 38195 "m_elab.ml" 1047 38162 38234
type(
  bool
)
"m_elab.ml" 1047 38162 38186 "m_elab.ml" 1047 38162 38234
type(
  unit
)
"m_elab.ml" 1048 38235 38257 "m_elab.ml" 1048 38235 38258
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 1048 38235 38262 "m_elab.ml" 1048 38235 38264
type(
  unit
)
"m_elab.ml" 1045 38053 38073 "m_elab.ml" 1048 38235 38264
type(
  unit
)
"m_elab.ml" 1043 37962 37988 "m_elab.ml" 1049 38265 38288
type(
  unit
)
"m_elab.ml" 1050 38289 38307 "m_elab.ml" 1050 38289 38308
type(
  Expr.T.expr_
)
type(
  Expr.T.expr_
)
"m_elab.ml" 1050 38289 38312 "m_elab.ml" 1050 38289 38314
type(
  unit
)
"m_elab.ml" 1042 37919 37935 "m_elab.ml" 1051 38315 38334
type(
  unit
)
"m_elab.ml" 1041 37849 37865 "m_elab.ml" 1051 38315 38334
type(
  unit
)
"m_elab.ml" 1052 38335 38349 "m_elab.ml" 1052 38335 38350
type(
  Expr.T.hyp_
)
type(
  Expr.T.hyp_
)
"m_elab.ml" 1052 38335 38354 "m_elab.ml" 1052 38335 38356
type(
  unit
)
"m_elab.ml" 1039 37782 37794 "m_elab.ml" 1052 38335 38356
type(
  unit
)
"m_elab.ml" 1054 38372 38380 "m_elab.ml" 1054 38372 38390
type(
  (int -> Expr.T.hyp -> unit) -> Expr.T.ctx -> unit
)
ident(
  int_ref Deque.iter "deque.mli" 21 529 529 "deque.mli" 21 529 577
)
"m_elab.ml" 1054 38372 38391 "m_elab.ml" 1054 38372 38398
type(
  int -> Expr.T.hyp -> unit
)
ident(
  int_ref cx_iter "m_elab.ml" 1038 37754 37766 "m_elab.ml" 1038 37754 37773
)
"m_elab.ml" 1054 38372 38399 "m_elab.ml" 1054 38372 38401
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1035 37621 37652 "m_elab.ml" 1035 37621 37654
)
"m_elab.ml" 1054 38372 38380 "m_elab.ml" 1054 38372 38401
type(
  unit
)
"m_elab.ml" 1055 38403 38414 "m_elab.ml" 1055 38403 38415
type(
  bool ref -> bool
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 1055 38403 38415 "m_elab.ml" 1055 38403 38420
type(
  bool ref
)
ident(
  int_ref found "m_elab.ml" 1036 37671 37683 "m_elab.ml" 1036 37671 37688
)
"m_elab.ml" 1055 38403 38414 "m_elab.ml" 1055 38403 38420
type(
  bool
)
"m_elab.ml" 1056 38432 38468 "m_elab.ml" 1056 38432 38472
type(
  bool
)
"m_elab.ml" 1055 38403 38426 "m_elab.ml" 1057 38474 38489
type(
  unit
)
"m_elab.ml" 1055 38403 38411 "m_elab.ml" 1057 38474 38489
type(
  unit
)
"m_elab.ml" 1054 38372 38380 "m_elab.ml" 1057 38474 38489
type(
  unit
)
"m_elab.ml" 1038 37754 37762 "m_elab.ml" 1057 38474 38489
type(
  unit
)
"m_elab.ml" 1036 37671 37679 "m_elab.ml" 1057 38474 38489
type(
  unit
)
"m_elab.ml" 953 34623 34656 "m_elab.ml" 1058 38490 38493
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
"m_elab.ml" 1062 38577 38581 "m_elab.ml" 1062 38577 38601
type(
  StringMap.key -> 'a StringMap.t -> 'b Property.wrapped -> unit
)
ident(
  def assert_module_exists "m_elab.ml" 1070 38811 38811 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 1062 38577 38602 "m_elab.ml" 1062 38577 38606
type(
  StringMap.key
)
ident(
  def name "m_elab.ml" 1062 38577 38607 "m_elab.ml" 1066 38757 38764
)
"m_elab.ml" 1062 38577 38607 "m_elab.ml" 1062 38577 38610
type(
  'a StringMap.t
)
ident(
  def mcx "m_elab.ml" 1062 38577 38611 "m_elab.ml" 1066 38757 38764
)
"m_elab.ml" 1062 38577 38611 "m_elab.ml" 1062 38577 38613
type(
  'b Property.wrapped
)
ident(
  def mu "m_elab.ml" 1063 38616 38620 "m_elab.ml" 1066 38757 38764
)
"m_elab.ml" 1063 38616 38623 "m_elab.ml" 1063 38616 38626
type(
  bool -> bool
)
ident(
  int_ref Stdlib.not "stdlib.mli" 211 8889 8889 "stdlib.mli" 211 8889 8929
)
"m_elab.ml" 1063 38616 38628 "m_elab.ml" 1063 38616 38641
type(
  StringMap.key -> 'a StringMap.t -> bool
)
ident(
  int_ref StringMap.mem "map.mli" 79 3076 3080 "map.mli" 79 3076 3108
)
"m_elab.ml" 1063 38616 38642 "m_elab.ml" 1063 38616 38646
type(
  StringMap.key
)
ident(
  int_ref name "m_elab.ml" 1062 38577 38602 "m_elab.ml" 1062 38577 38606
)
"m_elab.ml" 1063 38616 38647 "m_elab.ml" 1063 38616 38650
type(
  'a StringMap.t
)
ident(
  int_ref mcx "m_elab.ml" 1062 38577 38607 "m_elab.ml" 1062 38577 38610
)
"m_elab.ml" 1063 38616 38627 "m_elab.ml" 1063 38616 38651
type(
  bool
)
"m_elab.ml" 1063 38616 38623 "m_elab.ml" 1063 38616 38651
type(
  bool
)
"m_elab.ml" 1064 38663 38669 "m_elab.ml" 1064 38663 38679
type(
  ?at:'b Property.wrapped ->
  (StringMap.key -> unit, unit, string, unit) format4 ->
  StringMap.key -> unit
)
ident(
  int_ref Errors.err "errors.mli" 28 640 640 "errors.mli" 30 673 715
)
"m_elab.ml" 1064 38663 38684 "m_elab.ml" 1064 38663 38686
type(
  'b Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1062 38577 38611 "m_elab.ml" 1062 38577 38613
)
type(
  'b Property.wrapped option
)
"m_elab.ml" 1064 38663 38687 "m_elab.ml" 1064 38663 38710
type(
  (StringMap.key -> unit, unit, string, unit) format4
)
"m_elab.ml" 1064 38663 38711 "m_elab.ml" 1064 38663 38715
type(
  StringMap.key
)
ident(
  int_ref name "m_elab.ml" 1062 38577 38602 "m_elab.ml" 1062 38577 38606
)
"m_elab.ml" 1064 38663 38669 "m_elab.ml" 1064 38663 38715
type(
  unit
)
"m_elab.ml" 1065 38717 38723 "m_elab.ml" 1065 38717 38731
type(
  string -> unit
)
ident(
  int_ref Stdlib.failwith "stdlib.mli" 41 1919 1919 "stdlib.mli" 41 1919 1946
)
"m_elab.ml" 1065 38717 38732 "m_elab.ml" 1065 38717 38755
type(
  string
)
"m_elab.ml" 1065 38717 38723 "m_elab.ml" 1065 38717 38755
type(
  unit
)
"m_elab.ml" 1063 38616 38657 "m_elab.ml" 1066 38757 38764
type(
  unit
)
"m_elab.ml" 1063 38616 38620 "m_elab.ml" 1066 38757 38764
type(
  unit
)
"m_elab.ml" 1070 38811 38819 "m_elab.ml" 1070 38811 38828
type(
  M_t.modctx -> Expr.T.ctx -> M_t.mule -> M_t.modctx * M_t.mule * M_t.summary
)
ident(
  def normalize "m_elab.ml" 1070 38811 38811 "m_elab.ml" 0 0 -1
)
"m_elab.ml" 1070 38811 38829 "m_elab.ml" 1070 38811 38832
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 1070 38811 38833 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1070 38811 38833 "m_elab.ml" 1070 38811 38835
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
type(
  M_t.mule
)
ident(
  def m "m_elab.ml" 1071 38840 38842 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1071 38840 38846 "m_elab.ml" 1071 38840 38854
type(
  M_t.modunit list
)
ident(
  def origbody "m_elab.ml" 1072 38872 38874 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1071 38840 38857 "m_elab.ml" 1071 38840 38858
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
)
"m_elab.ml" 1071 38840 38857 "m_elab.ml" 1071 38840 38863
type(
  M_t.mule_
)
"m_elab.ml" 1071 38840 38857 "m_elab.ml" 1071 38840 38868
type(
  M_t.modunit list
)
"m_elab.ml" 1072 38872 38878 "m_elab.ml" 1072 38872 38884
type(
  M_t.modunit Deque.dq ref
)
ident(
  def prefix "m_elab.ml" 1073 38906 38908 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1072 38872 38887 "m_elab.ml" 1072 38872 38890
type(
  M_t.modunit Deque.dq -> M_t.modunit Deque.dq ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 1072 38872 38891 "m_elab.ml" 1072 38872 38902
type(
  M_t.modunit Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"m_elab.ml" 1072 38872 38887 "m_elab.ml" 1072 38872 38902
type(
  M_t.modunit Deque.dq ref
)
"m_elab.ml" 1073 38906 38912 "m_elab.ml" 1073 38906 38916
type(
  M_t.modunit -> unit
)
ident(
  def emit "m_elab.ml" 1074 38957 38959 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1073 38906 38917 "m_elab.ml" 1073 38906 38919
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 1073 38906 38922 "m_elab.ml" 1073 38906 38953
)
"m_elab.ml" 1073 38906 38922 "m_elab.ml" 1073 38906 38928
type(
  M_t.modunit Deque.dq ref
)
ident(
  int_ref prefix "m_elab.ml" 1072 38872 38878 "m_elab.ml" 1072 38872 38884
)
"m_elab.ml" 1073 38906 38929 "m_elab.ml" 1073 38906 38931
type(
  M_t.modunit Deque.dq ref -> M_t.modunit Deque.dq -> unit
)
ident(
  int_ref Stdlib.( := ) "stdlib.mli" 1221 46495 46495 "stdlib.mli" 1221 46495 46548
)
"m_elab.ml" 1073 38906 38932 "m_elab.ml" 1073 38906 38942
type(
  M_t.modunit Deque.dq -> M_t.modunit -> M_t.modunit Deque.dq
)
ident(
  int_ref Deque.snoc "deque.mli" 13 220 220 "deque.mli" 13 220 252
)
"m_elab.ml" 1073 38906 38943 "m_elab.ml" 1073 38906 38944
type(
  M_t.modunit Deque.dq ref -> M_t.modunit Deque.dq
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 1073 38906 38944 "m_elab.ml" 1073 38906 38950
type(
  M_t.modunit Deque.dq ref
)
ident(
  int_ref prefix "m_elab.ml" 1072 38872 38878 "m_elab.ml" 1072 38872 38884
)
"m_elab.ml" 1073 38906 38943 "m_elab.ml" 1073 38906 38950
type(
  M_t.modunit Deque.dq
)
"m_elab.ml" 1073 38906 38951 "m_elab.ml" 1073 38906 38953
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1073 38906 38917 "m_elab.ml" 1073 38906 38919
)
"m_elab.ml" 1073 38906 38932 "m_elab.ml" 1073 38906 38953
type(
  M_t.modunit Deque.dq
)
"m_elab.ml" 1073 38906 38922 "m_elab.ml" 1073 38906 38953
type(
  unit
)
"m_elab.ml" 1074 38957 38963 "m_elab.ml" 1074 38957 38968
type(
  Expr.T.ctx
)
ident(
  def gencx "m_elab.ml" 1076 39041 39043 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1074 38957 38971 "m_elab.ml" 1074 38957 38973
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1070 38811 38833 "m_elab.ml" 1070 38811 38835
)
"m_elab.ml" 1076 39041 39051 "m_elab.ml" 1076 39041 39055
type(
  M_t.modctx -> Expr.T.ctx -> (M_t.modunit * bool) list -> Expr.T.ctx
)
ident(
  def spin "m_elab.ml" 1076 39041 39043 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1272 47402 47413
)
"m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 1076 39041 39065 "m_elab.ml" 1272 47402 47413
)
"m_elab.ml" 1077 39074 39080 "m_elab.ml" 1077 39074 39082
type(
  (M_t.modunit * bool) list
)
"m_elab.ml" 1077 39074 39086 "m_elab.ml" 1077 39074 39088
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 1079 39119 39125 "m_elab.ml" 1272 47402 47413
)
"m_elab.ml" 1078 39089 39100 "m_elab.ml" 1078 39089 39107
type(
  bool
)
ident(
  def is_anon "m_elab.ml" 1079 39119 39125 "m_elab.ml" 1272 47402 47413
)
"m_elab.ml" 1078 39089 39095 "m_elab.ml" 1078 39089 39108
type(
  M_t.modunit * bool
)
"m_elab.ml" 1078 39089 39112 "m_elab.ml" 1078 39089 39115
type(
  (M_t.modunit * bool) list
)
ident(
  def mus "m_elab.ml" 1079 39119 39125 "m_elab.ml" 1272 47402 47413
)
"m_elab.ml" 1078 39089 39095 "m_elab.ml" 1078 39089 39115
type(
  (M_t.modunit * bool) list
)
"m_elab.ml" 1080 39131 39143 "m_elab.ml" 1080 39131 39148
type(
  Expr.T.hyp Deque.dq -> M_t.modunit -> string -> unit
)
ident(
  def print "m_elab.ml" 1092 39677 39685 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1080 39131 39149 "m_elab.ml" 1080 39131 39151
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1080 39131 39152 "m_elab.ml" 1090 39624 39661
)
"m_elab.ml" 1080 39131 39152 "m_elab.ml" 1080 39131 39154
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 1080 39131 39155 "m_elab.ml" 1090 39624 39661
)
"m_elab.ml" 1080 39131 39155 "m_elab.ml" 1080 39131 39156
type(
  string
)
ident(
  def s "m_elab.ml" 1081 39159 39171 "m_elab.ml" 1090 39624 39661
)
"m_elab.ml" 1081 39159 39175 "m_elab.ml" 1081 39159 39177
type(
  Expr.T.hyp_ Property.wrapped list
)
ident(
  def hs "m_elab.ml" 1082 39202 39214 "m_elab.ml" 1090 39624 39661
)
"m_elab.ml" 1081 39159 39180 "m_elab.ml" 1081 39159 39195
type(
  M_t.modunit -> Expr.T.hyp_ Property.wrapped list
)
ident(
  int_ref M_t.hyps_of_modunit "m_t.mli" 67 1637 1637 "m_t.mli" 69 1673 1714
)
"m_elab.ml" 1081 39159 39196 "m_elab.ml" 1081 39159 39198
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1080 39131 39152 "m_elab.ml" 1080 39131 39154
)
"m_elab.ml" 1081 39159 39180 "m_elab.ml" 1081 39159 39198
type(
  Expr.T.hyp_ Property.wrapped list
)
"m_elab.ml" 1082 39202 39218 "m_elab.ml" 1082 39202 39223
type(
  Format.formatter -> unit
)
ident(
  def pr_mu "m_elab.ml" 1084 39300 39312 "m_elab.ml" 1090 39624 39661
)
"m_elab.ml" 1082 39202 39224 "m_elab.ml" 1082 39202 39226
type(
  Format.formatter
)
ident(
  def ff "m_elab.ml" 1083 39229 39245 "m_elab.ml" 1083 39229 39296
)
"m_elab.ml" 1083 39229 39245 "m_elab.ml" 1083 39229 39251
type(
  Expr.Fmt.ctx -> unit
)
ident(
  int_ref Stdlib.ignore "stdlib.mli" 723 27015 27015 "stdlib.mli" 723 27015 27055
)
"m_elab.ml" 1083 39229 39253 "m_elab.ml" 1083 39229 39275
type(
  ?force:bool ->
  Expr.Fmt.ctx -> Format.formatter -> M_t.modunit -> Expr.Fmt.ctx
)
ident(
  int_ref M_fmt.pp_print_modunit "m_fmt.mli" 9 107 107 "m_fmt.mli" 11 164 215
)
"m_elab.ml" 1083 39229 39277 "m_elab.ml" 1083 39229 39279
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1080 39131 39149 "m_elab.ml" 1080 39131 39151
)
"m_elab.ml" 1083 39229 39281 "m_elab.ml" 1083 39229 39288
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 1083 39229 39276 "m_elab.ml" 1083 39229 39289
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1083 39229 39290 "m_elab.ml" 1083 39229 39292
type(
  Format.formatter
)
ident(
  int_ref ff "m_elab.ml" 1082 39202 39224 "m_elab.ml" 1082 39202 39226
)
"m_elab.ml" 1083 39229 39293 "m_elab.ml" 1083 39229 39295
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1080 39131 39152 "m_elab.ml" 1080 39131 39154
)
"m_elab.ml" 1083 39229 39252 "m_elab.ml" 1083 39229 39296
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1083 39229 39245 "m_elab.ml" 1083 39229 39296
type(
  unit
)
"m_elab.ml" 1084 39300 39316 "m_elab.ml" 1084 39300 39322
type(
  Format.formatter -> unit
)
ident(
  def pr_seq "m_elab.ml" 1088 39518 39530 "m_elab.ml" 1090 39624 39661
)
"m_elab.ml" 1084 39300 39323 "m_elab.ml" 1084 39300 39325
type(
  Format.formatter
)
ident(
  def ff "m_elab.ml" 1085 39328 39344 "m_elab.ml" 1087 39455 39514
)
"m_elab.ml" 1085 39328 39344 "m_elab.ml" 1085 39328 39350
type(
  Expr.Fmt.ctx -> unit
)
ident(
  int_ref Stdlib.ignore "stdlib.mli" 723 27015 27015 "stdlib.mli" 723 27015 27055
)
"m_elab.ml" 1085 39328 39352 "m_elab.ml" 1085 39328 39377
type(
  ?temp:bool ->
  Expr.Fmt.ctx -> Format.formatter -> Expr.T.sequent -> Expr.Fmt.ctx
)
ident(
  int_ref Expr.Fmt.pp_print_sequent "expr.mli" 405 10346 10350 "expr.mli" 408 10440 10455
)
"m_elab.ml" 1085 39328 39379 "m_elab.ml" 1085 39328 39381
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1080 39131 39149 "m_elab.ml" 1080 39131 39151
)
"m_elab.ml" 1085 39328 39383 "m_elab.ml" 1085 39328 39390
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 1085 39328 39378 "m_elab.ml" 1085 39328 39391
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1085 39328 39392 "m_elab.ml" 1085 39328 39394
type(
  Format.formatter
)
ident(
  int_ref ff "m_elab.ml" 1084 39300 39323 "m_elab.ml" 1084 39300 39325
)
"m_elab.ml" 1086 39395 39437 "m_elab.ml" 1086 39395 39450
type(
  Expr.T.hyp list -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.of_list "deque.mli" 34 983 983 "deque.mli" 34 983 1013
)
"m_elab.ml" 1086 39395 39451 "m_elab.ml" 1086 39395 39453
type(
  Expr.T.hyp list
)
ident(
  int_ref hs "m_elab.ml" 1081 39159 39175 "m_elab.ml" 1081 39159 39177
)
"m_elab.ml" 1086 39395 39437 "m_elab.ml" 1086 39395 39453
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1087 39455 39500 "m_elab.ml" 1087 39455 39505
type(
  bool
)
"m_elab.ml" 1087 39455 39496 "m_elab.ml" 1087 39455 39506
type(
  Expr.T.expr_
)
"m_elab.ml" 1087 39455 39507 "m_elab.ml" 1087 39455 39509
type(
  Expr.T.expr_ -> M_t.modunit -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1087 39455 39510 "m_elab.ml" 1087 39455 39512
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1080 39131 39152 "m_elab.ml" 1080 39131 39154
)
"m_elab.ml" 1087 39455 39496 "m_elab.ml" 1087 39455 39512
type(
  Expr.T.expr
)
"m_elab.ml" 1086 39395 39426 "m_elab.ml" 1087 39455 39513
type(
  Expr.T.sequent
)
"m_elab.ml" 1085 39328 39351 "m_elab.ml" 1087 39455 39514
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1085 39328 39344 "m_elab.ml" 1087 39455 39514
type(
  unit
)
"m_elab.ml" 1088 39518 39530 "m_elab.ml" 1088 39518 39542
type(
  ?debug:string ->
  ?at:M_t.modunit ->
  ?prefix:string ->
  ?nonl:unit ->
  (string -> (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit,
   Format.formatter, unit)
  format ->
  string -> (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 1088 39518 39550 "m_elab.ml" 1088 39518 39556
type(
  string
)
type(
  string option
)
"m_elab.ml" 1088 39518 39561 "m_elab.ml" 1088 39518 39563
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1080 39131 39152 "m_elab.ml" 1080 39131 39154
)
type(
  M_t.modunit option
)
"m_elab.ml" 1089 39564 39589 "m_elab.ml" 1089 39564 39621
type(
  (string -> (Format.formatter -> unit) -> (Format.formatter -> unit) -> unit,
   Format.formatter, unit)
  format
)
"m_elab.ml" 1089 39564 39622 "m_elab.ml" 1089 39564 39623
type(
  string
)
ident(
  int_ref s "m_elab.ml" 1080 39131 39155 "m_elab.ml" 1080 39131 39156
)
"m_elab.ml" 1090 39624 39649 "m_elab.ml" 1090 39624 39654
type(
  Format.formatter -> unit
)
ident(
  int_ref pr_mu "m_elab.ml" 1082 39202 39218 "m_elab.ml" 1082 39202 39223
)
"m_elab.ml" 1090 39624 39655 "m_elab.ml" 1090 39624 39661
type(
  Format.formatter -> unit
)
ident(
  int_ref pr_seq "m_elab.ml" 1084 39300 39316 "m_elab.ml" 1084 39300 39322
)
"m_elab.ml" 1088 39518 39530 "m_elab.ml" 1090 39624 39661
type(
  unit
)
"m_elab.ml" 1084 39300 39312 "m_elab.ml" 1090 39624 39661
type(
  unit
)
"m_elab.ml" 1082 39202 39214 "m_elab.ml" 1090 39624 39661
type(
  unit
)
"m_elab.ml" 1081 39159 39171 "m_elab.ml" 1090 39624 39661
type(
  unit
)
"m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
type(
  M_t.modctx -> Expr.T.hyp Deque.dq -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  def continue "m_elab.ml" 1098 39865 39873 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1092 39677 39698 "m_elab.ml" 1092 39677 39701
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 1092 39677 39702 "m_elab.ml" 1096 39826 39853
)
"m_elab.ml" 1092 39677 39702 "m_elab.ml" 1092 39677 39704
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1092 39677 39705 "m_elab.ml" 1096 39826 39853
)
"m_elab.ml" 1092 39677 39705 "m_elab.ml" 1092 39677 39707
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 1092 39677 39708 "m_elab.ml" 1096 39826 39853
)
"m_elab.ml" 1092 39677 39708 "m_elab.ml" 1092 39677 39709
type(
  string
)
ident(
  def s "m_elab.ml" 1093 39712 39724 "m_elab.ml" 1096 39826 39853
)
"m_elab.ml" 1093 39712 39724 "m_elab.ml" 1093 39712 39728
type(
  M_t.modunit -> unit
)
ident(
  int_ref emit "m_elab.ml" 1073 38906 38912 "m_elab.ml" 1073 38906 38916
)
"m_elab.ml" 1093 39712 39729 "m_elab.ml" 1093 39712 39731
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1092 39677 39705 "m_elab.ml" 1092 39677 39707
)
"m_elab.ml" 1093 39712 39724 "m_elab.ml" 1093 39712 39731
type(
  unit
)
"m_elab.ml" 1094 39733 39745 "m_elab.ml" 1094 39733 39750
type(
  Expr.T.hyp Deque.dq -> M_t.modunit -> string -> unit
)
ident(
  int_ref print "m_elab.ml" 1080 39131 39143 "m_elab.ml" 1080 39131 39148
)
"m_elab.ml" 1094 39733 39751 "m_elab.ml" 1094 39733 39753
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1092 39677 39702 "m_elab.ml" 1092 39677 39704
)
"m_elab.ml" 1094 39733 39754 "m_elab.ml" 1094 39733 39756
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1092 39677 39705 "m_elab.ml" 1092 39677 39707
)
"m_elab.ml" 1094 39733 39757 "m_elab.ml" 1094 39733 39758
type(
  string
)
ident(
  int_ref s "m_elab.ml" 1092 39677 39708 "m_elab.ml" 1092 39677 39709
)
"m_elab.ml" 1094 39733 39745 "m_elab.ml" 1094 39733 39758
type(
  unit
)
"m_elab.ml" 1095 39760 39776 "m_elab.ml" 1095 39760 39778
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1096 39826 39838 "m_elab.ml" 1096 39826 39853
)
"m_elab.ml" 1095 39760 39781 "m_elab.ml" 1095 39760 39798
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp list -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.append_list "deque.mli" 31 892 892 "deque.mli" 31 892 936
)
"m_elab.ml" 1095 39760 39799 "m_elab.ml" 1095 39760 39801
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1092 39677 39702 "m_elab.ml" 1092 39677 39704
)
"m_elab.ml" 1095 39760 39803 "m_elab.ml" 1095 39760 39818
type(
  M_t.modunit -> Expr.T.hyp list
)
ident(
  int_ref M_t.hyps_of_modunit "m_t.mli" 67 1637 1637 "m_t.mli" 69 1673 1714
)
"m_elab.ml" 1095 39760 39819 "m_elab.ml" 1095 39760 39821
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1092 39677 39705 "m_elab.ml" 1092 39677 39707
)
"m_elab.ml" 1095 39760 39802 "m_elab.ml" 1095 39760 39822
type(
  Expr.T.hyp list
)
"m_elab.ml" 1095 39760 39781 "m_elab.ml" 1095 39760 39822
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1096 39826 39838 "m_elab.ml" 1096 39826 39842
type(
  M_t.modctx -> Expr.T.ctx -> (M_t.modunit * bool) list -> Expr.T.ctx
)
ident(
  int_ref spin "m_elab.ml" 1076 39041 39051 "m_elab.ml" 1076 39041 39055
)
"m_elab.ml" 1096 39826 39843 "m_elab.ml" 1096 39826 39846
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1092 39677 39698 "m_elab.ml" 1092 39677 39701
)
"m_elab.ml" 1096 39826 39847 "m_elab.ml" 1096 39826 39849
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1095 39760 39776 "m_elab.ml" 1095 39760 39778
)
"m_elab.ml" 1096 39826 39850 "m_elab.ml" 1096 39826 39853
type(
  (M_t.modunit * bool) list
)
ident(
  int_ref mus "m_elab.ml" 1078 39089 39112 "m_elab.ml" 1078 39089 39115
)
"m_elab.ml" 1096 39826 39838 "m_elab.ml" 1096 39826 39853
type(
  Expr.T.ctx
)
"m_elab.ml" 1095 39760 39772 "m_elab.ml" 1096 39826 39853
type(
  Expr.T.ctx
)
"m_elab.ml" 1094 39733 39745 "m_elab.ml" 1096 39826 39853
type(
  Expr.T.ctx
)
"m_elab.ml" 1093 39712 39724 "m_elab.ml" 1096 39826 39853
type(
  Expr.T.ctx
)
"m_elab.ml" 1098 39865 39877 "m_elab.ml" 1098 39865 39890
type(
  Expr.Constness.const_visitor
)
ident(
  def const_visitor "m_elab.ml" 1100 39956 39964 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1099 39893 39905 "m_elab.ml" 1099 39893 39952
type(
  Expr.Constness.const_visitor
)
"m_elab.ml" 1100 39956 39968 "m_elab.ml" 1100 39956 39977
type(
  string Property.wrapped option -> bool
)
ident(
  def redundant "m_elab.ml" 1106 40165 40173 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1100 39956 39978 "m_elab.ml" 1100 39956 39980
type(
  string Property.wrapped option
)
ident(
  def nm "m_elab.ml" 1100 39956 39983 "m_elab.ml" 1104 40111 40153
)
"m_elab.ml" 1100 39956 39989 "m_elab.ml" 1100 39956 39991
type(
  string Property.wrapped option
)
ident(
  int_ref nm "m_elab.ml" 1100 39956 39978 "m_elab.ml" 1100 39956 39980
)
"m_elab.ml" 1101 39997 40011 "m_elab.ml" 1101 39997 40015
type(
  string Property.wrapped option
)
type(
  string Property.wrapped option
)
"m_elab.ml" 1101 39997 40019 "m_elab.ml" 1101 39997 40024
type(
  bool
)
"m_elab.ml" 1102 40025 40044 "m_elab.ml" 1102 40025 40046
type(
  string Property.wrapped
)
ident(
  def nm "m_elab.ml" 1103 40050 40066 "m_elab.ml" 1104 40111 40153
)
"m_elab.ml" 1102 40025 40039 "m_elab.ml" 1102 40025 40046
type(
  string Property.wrapped option
)
type(
  string Property.wrapped option
)
"m_elab.ml" 1103 40050 40070 "m_elab.ml" 1103 40050 40074
type(
  Expr.T.hyp -> bool
)
ident(
  def what "m_elab.ml" 1104 40111 40127 "m_elab.ml" 1104 40111 40153
)
"m_elab.ml" 1103 40050 40077 "m_elab.ml" 1103 40050 40099
type(
  string -> Expr.T.hyp -> bool
)
ident(
  int_ref Expr.Anon.hyp_is_named "expr.mli" 659 16894 16898 "expr.mli" 659 16894 16937
)
"m_elab.ml" 1103 40050 40100 "m_elab.ml" 1103 40050 40102
type(
  string Property.wrapped
)
ident(
  int_ref nm "m_elab.ml" 1102 40025 40044 "m_elab.ml" 1102 40025 40046
)
"m_elab.ml" 1103 40050 40100 "m_elab.ml" 1103 40050 40107
type(
  string
)
"m_elab.ml" 1103 40050 40077 "m_elab.ml" 1103 40050 40107
type(
  Expr.T.hyp -> bool
)
"m_elab.ml" 1104 40111 40127 "m_elab.ml" 1104 40111 40137
type(
  ?backwards:bool ->
  Expr.T.ctx -> (Expr.T.hyp -> bool) -> (int * Expr.T.hyp) option
)
ident(
  int_ref Deque.find "deque.mli" 23 579 579 "deque.mli" 23 579 652
)
"m_elab.ml" 1104 40111 40138 "m_elab.ml" 1104 40111 40140
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1104 40111 40141 "m_elab.ml" 1104 40111 40145
type(
  Expr.T.hyp -> bool
)
ident(
  int_ref what "m_elab.ml" 1103 40050 40070 "m_elab.ml" 1103 40050 40074
)
"m_elab.ml" 1104 40111 40127 "m_elab.ml" 1104 40111 40145
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 1104 40111 40146 "m_elab.ml" 1104 40111 40148
type(
  (int * Expr.T.hyp) option -> (int * Expr.T.hyp) option -> bool
)
ident(
  int_ref Stdlib.( != ) "stdlib.mli" 203 8696 8696 "stdlib.mli" 203 8696 8741
)
"m_elab.ml" 1104 40111 40149 "m_elab.ml" 1104 40111 40153
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 1104 40111 40127 "m_elab.ml" 1104 40111 40153
type(
  bool
)
"m_elab.ml" 1103 40050 40066 "m_elab.ml" 1104 40111 40153
type(
  bool
)
"m_elab.ml" 1100 39956 39983 "m_elab.ml" 1104 40111 40153
type(
  bool
)
"m_elab.ml" 1106 40165 40177 "m_elab.ml" 1106 40165 40186
type(
  Expr.T.hyp Deque.dq ->
  Util.hint option ->
  Expr.T.sequent ->
  Proof.T.proof ->
  'a Property.wrapped -> M_t.mule_ Property.wrapped -> Proof.T.proof
)
ident(
  def map_proof "m_elab.ml" 1160 42482 42490 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1106 40165 40187 "m_elab.ml" 1106 40165 40189
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1106 40165 40190 "m_elab.ml" 1158 42451 42466
)
"m_elab.ml" 1106 40165 40190 "m_elab.ml" 1106 40165 40192
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 1106 40165 40193 "m_elab.ml" 1158 42451 42466
)
"m_elab.ml" 1106 40165 40193 "m_elab.ml" 1106 40165 40195
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1106 40165 40196 "m_elab.ml" 1158 42451 42466
)
"m_elab.ml" 1106 40165 40196 "m_elab.ml" 1106 40165 40198
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1106 40165 40199 "m_elab.ml" 1158 42451 42466
)
"m_elab.ml" 1106 40165 40199 "m_elab.ml" 1106 40165 40201
type(
  'a Property.wrapped
)
ident(
  def mu "m_elab.ml" 1106 40165 40202 "m_elab.ml" 1158 42451 42466
)
"m_elab.ml" 1106 40165 40202 "m_elab.ml" 1106 40165 40203
type(
  M_t.mule_ Property.wrapped
)
ident(
  def m "m_elab.ml" 1106 40165 40206 "m_elab.ml" 1158 42451 42466
)
"m_elab.ml" 1110 40338 40355 "m_elab.ml" 1110 40338 40357
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1125 40958 40970 "m_elab.ml" 1157 42432 42450
)
"m_elab.ml" 1110 40338 40359 "m_elab.ml" 1110 40338 40361
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1125 40958 40970 "m_elab.ml" 1157 42432 42450
)
"m_elab.ml" 1110 40338 40354 "m_elab.ml" 1110 40338 40362
type(
  Expr.T.hyp Deque.dq * Expr.T.sequent
)
"m_elab.ml" 1111 40365 40387 "m_elab.ml" 1111 40365 40389
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1106 40165 40190 "m_elab.ml" 1106 40165 40192
)
"m_elab.ml" 1112 40395 40422 "m_elab.ml" 1112 40395 40424
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 1113 40428 40452 "m_elab.ml" 1118 40700 40753
)
"m_elab.ml" 1112 40395 40417 "m_elab.ml" 1112 40395 40424
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 1113 40428 40456 "m_elab.ml" 1113 40428 40461
type(
  Expr.T.expr_ Property.wrapped
)
ident(
  def op_sq "m_elab.ml" 1114 40492 40516 "m_elab.ml" 1118 40700 40753
)
"m_elab.ml" 1113 40428 40464 "m_elab.ml" 1113 40428 40479
type(
  Expr.T.sequent -> Expr.T.expr_
)
ident(
  int_ref Expr.T.exprify_sequent "expr.mli" 344 8876 8878 "expr.mli" 344 8876 8916
)
"m_elab.ml" 1113 40428 40480 "m_elab.ml" 1113 40428 40482
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1106 40165 40193 "m_elab.ml" 1106 40165 40195
)
"m_elab.ml" 1113 40428 40464 "m_elab.ml" 1113 40428 40482
type(
  Expr.T.expr_
)
"m_elab.ml" 1113 40428 40483 "m_elab.ml" 1113 40428 40485
type(
  Expr.T.expr_ -> Util.hint -> Expr.T.expr_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1113 40428 40486 "m_elab.ml" 1113 40428 40488
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 1112 40395 40422 "m_elab.ml" 1112 40395 40424
)
"m_elab.ml" 1113 40428 40464 "m_elab.ml" 1113 40428 40488
type(
  Expr.T.expr_ Property.wrapped
)
"m_elab.ml" 1114 40492 40520 "m_elab.ml" 1114 40492 40522
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  def op "m_elab.ml" 1115 40555 40579 "m_elab.ml" 1118 40700 40753
)
"m_elab.ml" 1114 40492 40535 "m_elab.ml" 1114 40492 40537
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 1112 40395 40422 "m_elab.ml" 1112 40395 40424
)
"m_elab.ml" 1114 40492 40539 "m_elab.ml" 1114 40492 40544
type(
  Expr.T.expr
)
ident(
  int_ref op_sq "m_elab.ml" 1113 40428 40456 "m_elab.ml" 1113 40428 40461
)
"m_elab.ml" 1114 40492 40525 "m_elab.ml" 1114 40492 40545
type(
  Expr.T.defn_
)
"m_elab.ml" 1114 40492 40546 "m_elab.ml" 1114 40492 40548
type(
  Expr.T.defn_ -> 'a Property.wrapped -> Expr.T.defn_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1114 40492 40549 "m_elab.ml" 1114 40492 40551
type(
  'a Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1106 40165 40199 "m_elab.ml" 1106 40165 40201
)
"m_elab.ml" 1114 40492 40525 "m_elab.ml" 1114 40492 40551
type(
  Expr.T.defn_ Property.wrapped
)
"m_elab.ml" 1115 40555 40580 "m_elab.ml" 1115 40555 40590
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.snoc "deque.mli" 13 220 220 "deque.mli" 13 220 252
)
"m_elab.ml" 1116 40591 40619 "m_elab.ml" 1116 40591 40621
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1106 40165 40187 "m_elab.ml" 1106 40165 40189
)
"m_elab.ml" 1117 40622 40657 "m_elab.ml" 1117 40622 40659
type(
  Expr.T.defn
)
ident(
  int_ref op "m_elab.ml" 1114 40492 40520 "m_elab.ml" 1114 40492 40522
)
"m_elab.ml" 1117 40622 40667 "m_elab.ml" 1117 40622 40673
type(
  Expr.T.time
)
"m_elab.ml" 1117 40622 40661 "m_elab.ml" 1117 40622 40673
type(
  Expr.T.wheredef
)
"m_elab.ml" 1117 40622 40675 "m_elab.ml" 1117 40622 40682
type(
  Expr.T.visibility
)
"m_elab.ml" 1117 40622 40684 "m_elab.ml" 1117 40622 40690
type(
  Expr.T.export
)
"m_elab.ml" 1117 40622 40651 "m_elab.ml" 1117 40622 40691
type(
  Expr.T.hyp_
)
"m_elab.ml" 1117 40622 40692 "m_elab.ml" 1117 40622 40694
type(
  Expr.T.hyp_ -> 'a Property.wrapped -> Expr.T.hyp
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1117 40622 40695 "m_elab.ml" 1117 40622 40697
type(
  'a Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1106 40165 40199 "m_elab.ml" 1106 40165 40201
)
"m_elab.ml" 1117 40622 40650 "m_elab.ml" 1117 40622 40698
type(
  Expr.T.hyp
)
"m_elab.ml" 1115 40555 40580 "m_elab.ml" 1117 40622 40698
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1118 40700 40728 "m_elab.ml" 1118 40700 40739
type(
  Expr.Subst.sub -> Expr.T.sequent -> Expr.T.sequent
)
ident(
  int_ref Expr.Subst.app_sequent "expr.mli" 465 11594 11598 "expr.mli" 467 11641 11660
)
"m_elab.ml" 1118 40700 40741 "m_elab.ml" 1118 40700 40746
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 1118 40700 40747 "m_elab.ml" 1118 40700 40748
type(
  int
)
"m_elab.ml" 1118 40700 40740 "m_elab.ml" 1118 40700 40749
type(
  Expr.Subst.sub
)
"m_elab.ml" 1118 40700 40750 "m_elab.ml" 1118 40700 40752
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1106 40165 40193 "m_elab.ml" 1106 40165 40195
)
"m_elab.ml" 1118 40700 40728 "m_elab.ml" 1118 40700 40752
type(
  Expr.T.sequent
)
"m_elab.ml" 1115 40555 40579 "m_elab.ml" 1118 40700 40753
type(
  Expr.T.hyp Deque.dq * Expr.T.sequent
)
"m_elab.ml" 1114 40492 40516 "m_elab.ml" 1118 40700 40753
type(
  Expr.T.hyp Deque.dq * Expr.T.sequent
)
"m_elab.ml" 1113 40428 40452 "m_elab.ml" 1118 40700 40753
type(
  Expr.T.hyp Deque.dq * Expr.T.sequent
)
"m_elab.ml" 1119 40754 40776 "m_elab.ml" 1119 40754 40780
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 1120 40784 40809 "m_elab.ml" 1120 40784 40811
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1106 40165 40187 "m_elab.ml" 1106 40165 40189
)
"m_elab.ml" 1120 40784 40813 "m_elab.ml" 1120 40784 40815
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1106 40165 40193 "m_elab.ml" 1106 40165 40195
)
"m_elab.ml" 1120 40784 40808 "m_elab.ml" 1120 40784 40816
type(
  Expr.T.hyp Deque.dq * Expr.T.sequent
)
"m_elab.ml" 1111 40365 40381 "m_elab.ml" 1120 40784 40816
type(
  Expr.T.hyp Deque.dq * Expr.T.sequent
)
"m_elab.ml" 1125 40958 40974 "m_elab.ml" 1125 40958 40976
type(
  Expr.T.hyp Deque.dq
)
ident(
  def cx "m_elab.ml" 1126 41009 41021 "m_elab.ml" 1157 42432 42450
)
"m_elab.ml" 1125 40958 40979 "m_elab.ml" 1125 40958 40991
type(
  Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq -> Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.append "deque.mli" 30 849 849 "deque.mli" 30 849 891
)
"m_elab.ml" 1125 40958 40992 "m_elab.ml" 1125 40958 40994
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1110 40338 40355 "m_elab.ml" 1110 40338 40357
)
"m_elab.ml" 1125 40958 40995 "m_elab.ml" 1125 40958 40997
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1110 40338 40359 "m_elab.ml" 1110 40338 40361
)
"m_elab.ml" 1125 40958 40995 "m_elab.ml" 1125 40958 41005
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1125 40958 40979 "m_elab.ml" 1125 40958 41005
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1126 41009 41025 "m_elab.ml" 1126 41009 41034
type(
  Expr.T.time
)
ident(
  def time_flag "m_elab.ml" 1128 41112 41124 "m_elab.ml" 1157 42432 42450
)
"m_elab.ml" 1126 41009 41037 "m_elab.ml" 1126 41009 41074
type(
  Expr.T.hyp Deque.dq -> Expr.T.time -> Expr.T.time
)
ident(
  int_ref Expr.Temporal_props.check_time_change "expr.mli" 639 16500 16504 "expr.mli" 640 16527 16569
)
"m_elab.ml" 1127 41075 41091 "m_elab.ml" 1127 41075 41093
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1110 40338 40359 "m_elab.ml" 1110 40338 40361
)
"m_elab.ml" 1127 41075 41091 "m_elab.ml" 1127 41075 41101
type(
  Expr.T.hyp Deque.dq
)
"m_elab.ml" 1127 41075 41102 "m_elab.ml" 1127 41075 41108
type(
  Expr.T.time
)
"m_elab.ml" 1126 41009 41037 "m_elab.ml" 1127 41075 41108
type(
  Expr.T.time
)
"m_elab.ml" 1128 41112 41124 "m_elab.ml" 1128 41112 41136
type(
  ?debug:string ->
  ?at:'a Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit ->
  ((Format.formatter -> Expr.T.expr -> unit) ->
   Expr.T.expr ->
   (Format.formatter -> Proof.T.proof -> unit) -> Proof.T.proof -> unit,
   Format.formatter, unit)
  format ->
  (Format.formatter -> Expr.T.expr -> unit) ->
  Expr.T.expr ->
  (Format.formatter -> Proof.T.proof -> unit) -> Proof.T.proof -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 1128 41112 41144 "m_elab.ml" 1128 41112 41154
type(
  string
)
type(
  string option
)
"m_elab.ml" 1128 41112 41159 "m_elab.ml" 1128 41112 41161
type(
  'a Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1106 40165 40199 "m_elab.ml" 1106 40165 40201
)
type(
  'a Property.wrapped option
)
"m_elab.ml" 1129 41162 41178 "m_elab.ml" 1129 41162 41220
type(
  ((Format.formatter -> Expr.T.expr -> unit) ->
   Expr.T.expr ->
   (Format.formatter -> Proof.T.proof -> unit) -> Proof.T.proof -> unit,
   Format.formatter, unit)
  format
)
"m_elab.ml" 1130 41221 41242 "m_elab.ml" 1130 41221 41264
type(
  ?temp:bool -> Expr.Fmt.ctx -> Format.formatter -> Expr.T.expr -> unit
)
ident(
  int_ref Expr.Fmt.pp_print_expr "expr.mli" 393 10055 10059 "expr.mli" 396 10143 10159
)
"m_elab.ml" 1130 41221 41266 "m_elab.ml" 1130 41221 41277
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"m_elab.ml" 1130 41221 41279 "m_elab.ml" 1130 41221 41286
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 1130 41221 41265 "m_elab.ml" 1130 41221 41287
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1130 41221 41241 "m_elab.ml" 1130 41221 41288
type(
  Format.formatter -> Expr.T.expr -> unit
)
"m_elab.ml" 1131 41289 41310 "m_elab.ml" 1131 41289 41325
type(
  Expr.T.sequent -> Expr.T.expr_
)
ident(
  int_ref Expr.T.exprify_sequent "expr.mli" 344 8876 8878 "expr.mli" 344 8876 8916
)
"m_elab.ml" 1131 41289 41326 "m_elab.ml" 1131 41289 41328
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1110 40338 40359 "m_elab.ml" 1110 40338 40361
)
"m_elab.ml" 1131 41289 41310 "m_elab.ml" 1131 41289 41328
type(
  Expr.T.expr_
)
"m_elab.ml" 1131 41289 41329 "m_elab.ml" 1131 41289 41331
type(
  Expr.T.expr_ -> 'a Property.wrapped -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1131 41289 41332 "m_elab.ml" 1131 41289 41334
type(
  'a Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1106 40165 40199 "m_elab.ml" 1106 40165 40201
)
"m_elab.ml" 1131 41289 41309 "m_elab.ml" 1131 41289 41335
type(
  Expr.T.expr
)
"m_elab.ml" 1132 41336 41357 "m_elab.ml" 1132 41336 41381
type(
  Expr.Fmt.ctx -> Format.formatter -> Proof.T.proof -> unit
)
ident(
  int_ref Proof.Fmt.pp_print_proof "proof.mli" 68 1810 1812 "proof.mli" 68 1810 1882
)
"m_elab.ml" 1132 41336 41383 "m_elab.ml" 1132 41336 41385
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1125 40958 40974 "m_elab.ml" 1125 40958 40976
)
"m_elab.ml" 1132 41336 41387 "m_elab.ml" 1132 41336 41394
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 1132 41336 41382 "m_elab.ml" 1132 41336 41395
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1132 41336 41356 "m_elab.ml" 1132 41336 41396
type(
  Format.formatter -> Proof.T.proof -> unit
)
"m_elab.ml" 1133 41397 41417 "m_elab.ml" 1133 41397 41419
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1106 40165 40196 "m_elab.ml" 1106 40165 40198
)
"m_elab.ml" 1128 41112 41124 "m_elab.ml" 1133 41397 41419
type(
  unit
)
"m_elab.ml" 1142 41710 41726 "m_elab.ml" 1142 41710 41728
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1147 41959 41971 "m_elab.ml" 1157 42432 42450
)
"m_elab.ml" 1142 41710 41731 "m_elab.ml" 1142 41710 41735
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref anon "m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
)
"m_elab.ml" 1142 41710 41731 "m_elab.ml" 1142 41710 41742
type(
  M_t.modctx -> string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof
)
"m_elab.ml" 1142 41710 41743 "m_elab.ml" 1142 41710 41746
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1142 41710 41748 "m_elab.ml" 1142 41710 41750
type(
  string list
)
"m_elab.ml" 1142 41710 41752 "m_elab.ml" 1142 41710 41754
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1125 40958 40974 "m_elab.ml" 1125 40958 40976
)
"m_elab.ml" 1142 41710 41747 "m_elab.ml" 1142 41710 41755
type(
  string list Expr.Visit.scx
)
"m_elab.ml" 1142 41710 41756 "m_elab.ml" 1142 41710 41758
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1106 40165 40196 "m_elab.ml" 1106 40165 40198
)
"m_elab.ml" 1142 41710 41731 "m_elab.ml" 1142 41710 41758
type(
  Proof.T.proof
)
"m_elab.ml" 1147 41959 41974 "m_elab.ml" 1147 41959 41975
type(
  M_t.mule_ Property.wrapped
)
ident(
  int_ref m "m_elab.ml" 1106 40165 40202 "m_elab.ml" 1106 40165 40203
)
"m_elab.ml" 1147 41959 41974 "m_elab.ml" 1147 41959 41980
type(
  M_t.mule_
)
"m_elab.ml" 1147 41959 41974 "m_elab.ml" 1147 41959 41990
type(
  bool
)
"m_elab.ml" 1148 42002 42022 "m_elab.ml" 1148 42002 42024
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1150 42141 42157 "m_elab.ml" 1154 42376 42394
)
"m_elab.ml" 1148 42002 42027 "m_elab.ml" 1148 42002 42050
type(
  Expr.T.hyp Deque.dq ->
  Expr.T.expr -> Proof.T.proof -> Expr.T.time -> Proof.T.proof
)
ident(
  int_ref Proof.Simplify.simplify "proof.mli" 110 3060 3062 "proof.mli" 110 3060 3117
)
"m_elab.ml" 1148 42002 42051 "m_elab.ml" 1148 42002 42053
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1125 40958 40974 "m_elab.ml" 1125 40958 40976
)
"m_elab.ml" 1148 42002 42054 "m_elab.ml" 1148 42002 42056
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1110 40338 40359 "m_elab.ml" 1110 40338 40361
)
"m_elab.ml" 1148 42002 42054 "m_elab.ml" 1148 42002 42063
type(
  Expr.T.expr
)
"m_elab.ml" 1148 42002 42064 "m_elab.ml" 1148 42002 42066
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1142 41710 41726 "m_elab.ml" 1142 41710 41728
)
"m_elab.ml" 1148 42002 42067 "m_elab.ml" 1148 42002 42076
type(
  Expr.T.time
)
ident(
  int_ref time_flag "m_elab.ml" 1126 41009 41025 "m_elab.ml" 1126 41009 41034
)
"m_elab.ml" 1148 42002 42027 "m_elab.ml" 1148 42002 42076
type(
  Proof.T.proof
)
"m_elab.ml" 1150 42141 42161 "m_elab.ml" 1150 42141 42164
type(
  bool
)
ident(
  def has "m_elab.ml" 1152 42243 42259 "m_elab.ml" 1154 42376 42394
)
"m_elab.ml" 1150 42141 42167 "m_elab.ml" 1150 42141 42193
type(
  < bound : unit Expr.Visit.scx -> Expr.T.bound -> unit Expr.Visit.scx;
    bounds : unit Expr.Visit.scx -> Expr.T.bounds -> unit Expr.Visit.scx;
    check_usable : Proof.T.proof ->
                   unit * Expr.T.ctx -> Proof.T.usable -> bool -> unit;
    defn : unit Expr.Visit.scx -> Expr.T.defn -> unit Expr.Visit.scx;
    defns : unit Expr.Visit.scx -> Expr.T.defn list -> unit Expr.Visit.scx;
    expr : unit Expr.Visit.scx -> Expr.T.expr -> unit;
    exspec : unit Expr.Visit.scx -> Expr.T.exspec -> unit;
    find_enabled_axioms : Expr.T.hyp Deque.dq -> Proof.T.proof -> bool;
    hyp : unit Expr.Visit.scx -> Expr.T.hyp -> unit Expr.Visit.scx;
    hyps : unit Expr.Visit.scx -> Expr.T.hyp Deque.dq -> unit Expr.Visit.scx;
    instance : unit Expr.Visit.scx -> Expr.T.instance -> unit;
    pform : unit Expr.Visit.scx -> Expr.T.pform -> unit;
    proof : unit Expr.Visit.scx -> Proof.T.proof -> unit;
    sel : unit Expr.Visit.scx -> Expr.T.sel -> unit;
    sequent : unit Expr.Visit.scx -> Expr.T.sequent -> unit Expr.Visit.scx;
    step : unit Expr.Visit.scx -> Proof.T.step -> unit Expr.Visit.scx;
    steps : unit Expr.Visit.scx -> Proof.T.step list -> unit Expr.Visit.scx;
    usable : unit Expr.Visit.scx -> Proof.T.usable -> unit >
)
ident(
  int_ref check_enabled_axioms_usage "m_elab.ml" 953 34623 34627 "m_elab.ml" 953 34623 34653
)
"m_elab.ml" 1150 42141 42167 "m_elab.ml" 1150 42141 42213
type(
  Expr.T.hyp Deque.dq -> Proof.T.proof -> bool
)
"m_elab.ml" 1151 42214 42234 "m_elab.ml" 1151 42214 42236
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1125 40958 40974 "m_elab.ml" 1125 40958 40976
)
"m_elab.ml" 1151 42214 42237 "m_elab.ml" 1151 42214 42239
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1148 42002 42022 "m_elab.ml" 1148 42002 42024
)
"m_elab.ml" 1150 42141 42167 "m_elab.ml" 1151 42214 42239
type(
  bool
)
"m_elab.ml" 1152 42243 42263 "m_elab.ml" 1152 42243 42265
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1154 42376 42392 "m_elab.ml" 1154 42376 42394
)
"m_elab.ml" 1152 42243 42271 "m_elab.ml" 1152 42243 42274
type(
  bool
)
ident(
  int_ref has "m_elab.ml" 1150 42141 42161 "m_elab.ml" 1150 42141 42164
)
"m_elab.ml" 1152 42243 42280 "m_elab.ml" 1152 42243 42304
type(
  < adj : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx;
    adjs : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp list ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx;
    bound : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.bound ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.bound;
    bounds : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx ->
             Expr.T.bound list ->
             (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx * Expr.T.bound list;
    check_usable : Proof.T.proof ->
                   (int ref *
                    (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
                   Expr.Visit.scx -> Proof.T.usable -> bool -> Proof.T.proof;
    defn : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Expr.T.defn list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Expr.T.defn list;
    expr : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx ->
          Expr.T.hyp ->
          (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx * Expr.T.hyp;
    hyps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : (int ref *
                (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
               Expr.Visit.scx -> Expr.T.instance -> Expr.T.instance;
    pform : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
          Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx ->
              Expr.T.sequent ->
              (int ref *
               (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
              Expr.Visit.scx * Expr.T.sequent;
    step : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx ->
           Proof.T.step ->
           (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
           Expr.Visit.scx * Proof.T.step;
    steps : (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx ->
            Proof.T.step list ->
            (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
            Expr.Visit.scx * Proof.T.step list;
    usable : (int ref *
              (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
             Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref check_enabled_axioms_map "m_elab.ml" 665 22969 22973 "m_elab.ml" 665 22969 22997
)
"m_elab.ml" 1152 42243 42280 "m_elab.ml" 1152 42243 42310
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof
)
"m_elab.ml" 1153 42311 42333 "m_elab.ml" 1153 42311 42336
type(
  int -> int ref
)
ident(
  int_ref Stdlib.ref "stdlib.mli" 1212 46183 46183 "stdlib.mli" 1212 46183 46227
)
"m_elab.ml" 1153 42311 42337 "m_elab.ml" 1153 42311 42338
type(
  int
)
"m_elab.ml" 1153 42311 42333 "m_elab.ml" 1153 42311 42338
type(
  int ref
)
"m_elab.ml" 1153 42311 42340 "m_elab.ml" 1153 42311 42355
type(
  (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
ident(
  int_ref StringMap.empty "map.mli" 73 2950 2954 "map.mli" 73 2950 2969
)
"m_elab.ml" 1153 42311 42332 "m_elab.ml" 1153 42311 42356
type(
  int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t
)
"m_elab.ml" 1153 42311 42358 "m_elab.ml" 1153 42311 42360
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref cx "m_elab.ml" 1125 40958 40974 "m_elab.ml" 1125 40958 40976
)
"m_elab.ml" 1153 42311 42331 "m_elab.ml" 1153 42311 42361
type(
  (int ref * (Proof.T.step * Expr.T.hyp Deque.dq * int) StringMap.t)
  Expr.Visit.scx
)
"m_elab.ml" 1153 42311 42362 "m_elab.ml" 1153 42311 42364
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1148 42002 42022 "m_elab.ml" 1148 42002 42024
)
"m_elab.ml" 1152 42243 42280 "m_elab.ml" 1153 42311 42364
type(
  Proof.T.proof
)
"m_elab.ml" 1153 42311 42370 "m_elab.ml" 1153 42311 42372
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1148 42002 42022 "m_elab.ml" 1148 42002 42024
)
"m_elab.ml" 1152 42243 42268 "m_elab.ml" 1153 42311 42372
type(
  Proof.T.proof
)
"m_elab.ml" 1154 42376 42392 "m_elab.ml" 1154 42376 42394
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1152 42243 42263 "m_elab.ml" 1152 42243 42265
)
"m_elab.ml" 1152 42243 42259 "m_elab.ml" 1154 42376 42394
type(
  Proof.T.proof
)
"m_elab.ml" 1150 42141 42157 "m_elab.ml" 1154 42376 42394
type(
  Proof.T.proof
)
"m_elab.ml" 1147 41959 41996 "m_elab.ml" 1155 42395 42414
type(
  Proof.T.proof
)
"m_elab.ml" 1157 42432 42448 "m_elab.ml" 1157 42432 42450
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1142 41710 41726 "m_elab.ml" 1142 41710 41728
)
"m_elab.ml" 1147 41959 41971 "m_elab.ml" 1157 42432 42450
type(
  Proof.T.proof
)
"m_elab.ml" 1142 41710 41722 "m_elab.ml" 1157 42432 42450
type(
  Proof.T.proof
)
"m_elab.ml" 1128 41112 41124 "m_elab.ml" 1157 42432 42450
type(
  Proof.T.proof
)
"m_elab.ml" 1126 41009 41021 "m_elab.ml" 1157 42432 42450
type(
  Proof.T.proof
)
"m_elab.ml" 1125 40958 40970 "m_elab.ml" 1157 42432 42450
type(
  Proof.T.proof
)
"m_elab.ml" 1106 40165 40206 "m_elab.ml" 1158 42451 42466
type(
  Proof.T.proof
)
"m_elab.ml" 1160 42482 42494 "m_elab.ml" 1160 42482 42509
type(
  Expr.T.instance ->
  M_t.mule StringMap.t ->
  Expr.T.ctx ->
  M_t.modunit ->
  local:Expr.T.export -> iname:string Property.wrapped -> Expr.T.ctx
)
ident(
  def create_instance "m_elab.ml" 1176 43233 43241 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1160 42482 42510 "m_elab.ml" 1160 42482 42514
type(
  Expr.T.instance
)
ident(
  def inst "m_elab.ml" 1160 42482 42515 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1160 42482 42515 "m_elab.ml" 1160 42482 42518
type(
  M_t.mule StringMap.t
)
ident(
  def mcx "m_elab.ml" 1160 42482 42519 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1160 42482 42519 "m_elab.ml" 1160 42482 42521
type(
  Expr.T.ctx
)
ident(
  def cx "m_elab.ml" 1160 42482 42522 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1160 42482 42522 "m_elab.ml" 1160 42482 42524
type(
  M_t.modunit
)
ident(
  def mu "m_elab.ml" 1160 42482 42525 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1160 42482 42526 "m_elab.ml" 1160 42482 42531
type(
  Expr.T.export
)
ident(
  def local "m_elab.ml" 1160 42482 42532 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1160 42482 42533 "m_elab.ml" 1160 42482 42538
type(
  string Property.wrapped
)
ident(
  def iname "m_elab.ml" 1161 42541 42553 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1161 42541 42553 "m_elab.ml" 1161 42541 42573
type(
  StringMap.key -> M_t.mule StringMap.t -> M_t.modunit -> unit
)
ident(
  int_ref assert_module_exists "m_elab.ml" 1062 38577 38581 "m_elab.ml" 1062 38577 38601
)
"m_elab.ml" 1161 42541 42574 "m_elab.ml" 1161 42541 42578
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 1160 42482 42510 "m_elab.ml" 1160 42482 42514
)
"m_elab.ml" 1161 42541 42574 "m_elab.ml" 1161 42541 42587
type(
  StringMap.key
)
"m_elab.ml" 1161 42541 42588 "m_elab.ml" 1161 42541 42591
type(
  M_t.mule StringMap.t
)
ident(
  int_ref mcx "m_elab.ml" 1160 42482 42515 "m_elab.ml" 1160 42482 42518
)
"m_elab.ml" 1161 42541 42592 "m_elab.ml" 1161 42541 42594
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1160 42482 42522 "m_elab.ml" 1160 42482 42524
)
"m_elab.ml" 1161 42541 42553 "m_elab.ml" 1161 42541 42594
type(
  unit
)
"m_elab.ml" 1162 42596 42608 "m_elab.ml" 1162 42596 42620
type(
  ?debug:string ->
  ?at:M_t.modunit ->
  ?prefix:string ->
  ?nonl:unit ->
  ((Format.formatter -> unit) -> unit, Format.formatter, unit) format ->
  (Format.formatter -> unit) -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 1162 42596 42628 "m_elab.ml" 1162 42596 42634
type(
  string
)
type(
  string option
)
"m_elab.ml" 1162 42596 42639 "m_elab.ml" 1162 42596 42641
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1160 42482 42522 "m_elab.ml" 1160 42482 42524
)
type(
  M_t.modunit option
)
"m_elab.ml" 1163 42642 42658 "m_elab.ml" 1163 42642 42679
type(
  ((Format.formatter -> unit) -> unit, Format.formatter, unit) format
)
"m_elab.ml" 1164 42680 42701 "m_elab.ml" 1164 42680 42703
type(
  Format.formatter
)
ident(
  def ff "m_elab.ml" 1164 42680 42707 "m_elab.ml" 1164 42680 42758
)
"m_elab.ml" 1164 42680 42707 "m_elab.ml" 1164 42680 42713
type(
  Expr.Fmt.ctx -> unit
)
ident(
  int_ref Stdlib.ignore "stdlib.mli" 723 27015 27015 "stdlib.mli" 723 27015 27055
)
"m_elab.ml" 1164 42680 42715 "m_elab.ml" 1164 42680 42737
type(
  ?force:bool ->
  Expr.Fmt.ctx -> Format.formatter -> M_t.modunit -> Expr.Fmt.ctx
)
ident(
  int_ref M_fmt.pp_print_modunit "m_fmt.mli" 9 107 107 "m_fmt.mli" 11 164 215
)
"m_elab.ml" 1164 42680 42739 "m_elab.ml" 1164 42680 42741
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1160 42482 42519 "m_elab.ml" 1160 42482 42521
)
"m_elab.ml" 1164 42680 42743 "m_elab.ml" 1164 42680 42750
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 1164 42680 42738 "m_elab.ml" 1164 42680 42751
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1164 42680 42752 "m_elab.ml" 1164 42680 42754
type(
  Format.formatter
)
ident(
  int_ref ff "m_elab.ml" 1164 42680 42701 "m_elab.ml" 1164 42680 42703
)
"m_elab.ml" 1164 42680 42755 "m_elab.ml" 1164 42680 42757
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1160 42482 42522 "m_elab.ml" 1160 42482 42524
)
"m_elab.ml" 1164 42680 42714 "m_elab.ml" 1164 42680 42758
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1164 42680 42707 "m_elab.ml" 1164 42680 42758
type(
  unit
)
"m_elab.ml" 1164 42680 42696 "m_elab.ml" 1164 42680 42759
type(
  Format.formatter -> unit
)
"m_elab.ml" 1162 42596 42608 "m_elab.ml" 1164 42680 42759
type(
  unit
)
"m_elab.ml" 1165 42761 42777 "m_elab.ml" 1165 42761 42783
type(
  M_t.modunit list
)
ident(
  def submus "m_elab.ml" 1171 43055 43067 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1166 42786 42802 "m_elab.ml" 1166 42786 42813
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable > ->
  M_t.modctx ->
  Expr.T.ctx ->
  Expr.T.instance Property.wrapped ->
  local:Expr.T.export -> iname:string Property.wrapped -> M_t.modunit list
)
ident(
  int_ref instantiate "m_elab.ml" 495 17387 17391 "m_elab.ml" 495 17387 17402
)
"m_elab.ml" 1166 42786 42814 "m_elab.ml" 1166 42786 42818
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref anon "m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
)
"m_elab.ml" 1166 42786 42819 "m_elab.ml" 1166 42786 42822
type(
  M_t.mule StringMap.t
)
ident(
  int_ref mcx "m_elab.ml" 1160 42482 42515 "m_elab.ml" 1160 42482 42518
)
"m_elab.ml" 1166 42786 42823 "m_elab.ml" 1166 42786 42825
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1160 42482 42519 "m_elab.ml" 1160 42482 42521
)
"m_elab.ml" 1166 42786 42827 "m_elab.ml" 1166 42786 42831
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 1160 42482 42510 "m_elab.ml" 1160 42482 42514
)
"m_elab.ml" 1166 42786 42832 "m_elab.ml" 1166 42786 42834
type(
  Expr.T.instance -> M_t.modunit -> Expr.T.instance Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1166 42786 42835 "m_elab.ml" 1166 42786 42837
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1160 42482 42522 "m_elab.ml" 1160 42482 42524
)
"m_elab.ml" 1166 42786 42826 "m_elab.ml" 1166 42786 42838
type(
  Expr.T.instance Property.wrapped
)
"m_elab.ml" 1167 42839 42866 "m_elab.ml" 1167 42839 42871
type(
  Expr.T.export
)
ident(
  int_ref local "m_elab.ml" 1160 42482 42526 "m_elab.ml" 1160 42482 42531
)
"m_elab.ml" 1167 42839 42879 "m_elab.ml" 1167 42839 42884
type(
  string Property.wrapped
)
ident(
  int_ref iname "m_elab.ml" 1160 42482 42533 "m_elab.ml" 1160 42482 42538
)
"m_elab.ml" 1166 42786 42802 "m_elab.ml" 1167 42839 42884
type(
  M_t.modunit list
)
"m_elab.ml" 1171 43055 43071 "m_elab.ml" 1171 43055 43078
type(
  bool
)
ident(
  def is_anon "m_elab.ml" 1172 43089 43101 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1171 43055 43081 "m_elab.ml" 1171 43055 43085
type(
  bool
)
"m_elab.ml" 1172 43089 43105 "m_elab.ml" 1172 43089 43109
type(
  'b -> 'b * bool
)
ident(
  def same "m_elab.ml" 1173 43130 43142 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1172 43089 43110 "m_elab.ml" 1172 43089 43111
type(
  'b
)
ident(
  def x "m_elab.ml" 1172 43089 43114 "m_elab.ml" 1172 43089 43126
)
"m_elab.ml" 1172 43089 43115 "m_elab.ml" 1172 43089 43116
type(
  'b
)
ident(
  int_ref x "m_elab.ml" 1172 43089 43110 "m_elab.ml" 1172 43089 43111
)
"m_elab.ml" 1172 43089 43118 "m_elab.ml" 1172 43089 43125
type(
  bool
)
ident(
  int_ref is_anon "m_elab.ml" 1171 43055 43071 "m_elab.ml" 1171 43055 43078
)
"m_elab.ml" 1172 43089 43114 "m_elab.ml" 1172 43089 43126
type(
  'b * bool
)
"m_elab.ml" 1173 43130 43146 "m_elab.ml" 1173 43130 43152
type(
  (M_t.modunit * bool) list
)
ident(
  def submus "m_elab.ml" 1174 43179 43191 "m_elab.ml" 1174 43179 43217
)
"m_elab.ml" 1173 43130 43155 "m_elab.ml" 1173 43130 43163
type(
  (M_t.modunit -> M_t.modunit * bool) ->
  M_t.modunit list -> (M_t.modunit * bool) list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"m_elab.ml" 1173 43130 43164 "m_elab.ml" 1173 43130 43168
type(
  M_t.modunit -> M_t.modunit * bool
)
ident(
  int_ref same "m_elab.ml" 1172 43089 43105 "m_elab.ml" 1172 43089 43109
)
"m_elab.ml" 1173 43130 43169 "m_elab.ml" 1173 43130 43175
type(
  M_t.modunit list
)
ident(
  int_ref submus "m_elab.ml" 1165 42761 42777 "m_elab.ml" 1165 42761 42783
)
"m_elab.ml" 1173 43130 43155 "m_elab.ml" 1173 43130 43175
type(
  (M_t.modunit * bool) list
)
"m_elab.ml" 1174 43179 43191 "m_elab.ml" 1174 43179 43195
type(
  M_t.modctx -> Expr.T.ctx -> (M_t.modunit * bool) list -> Expr.T.ctx
)
ident(
  int_ref spin "m_elab.ml" 1076 39041 39051 "m_elab.ml" 1076 39041 39055
)
"m_elab.ml" 1174 43179 43196 "m_elab.ml" 1174 43179 43199
type(
  M_t.mule StringMap.t
)
ident(
  int_ref mcx "m_elab.ml" 1160 42482 42515 "m_elab.ml" 1160 42482 42518
)
"m_elab.ml" 1174 43179 43200 "m_elab.ml" 1174 43179 43202
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1160 42482 42519 "m_elab.ml" 1160 42482 42521
)
"m_elab.ml" 1174 43179 43204 "m_elab.ml" 1174 43179 43210
type(
  (M_t.modunit * bool) list
)
ident(
  int_ref submus "m_elab.ml" 1173 43130 43146 "m_elab.ml" 1173 43130 43152
)
"m_elab.ml" 1174 43179 43211 "m_elab.ml" 1174 43179 43212
type(
  (M_t.modunit * bool) list ->
  (M_t.modunit * bool) list -> (M_t.modunit * bool) list
)
ident(
  int_ref Stdlib.( @ ) "stdlib.mli" 823 30483 30483 "stdlib.mli" 823 30483 30524
)
"m_elab.ml" 1174 43179 43213 "m_elab.ml" 1174 43179 43216
type(
  (M_t.modunit * bool) list
)
ident(
  int_ref mus "m_elab.ml" 1078 39089 39112 "m_elab.ml" 1078 39089 39115
)
"m_elab.ml" 1174 43179 43203 "m_elab.ml" 1174 43179 43217
type(
  (M_t.modunit * bool) list
)
"m_elab.ml" 1174 43179 43191 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1173 43130 43142 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1172 43089 43101 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1171 43055 43067 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1165 42761 42773 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1162 42596 42608 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1161 42541 42553 "m_elab.ml" 1174 43179 43217
type(
  Expr.T.ctx
)
"m_elab.ml" 1176 43233 43247 "m_elab.ml" 1176 43233 43249
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1176 43233 43247 "m_elab.ml" 1176 43233 43254
type(
  M_t.modunit_
)
"m_elab.ml" 1177 43260 43280 "m_elab.ml" 1177 43260 43284
type(
  Expr.T.instance
)
ident(
  def inst "m_elab.ml" 1178 43294 43306 "m_elab.ml" 1178 43294 43365
)
"m_elab.ml" 1177 43260 43286 "m_elab.ml" 1177 43260 43289
type(
  Expr.T.export
)
ident(
  def loc "m_elab.ml" 1178 43294 43306 "m_elab.ml" 1178 43294 43365
)
"m_elab.ml" 1177 43260 43270 "m_elab.ml" 1177 43260 43290
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1178 43294 43306 "m_elab.ml" 1178 43294 43321
type(
  Expr.T.instance ->
  M_t.mule StringMap.t ->
  Expr.T.ctx ->
  M_t.modunit ->
  local:Expr.T.export -> iname:string Property.wrapped -> Expr.T.ctx
)
ident(
  int_ref create_instance "m_elab.ml" 1160 42482 42494 "m_elab.ml" 1160 42482 42509
)
"m_elab.ml" 1178 43294 43322 "m_elab.ml" 1178 43294 43326
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 1177 43260 43280 "m_elab.ml" 1177 43260 43284
)
"m_elab.ml" 1178 43294 43327 "m_elab.ml" 1178 43294 43330
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1178 43294 43331 "m_elab.ml" 1178 43294 43333
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1178 43294 43334 "m_elab.ml" 1178 43294 43336
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1178 43294 43344 "m_elab.ml" 1178 43294 43347
type(
  Expr.T.export
)
ident(
  int_ref loc "m_elab.ml" 1177 43260 43286 "m_elab.ml" 1177 43260 43289
)
"m_elab.ml" 1178 43294 43356 "m_elab.ml" 1178 43294 43358
type(
  string
)
"m_elab.ml" 1178 43294 43359 "m_elab.ml" 1178 43294 43361
type(
  string -> M_t.modunit -> string Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1178 43294 43362 "m_elab.ml" 1178 43294 43364
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1178 43294 43355 "m_elab.ml" 1178 43294 43365
type(
  string Property.wrapped
)
"m_elab.ml" 1178 43294 43306 "m_elab.ml" 1178 43294 43365
type(
  Expr.T.ctx
)
"m_elab.ml" 1179 43366 43406 "m_elab.ml" 1179 43366 43408
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 1180 43431 43443 "m_elab.ml" 1180 43431 43493
)
"m_elab.ml" 1179 43366 43410 "m_elab.ml" 1179 43366 43414
type(
  Expr.T.instance
)
ident(
  def inst "m_elab.ml" 1180 43431 43443 "m_elab.ml" 1180 43431 43493
)
"m_elab.ml" 1179 43366 43396 "m_elab.ml" 1179 43366 43415
type(
  Expr.T.defn_
)
"m_elab.ml" 1179 43366 43388 "m_elab.ml" 1179 43366 43416
type(
  Expr.T.defn
)
"m_elab.ml" 1179 43366 43418 "m_elab.ml" 1179 43366 43419
type(
  Expr.T.wheredef
)
"m_elab.ml" 1179 43366 43421 "m_elab.ml" 1179 43366 43422
type(
  Expr.T.visibility
)
"m_elab.ml" 1179 43366 43424 "m_elab.ml" 1179 43366 43426
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 1180 43431 43443 "m_elab.ml" 1180 43431 43493
)
"m_elab.ml" 1179 43366 43376 "m_elab.ml" 1179 43366 43427
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1180 43431 43443 "m_elab.ml" 1180 43431 43458
type(
  Expr.T.instance ->
  M_t.mule StringMap.t ->
  Expr.T.ctx ->
  M_t.modunit -> local:Expr.T.export -> iname:Util.hint -> Expr.T.ctx
)
ident(
  int_ref create_instance "m_elab.ml" 1160 42482 42494 "m_elab.ml" 1160 42482 42509
)
"m_elab.ml" 1180 43431 43459 "m_elab.ml" 1180 43431 43463
type(
  Expr.T.instance
)
ident(
  int_ref inst "m_elab.ml" 1179 43366 43410 "m_elab.ml" 1179 43366 43414
)
"m_elab.ml" 1180 43431 43464 "m_elab.ml" 1180 43431 43467
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1180 43431 43468 "m_elab.ml" 1180 43431 43470
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1180 43431 43471 "m_elab.ml" 1180 43431 43473
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1180 43431 43481 "m_elab.ml" 1180 43431 43483
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 1179 43366 43424 "m_elab.ml" 1179 43366 43426
)
"m_elab.ml" 1180 43431 43491 "m_elab.ml" 1180 43431 43493
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 1179 43366 43406 "m_elab.ml" 1179 43366 43408
)
"m_elab.ml" 1180 43431 43443 "m_elab.ml" 1180 43431 43493
type(
  Expr.T.ctx
)
"m_elab.ml" 1181 43494 43534 "m_elab.ml" 1181 43494 43536
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1181 43494 43538 "m_elab.ml" 1181 43494 43539
type(
  Expr.T.expr
)
"m_elab.ml" 1181 43494 43524 "m_elab.ml" 1181 43494 43540
type(
  Expr.T.defn_
)
"m_elab.ml" 1181 43494 43516 "m_elab.ml" 1181 43494 43541
type(
  Expr.T.defn
)
"m_elab.ml" 1181 43494 43516 "m_elab.ml" 1181 43494 43547
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1181 43494 43549 "m_elab.ml" 1181 43494 43551
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1181 43494 43553 "m_elab.ml" 1181 43494 43556
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1181 43494 43558 "m_elab.ml" 1181 43494 43560
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1181 43494 43504 "m_elab.ml" 1181 43494 43561
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1183 43635 43674 "m_elab.ml" 1183 43635 43676
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1183 43635 43678 "m_elab.ml" 1183 43635 43679
type(
  Expr.T.expr
)
"m_elab.ml" 1183 43635 43681 "m_elab.ml" 1183 43635 43682
type(
  (Util.hint * Expr.T.backend_args) list list
)
"m_elab.ml" 1183 43635 43665 "m_elab.ml" 1183 43635 43683
type(
  Expr.T.defn_
)
"m_elab.ml" 1183 43635 43657 "m_elab.ml" 1183 43635 43684
type(
  Expr.T.defn
)
"m_elab.ml" 1183 43635 43657 "m_elab.ml" 1183 43635 43690
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1183 43635 43692 "m_elab.ml" 1183 43635 43694
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1183 43635 43696 "m_elab.ml" 1183 43635 43699
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1183 43635 43701 "m_elab.ml" 1183 43635 43703
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
)
"m_elab.ml" 1183 43635 43645 "m_elab.ml" 1183 43635 43704
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1181 43494 43504 "m_elab.ml" 1183 43635 43704
type(
  M_t.modunit_
)
"m_elab.ml" 1185 43724 43740 "m_elab.ml" 1185 43724 43742
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 1186 43794 43806 "m_elab.ml" 1209 44824 44872
)
"m_elab.ml" 1185 43724 43748 "m_elab.ml" 1185 43724 43755
type(
  bool
)
ident(
  int_ref is_anon "m_elab.ml" 1078 39089 39100 "m_elab.ml" 1078 39089 39107
)
"m_elab.ml" 1185 43724 43761 "m_elab.ml" 1185 43724 43763
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 1181 43494 43516 "m_elab.ml" 1181 43494 43547
)
"m_elab.ml" 1185 43724 43769 "m_elab.ml" 1185 43724 43773
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref anon "m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
)
"m_elab.ml" 1185 43724 43769 "m_elab.ml" 1185 43724 43778
type(
  string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn
)
"m_elab.ml" 1185 43724 43780 "m_elab.ml" 1185 43724 43782
type(
  string list
)
"m_elab.ml" 1185 43724 43784 "m_elab.ml" 1185 43724 43786
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1185 43724 43779 "m_elab.ml" 1185 43724 43787
type(
  string list Expr.Visit.scx
)
"m_elab.ml" 1185 43724 43788 "m_elab.ml" 1185 43724 43790
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 1181 43494 43516 "m_elab.ml" 1181 43494 43547
)
"m_elab.ml" 1185 43724 43769 "m_elab.ml" 1185 43724 43790
type(
  Expr.T.defn
)
"m_elab.ml" 1185 43724 43745 "m_elab.ml" 1185 43724 43790
type(
  Expr.T.defn
)
"m_elab.ml" 1186 43794 43810 "m_elab.ml" 1186 43794 43812
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 1187 43849 43861 "m_elab.ml" 1209 44824 44872
)
"m_elab.ml" 1186 43794 43815 "m_elab.ml" 1186 43794 43828
type(
  Expr.Constness.const_visitor
)
ident(
  int_ref const_visitor "m_elab.ml" 1098 39865 39877 "m_elab.ml" 1098 39865 39890
)
"m_elab.ml" 1186 43794 43815 "m_elab.ml" 1186 43794 43833
type(
  unit Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn
)
"m_elab.ml" 1186 43794 43835 "m_elab.ml" 1186 43794 43837
type(
  unit
)
"m_elab.ml" 1186 43794 43839 "m_elab.ml" 1186 43794 43841
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1186 43794 43834 "m_elab.ml" 1186 43794 43842
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1186 43794 43843 "m_elab.ml" 1186 43794 43845
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 1185 43724 43740 "m_elab.ml" 1185 43724 43742
)
"m_elab.ml" 1186 43794 43815 "m_elab.ml" 1186 43794 43845
type(
  Expr.T.defn
)
"m_elab.ml" 1187 43849 43865 "m_elab.ml" 1187 43849 43867
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1189 43963 43975 "m_elab.ml" 1209 44824 44872
)
"m_elab.ml" 1187 43849 43882 "m_elab.ml" 1187 43849 43884
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 1186 43794 43810 "m_elab.ml" 1186 43794 43812
)
"m_elab.ml" 1187 43849 43886 "m_elab.ml" 1187 43849 43888
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 1181 43494 43549 "m_elab.ml" 1181 43494 43551
)
"m_elab.ml" 1187 43849 43890 "m_elab.ml" 1187 43849 43893
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 1181 43494 43553 "m_elab.ml" 1181 43494 43556
)
"m_elab.ml" 1187 43849 43895 "m_elab.ml" 1187 43849 43897
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 1181 43494 43558 "m_elab.ml" 1181 43494 43560
)
"m_elab.ml" 1187 43849 43870 "m_elab.ml" 1187 43849 43898
type(
  M_t.modunit_
)
"m_elab.ml" 1187 43849 43899 "m_elab.ml" 1187 43849 43901
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1187 43849 43902 "m_elab.ml" 1187 43849 43904
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1187 43849 43870 "m_elab.ml" 1187 43849 43904
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1189 43963 43979 "m_elab.ml" 1189 43963 43980
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  def h "m_elab.ml" 1190 44015 44027 "m_elab.ml" 1209 44824 44872
)
"m_elab.ml" 1189 43963 43989 "m_elab.ml" 1189 43963 43991
type(
  Expr.T.defn
)
ident(
  int_ref df "m_elab.ml" 1186 43794 43810 "m_elab.ml" 1186 43794 43812
)
"m_elab.ml" 1189 43963 43993 "m_elab.ml" 1189 43963 43995
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 1181 43494 43549 "m_elab.ml" 1181 43494 43551
)
"m_elab.ml" 1189 43963 43997 "m_elab.ml" 1189 43963 44000
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 1181 43494 43553 "m_elab.ml" 1181 43494 43556
)
"m_elab.ml" 1189 43963 44002 "m_elab.ml" 1189 43963 44004
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 1181 43494 43558 "m_elab.ml" 1181 43494 43560
)
"m_elab.ml" 1189 43963 43983 "m_elab.ml" 1189 43963 44005
type(
  Expr.T.hyp_
)
"m_elab.ml" 1189 43963 44006 "m_elab.ml" 1189 43963 44008
type(
  Expr.T.hyp_ ->
  M_t.modunit_ Property.wrapped -> Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1189 43963 44009 "m_elab.ml" 1189 43963 44011
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1187 43849 43865 "m_elab.ml" 1187 43849 43867
)
"m_elab.ml" 1189 43963 43983 "m_elab.ml" 1189 43963 44011
type(
  Expr.T.hyp_ Property.wrapped
)
"m_elab.ml" 1190 44015 44033 "m_elab.ml" 1190 44015 44043
type(
  ?backwards:bool ->
  Expr.T.ctx -> (Expr.T.hyp -> bool) -> (int * Expr.T.hyp) option
)
ident(
  int_ref Deque.find "deque.mli" 23 579 579 "deque.mli" 23 579 652
)
"m_elab.ml" 1190 44015 44055 "m_elab.ml" 1190 44015 44059
type(
  bool
)
type(
  bool option
)
"m_elab.ml" 1190 44015 44060 "m_elab.ml" 1190 44015 44062
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1191 44063 44093 "m_elab.ml" 1191 44063 44115
type(
  string -> Expr.T.hyp -> bool
)
ident(
  int_ref Expr.Anon.hyp_is_named "expr.mli" 659 16894 16898 "expr.mli" 659 16894 16937
)
"m_elab.ml" 1191 44063 44116 "m_elab.ml" 1191 44063 44118
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 1181 43494 43534 "m_elab.ml" 1181 43494 43536
)
"m_elab.ml" 1191 44063 44116 "m_elab.ml" 1191 44063 44123
type(
  string
)
"m_elab.ml" 1191 44063 44092 "m_elab.ml" 1191 44063 44124
type(
  Expr.T.hyp -> bool
)
"m_elab.ml" 1190 44015 44033 "m_elab.ml" 1191 44063 44124
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 1192 44130 44150 "m_elab.ml" 1192 44130 44151
type(
  int
)
ident(
  def x "m_elab.ml" 1193 44192 44208 "m_elab.ml" 1207 44785 44804
)
"m_elab.ml" 1192 44130 44168 "m_elab.ml" 1192 44130 44169
type(
  Expr.T.defn
)
ident(
  def d "m_elab.ml" 1193 44192 44208 "m_elab.ml" 1207 44785 44804
)
"m_elab.ml" 1192 44130 44171 "m_elab.ml" 1192 44130 44172
type(
  Expr.T.wheredef
)
"m_elab.ml" 1192 44130 44174 "m_elab.ml" 1192 44130 44175
type(
  Expr.T.visibility
)
"m_elab.ml" 1192 44130 44177 "m_elab.ml" 1192 44130 44178
type(
  Expr.T.export
)
"m_elab.ml" 1192 44130 44162 "m_elab.ml" 1192 44130 44179
type(
  Expr.T.hyp_
)
"m_elab.ml" 1192 44130 44154 "m_elab.ml" 1192 44130 44180
type(
  Expr.T.hyp
)
"m_elab.ml" 1192 44130 44153 "m_elab.ml" 1192 44130 44187
type(
  Expr.T.hyp
)
ident(
  def oh "m_elab.ml" 1193 44192 44208 "m_elab.ml" 1207 44785 44804
)
"m_elab.ml" 1192 44130 44149 "m_elab.ml" 1192 44130 44188
type(
  int * Expr.T.hyp
)
"m_elab.ml" 1192 44130 44144 "m_elab.ml" 1192 44130 44188
type(
  (int * Expr.T.hyp) option
)
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 1193 44192 44212 "m_elab.ml" 1193 44192 44214
type(
  Expr.T.hyp
)
ident(
  def oh "m_elab.ml" 1194 44247 44263 "m_elab.ml" 1207 44785 44804
)
"m_elab.ml" 1193 44192 44217 "m_elab.ml" 1193 44192 44224
type(
  Expr.Subst.sub -> Expr.T.hyp -> Expr.T.hyp
)
ident(
  int_ref Expr.Subst.app_hyp "expr.mli" 468 11661 11665 "expr.mli" 470 11700 11715
)
"m_elab.ml" 1193 44192 44226 "m_elab.ml" 1193 44192 44231
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 1193 44192 44233 "m_elab.ml" 1193 44192 44234
type(
  int
)
ident(
  int_ref x "m_elab.ml" 1192 44130 44150 "m_elab.ml" 1192 44130 44151
)
"m_elab.ml" 1193 44192 44235 "m_elab.ml" 1193 44192 44236
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 1193 44192 44237 "m_elab.ml" 1193 44192 44238
type(
  int
)
"m_elab.ml" 1193 44192 44232 "m_elab.ml" 1193 44192 44239
type(
  int
)
"m_elab.ml" 1193 44192 44225 "m_elab.ml" 1193 44192 44240
type(
  Expr.Subst.sub
)
"m_elab.ml" 1193 44192 44241 "m_elab.ml" 1193 44192 44243
type(
  Expr.T.hyp
)
ident(
  int_ref oh "m_elab.ml" 1192 44130 44153 "m_elab.ml" 1192 44130 44187
)
"m_elab.ml" 1193 44192 44217 "m_elab.ml" 1193 44192 44243
type(
  Expr.T.hyp
)
"m_elab.ml" 1194 44247 44267 "m_elab.ml" 1194 44247 44269
type(
  bool
)
ident(
  def eq "m_elab.ml" 1199 44409 44425 "m_elab.ml" 1207 44785 44804
)
"m_elab.ml" 1195 44272 44296 "m_elab.ml" 1195 44272 44297
type(
  Expr.T.defn
)
ident(
  int_ref d "m_elab.ml" 1192 44130 44168 "m_elab.ml" 1192 44130 44169
)
"m_elab.ml" 1195 44272 44296 "m_elab.ml" 1195 44272 44302
type(
  Expr.T.defn_
)
"m_elab.ml" 1196 44308 44338 "m_elab.ml" 1196 44308 44339
type(
  Expr.T.shape
)
type(
  Util.hint
)
"m_elab.ml" 1196 44308 44328 "m_elab.ml" 1196 44308 44339
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 1196 44308 44343 "m_elab.ml" 1196 44308 44347
type(
  bool
)
"m_elab.ml" 1197 44348 44368 "m_elab.ml" 1197 44348 44369
type(
  Expr.T.defn_
)
type(
  Expr.T.defn_
)
"m_elab.ml" 1197 44348 44373 "m_elab.ml" 1197 44348 44384
type(
  Expr.T.hyp -> Expr.T.hyp -> bool
)
ident(
  int_ref Expr.Eq.hyp "expr.mli" 588 15540 15544 "expr.mli" 589 15553 15579
)
"m_elab.ml" 1197 44348 44385 "m_elab.ml" 1197 44348 44387
type(
  Expr.T.hyp
)
ident(
  int_ref oh "m_elab.ml" 1193 44192 44212 "m_elab.ml" 1193 44192 44214
)
"m_elab.ml" 1197 44348 44388 "m_elab.ml" 1197 44348 44389
type(
  Expr.T.hyp
)
ident(
  int_ref h "m_elab.ml" 1189 43963 43979 "m_elab.ml" 1189 43963 43980
)
"m_elab.ml" 1197 44348 44373 "m_elab.ml" 1197 44348 44389
type(
  bool
)
"m_elab.ml" 1195 44272 44290 "m_elab.ml" 1197 44348 44389
type(
  bool
)
"m_elab.ml" 1199 44409 44428 "m_elab.ml" 1199 44409 44430
type(
  bool
)
ident(
  int_ref eq "m_elab.ml" 1194 44247 44267 "m_elab.ml" 1194 44247 44269
)
"m_elab.ml" 1200 44442 44464 "m_elab.ml" 1200 44442 44467
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 1201 44494 44512 "m_elab.ml" 1204 44667 44702
)
"m_elab.ml" 1200 44442 44468 "m_elab.ml" 1200 44442 44473
type(
  bool list
)
ident(
  def flags "m_elab.ml" 1201 44494 44512 "m_elab.ml" 1204 44667 44702
)
"m_elab.ml" 1200 44442 44464 "m_elab.ml" 1200 44442 44473
type(
  M_t.modunit list * bool list
)
"m_elab.ml" 1200 44442 44476 "m_elab.ml" 1200 44442 44486
type(
  (M_t.modunit * bool) list -> M_t.modunit list * bool list
)
ident(
  int_ref Ext.List.split "ext.mli" 42 1822 1824 "ext.mli" 42 1822 1871
)
"m_elab.ml" 1200 44442 44487 "m_elab.ml" 1200 44442 44490
type(
  (M_t.modunit * bool) list
)
ident(
  int_ref mus "m_elab.ml" 1078 39089 39112 "m_elab.ml" 1078 39089 39115
)
"m_elab.ml" 1200 44442 44476 "m_elab.ml" 1200 44442 44490
type(
  M_t.modunit list * bool list
)
"m_elab.ml" 1201 44494 44517 "m_elab.ml" 1201 44494 44518
type(
  Expr.Subst.sub
)
"m_elab.ml" 1201 44494 44520 "m_elab.ml" 1201 44494 44523
type(
  M_t.modunit list
)
ident(
  def mus "m_elab.ml" 1203 44613 44631 "m_elab.ml" 1204 44667 44702
)
"m_elab.ml" 1201 44494 44516 "m_elab.ml" 1201 44494 44524
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 1202 44527 44547 "m_elab.ml" 1202 44527 44567
type(
  Expr.Subst.sub -> M_t.modunit list -> Expr.Subst.sub * M_t.modunit list
)
ident(
  int_ref M_subst.app_modunits "m_subst.mli" 7 98 98 "m_subst.mli" 7 98 157
)
"m_elab.ml" 1202 44527 44569 "m_elab.ml" 1202 44527 44574
type(
  Expr.T.expr -> Expr.Subst.sub -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.scons "expr.mli" 429 10832 10836 "expr.mli" 431 10870 10885
)
"m_elab.ml" 1202 44527 44580 "m_elab.ml" 1202 44527 44581
type(
  int
)
ident(
  int_ref x "m_elab.ml" 1192 44130 44150 "m_elab.ml" 1192 44130 44151
)
"m_elab.ml" 1202 44527 44582 "m_elab.ml" 1202 44527 44583
type(
  int -> int -> int
)
ident(
  int_ref Stdlib.( + ) "stdlib.mli" 347 13626 13626 "stdlib.mli" 347 13626 13672
)
"m_elab.ml" 1202 44527 44584 "m_elab.ml" 1202 44527 44585
type(
  int
)
"m_elab.ml" 1202 44527 44579 "m_elab.ml" 1202 44527 44586
type(
  int
)
"m_elab.ml" 1202 44527 44576 "m_elab.ml" 1202 44527 44586
type(
  Expr.T.expr_
)
"m_elab.ml" 1202 44527 44587 "m_elab.ml" 1202 44527 44589
type(
  Expr.T.expr_ -> Expr.T.hyp_ Property.wrapped -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1202 44527 44590 "m_elab.ml" 1202 44527 44591
type(
  Expr.T.hyp_ Property.wrapped
)
ident(
  int_ref h "m_elab.ml" 1189 43963 43979 "m_elab.ml" 1189 43963 43980
)
"m_elab.ml" 1202 44527 44575 "m_elab.ml" 1202 44527 44592
type(
  Expr.T.expr
)
"m_elab.ml" 1202 44527 44594 "m_elab.ml" 1202 44527 44599
type(
  int -> Expr.Subst.sub
)
ident(
  int_ref Expr.Subst.shift "expr.mli" 427 10798 10802 "expr.mli" 428 10813 10831
)
"m_elab.ml" 1202 44527 44600 "m_elab.ml" 1202 44527 44601
type(
  int
)
"m_elab.ml" 1202 44527 44593 "m_elab.ml" 1202 44527 44602
type(
  Expr.Subst.sub
)
"m_elab.ml" 1202 44527 44568 "m_elab.ml" 1202 44527 44603
type(
  Expr.Subst.sub
)
"m_elab.ml" 1202 44527 44604 "m_elab.ml" 1202 44527 44609
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 1200 44442 44464 "m_elab.ml" 1200 44442 44467
)
"m_elab.ml" 1202 44527 44547 "m_elab.ml" 1202 44527 44609
type(
  Expr.Subst.sub * M_t.modunit list
)
"m_elab.ml" 1203 44613 44635 "m_elab.ml" 1203 44613 44638
type(
  (M_t.modunit * bool) list
)
ident(
  def mus "m_elab.ml" 1204 44667 44687 "m_elab.ml" 1204 44667 44702
)
"m_elab.ml" 1203 44613 44641 "m_elab.ml" 1203 44613 44653
type(
  M_t.modunit list -> bool list -> (M_t.modunit * bool) list
)
ident(
  int_ref Ext.List.combine "ext.mli" 43 1872 1874 "ext.mli" 43 1872 1924
)
"m_elab.ml" 1203 44613 44654 "m_elab.ml" 1203 44613 44657
type(
  M_t.modunit list
)
ident(
  int_ref mus "m_elab.ml" 1201 44494 44520 "m_elab.ml" 1201 44494 44523
)
"m_elab.ml" 1203 44613 44658 "m_elab.ml" 1203 44613 44663
type(
  bool list
)
ident(
  int_ref flags "m_elab.ml" 1200 44442 44468 "m_elab.ml" 1200 44442 44473
)
"m_elab.ml" 1203 44613 44641 "m_elab.ml" 1203 44613 44663
type(
  (M_t.modunit * bool) list
)
"m_elab.ml" 1204 44667 44687 "m_elab.ml" 1204 44667 44691
type(
  M_t.modctx -> Expr.T.ctx -> (M_t.modunit * bool) list -> Expr.T.ctx
)
ident(
  int_ref spin "m_elab.ml" 1076 39041 39051 "m_elab.ml" 1076 39041 39055
)
"m_elab.ml" 1204 44667 44692 "m_elab.ml" 1204 44667 44695
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1204 44667 44696 "m_elab.ml" 1204 44667 44698
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1204 44667 44699 "m_elab.ml" 1204 44667 44702
type(
  (M_t.modunit * bool) list
)
ident(
  int_ref mus "m_elab.ml" 1203 44613 44635 "m_elab.ml" 1203 44613 44638
)
"m_elab.ml" 1204 44667 44687 "m_elab.ml" 1204 44667 44702
type(
  Expr.T.ctx
)
"m_elab.ml" 1203 44613 44631 "m_elab.ml" 1204 44667 44702
type(
  Expr.T.ctx
)
"m_elab.ml" 1201 44494 44512 "m_elab.ml" 1204 44667 44702
type(
  Expr.T.ctx
)
"m_elab.ml" 1199 44409 44436 "m_elab.ml" 1205 44703 44722
type(
  Expr.T.ctx
)
"m_elab.ml" 1206 44734 44752 "m_elab.ml" 1206 44734 44760
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1206 44734 44761 "m_elab.ml" 1206 44734 44764
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1206 44734 44765 "m_elab.ml" 1206 44734 44767
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1206 44734 44768 "m_elab.ml" 1206 44734 44770
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1187 43849 43865 "m_elab.ml" 1187 43849 43867
)
"m_elab.ml" 1206 44734 44771 "m_elab.ml" 1206 44734 44784
type(
  string
)
"m_elab.ml" 1205 44703 44728 "m_elab.ml" 1207 44785 44804
type(
  Expr.T.ctx
)
"m_elab.ml" 1199 44409 44425 "m_elab.ml" 1207 44785 44804
type(
  Expr.T.ctx
)
"m_elab.ml" 1194 44247 44263 "m_elab.ml" 1207 44785 44804
type(
  Expr.T.ctx
)
"m_elab.ml" 1193 44192 44208 "m_elab.ml" 1207 44785 44804
type(
  Expr.T.ctx
)
"m_elab.ml" 1208 44805 44819 "m_elab.ml" 1208 44805 44820
type(
  (int * Expr.T.hyp) option
)
type(
  (int * Expr.T.hyp) option
)
"m_elab.ml" 1209 44824 44840 "m_elab.ml" 1209 44824 44848
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1209 44824 44849 "m_elab.ml" 1209 44824 44852
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1209 44824 44853 "m_elab.ml" 1209 44824 44855
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1209 44824 44856 "m_elab.ml" 1209 44824 44858
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1187 43849 43865 "m_elab.ml" 1187 43849 43867
)
"m_elab.ml" 1209 44824 44859 "m_elab.ml" 1209 44824 44872
type(
  string
)
"m_elab.ml" 1209 44824 44840 "m_elab.ml" 1209 44824 44872
type(
  Expr.T.ctx
)
"m_elab.ml" 1190 44015 44027 "m_elab.ml" 1209 44824 44872
type(
  Expr.T.ctx
)
"m_elab.ml" 1189 43963 43975 "m_elab.ml" 1209 44824 44872
type(
  Expr.T.ctx
)
"m_elab.ml" 1187 43849 43861 "m_elab.ml" 1209 44824 44872
type(
  Expr.T.ctx
)
"m_elab.ml" 1186 43794 43806 "m_elab.ml" 1209 44824 44872
type(
  Expr.T.ctx
)
"m_elab.ml" 1184 43708 43718 "m_elab.ml" 1210 44873 44886
type(
  Expr.T.ctx
)
"m_elab.ml" 1211 44887 44908 "m_elab.ml" 1211 44887 44909
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 1211 44887 44897 "m_elab.ml" 1211 44887 44909
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1212 44910 44950 "m_elab.ml" 1212 44910 44951
type(
  Expr.T.shape
)
type(
  Util.hint
)
"m_elab.ml" 1212 44910 44940 "m_elab.ml" 1212 44910 44951
type(
  Expr.T.defn_
)
"m_elab.ml" 1212 44910 44932 "m_elab.ml" 1212 44910 44952
type(
  Expr.T.defn
)
"m_elab.ml" 1212 44910 44954 "m_elab.ml" 1212 44910 44955
type(
  Expr.T.wheredef
)
"m_elab.ml" 1212 44910 44957 "m_elab.ml" 1212 44910 44958
type(
  Expr.T.visibility
)
"m_elab.ml" 1212 44910 44960 "m_elab.ml" 1212 44910 44961
type(
  Expr.T.export
)
"m_elab.ml" 1212 44910 44920 "m_elab.ml" 1212 44910 44962
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1211 44887 44897 "m_elab.ml" 1212 44910 44962
type(
  M_t.modunit_
)
"m_elab.ml" 1214 45028 45048 "m_elab.ml" 1214 45028 45049
type(
  (Util.hint * Expr.T.shape) list
)
"m_elab.ml" 1214 45028 45038 "m_elab.ml" 1214 45028 45049
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1211 44887 44897 "m_elab.ml" 1214 45028 45049
type(
  M_t.modunit_
)
"m_elab.ml" 1215 45050 45070 "m_elab.ml" 1215 45050 45071
type(
  Util.hints
)
"m_elab.ml" 1215 45050 45060 "m_elab.ml" 1215 45050 45071
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1211 44887 44897 "m_elab.ml" 1215 45050 45071
type(
  M_t.modunit_
)
"m_elab.ml" 1215 45050 45075 "m_elab.ml" 1215 45050 45083
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1215 45050 45084 "m_elab.ml" 1215 45050 45087
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1215 45050 45088 "m_elab.ml" 1215 45050 45090
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1215 45050 45091 "m_elab.ml" 1215 45050 45093
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1215 45050 45094 "m_elab.ml" 1215 45050 45105
type(
  string
)
"m_elab.ml" 1215 45050 45075 "m_elab.ml" 1215 45050 45105
type(
  Expr.T.ctx
)
"m_elab.ml" 1216 45106 45123 "m_elab.ml" 1216 45106 45125
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 1217 45133 45145 "m_elab.ml" 1224 45422 45437
)
"m_elab.ml" 1216 45106 45127 "m_elab.ml" 1216 45106 45128
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 1217 45133 45145 "m_elab.ml" 1224 45422 45437
)
"m_elab.ml" 1216 45106 45116 "m_elab.ml" 1216 45106 45129
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1217 45133 45148 "m_elab.ml" 1217 45133 45157
type(
  Util.hint option -> bool
)
ident(
  int_ref redundant "m_elab.ml" 1100 39956 39968 "m_elab.ml" 1100 39956 39977
)
"m_elab.ml" 1217 45133 45158 "m_elab.ml" 1217 45133 45160
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1216 45106 45123 "m_elab.ml" 1216 45106 45125
)
"m_elab.ml" 1217 45133 45148 "m_elab.ml" 1217 45133 45160
type(
  bool
)
"m_elab.ml" 1218 45172 45186 "m_elab.ml" 1218 45172 45190
type(
  M_t.modctx -> Expr.T.ctx -> (M_t.modunit * bool) list -> Expr.T.ctx
)
ident(
  int_ref spin "m_elab.ml" 1076 39041 39051 "m_elab.ml" 1076 39041 39055
)
"m_elab.ml" 1218 45172 45191 "m_elab.ml" 1218 45172 45194
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1218 45172 45195 "m_elab.ml" 1218 45172 45197
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1218 45172 45198 "m_elab.ml" 1218 45172 45201
type(
  (M_t.modunit * bool) list
)
ident(
  int_ref mus "m_elab.ml" 1078 39089 39112 "m_elab.ml" 1078 39089 39115
)
"m_elab.ml" 1217 45133 45166 "m_elab.ml" 1219 45202 45217
type(
  Expr.T.ctx
)
"m_elab.ml" 1220 45229 45247 "m_elab.ml" 1220 45229 45248
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 1221 45280 45294 "m_elab.ml" 1223 45381 45421
)
"m_elab.ml" 1220 45229 45251 "m_elab.ml" 1220 45229 45255
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref anon "m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
)
"m_elab.ml" 1220 45229 45251 "m_elab.ml" 1220 45229 45261
type(
  M_t.modctx -> string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr
)
"m_elab.ml" 1220 45229 45262 "m_elab.ml" 1220 45229 45265
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1220 45229 45267 "m_elab.ml" 1220 45229 45269
type(
  string list
)
"m_elab.ml" 1220 45229 45271 "m_elab.ml" 1220 45229 45273
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1220 45229 45266 "m_elab.ml" 1220 45229 45274
type(
  string list Expr.Visit.scx
)
"m_elab.ml" 1220 45229 45275 "m_elab.ml" 1220 45229 45276
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 1216 45106 45127 "m_elab.ml" 1216 45106 45128
)
"m_elab.ml" 1220 45229 45251 "m_elab.ml" 1220 45229 45276
type(
  Expr.T.expr
)
"m_elab.ml" 1221 45280 45298 "m_elab.ml" 1221 45280 45299
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 1222 45335 45349 "m_elab.ml" 1223 45381 45421
)
"m_elab.ml" 1221 45280 45302 "m_elab.ml" 1221 45280 45315
type(
  Expr.Constness.const_visitor
)
ident(
  int_ref const_visitor "m_elab.ml" 1098 39865 39877 "m_elab.ml" 1098 39865 39890
)
"m_elab.ml" 1221 45280 45302 "m_elab.ml" 1221 45280 45320
type(
  unit Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr
)
"m_elab.ml" 1221 45280 45322 "m_elab.ml" 1221 45280 45324
type(
  unit
)
"m_elab.ml" 1221 45280 45326 "m_elab.ml" 1221 45280 45328
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1221 45280 45321 "m_elab.ml" 1221 45280 45329
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1221 45280 45330 "m_elab.ml" 1221 45280 45331
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 1220 45229 45247 "m_elab.ml" 1220 45229 45248
)
"m_elab.ml" 1221 45280 45302 "m_elab.ml" 1221 45280 45331
type(
  Expr.T.expr
)
"m_elab.ml" 1222 45335 45353 "m_elab.ml" 1222 45335 45355
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1223 45381 45395 "m_elab.ml" 1223 45381 45421
)
"m_elab.ml" 1222 45335 45365 "m_elab.ml" 1222 45335 45367
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1216 45106 45123 "m_elab.ml" 1216 45106 45125
)
"m_elab.ml" 1222 45335 45369 "m_elab.ml" 1222 45335 45370
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 1221 45280 45298 "m_elab.ml" 1221 45280 45299
)
"m_elab.ml" 1222 45335 45358 "m_elab.ml" 1222 45335 45371
type(
  M_t.modunit_
)
"m_elab.ml" 1222 45335 45372 "m_elab.ml" 1222 45335 45374
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1222 45335 45375 "m_elab.ml" 1222 45335 45377
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1222 45335 45358 "m_elab.ml" 1222 45335 45377
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1223 45381 45395 "m_elab.ml" 1223 45381 45403
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1223 45381 45404 "m_elab.ml" 1223 45381 45407
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1223 45381 45408 "m_elab.ml" 1223 45381 45410
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1223 45381 45411 "m_elab.ml" 1223 45381 45413
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1222 45335 45353 "m_elab.ml" 1222 45335 45355
)
"m_elab.ml" 1223 45381 45414 "m_elab.ml" 1223 45381 45421
type(
  string
)
"m_elab.ml" 1223 45381 45395 "m_elab.ml" 1223 45381 45421
type(
  Expr.T.ctx
)
"m_elab.ml" 1222 45335 45349 "m_elab.ml" 1223 45381 45421
type(
  Expr.T.ctx
)
"m_elab.ml" 1221 45280 45294 "m_elab.ml" 1223 45381 45421
type(
  Expr.T.ctx
)
"m_elab.ml" 1219 45202 45223 "m_elab.ml" 1224 45422 45437
type(
  Expr.T.ctx
)
"m_elab.ml" 1217 45133 45145 "m_elab.ml" 1224 45422 45437
type(
  Expr.T.ctx
)
"m_elab.ml" 1225 45438 45457 "m_elab.ml" 1225 45438 45459
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1225 45438 45461 "m_elab.ml" 1225 45438 45463
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1225 45438 45465 "m_elab.ml" 1225 45438 45469
type(
  int
)
ident(
  def naxs "m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1225 45438 45471 "m_elab.ml" 1225 45438 45473
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1225 45438 45475 "m_elab.ml" 1225 45438 45482
type(
  Proof.T.proof
)
ident(
  def pf_orig "m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1225 45438 45484 "m_elab.ml" 1225 45438 45488
type(
  M_t.summary
)
ident(
  def summ "m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1225 45438 45448 "m_elab.ml" 1225 45438 45489
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1226 45493 45510 "m_elab.ml" 1226 45493 45512
type(
  Util.hint option
)
ident(
  def nm "m_elab.ml" 1236 45865 45877 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1226 45493 45514 "m_elab.ml" 1226 45493 45516
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1236 45865 45877 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1226 45493 45518 "m_elab.ml" 1226 45493 45525
type(
  Proof.T.proof
)
ident(
  def pf_orig "m_elab.ml" 1236 45865 45877 "m_elab.ml" 1261 46945 46960
)
"m_elab.ml" 1226 45493 45509 "m_elab.ml" 1226 45493 45526
type(
  Util.hint option * Proof.T.proof * Proof.T.proof
)
"m_elab.ml" 1227 45529 45546 "m_elab.ml" 1227 45529 45555
type(
  Util.hint option -> bool
)
ident(
  int_ref redundant "m_elab.ml" 1100 39956 39968 "m_elab.ml" 1100 39956 39977
)
"m_elab.ml" 1227 45529 45556 "m_elab.ml" 1227 45529 45558
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1225 45438 45457 "m_elab.ml" 1225 45438 45459
)
"m_elab.ml" 1227 45529 45546 "m_elab.ml" 1227 45529 45558
type(
  bool
)
"m_elab.ml" 1228 45570 45590 "m_elab.ml" 1228 45570 45594
type(
  string Property.wrapped
)
ident(
  def name "m_elab.ml" 1233 45746 45762 "m_elab.ml" 1233 45746 45808
)
"m_elab.ml" 1229 45597 45621 "m_elab.ml" 1229 45597 45623
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1225 45438 45457 "m_elab.ml" 1225 45438 45459
)
"m_elab.ml" 1230 45629 45654 "m_elab.ml" 1230 45629 45655
type(
  Util.hint
)
ident(
  def n "m_elab.ml" 1230 45629 45659 "m_elab.ml" 1230 45629 45688
)
"m_elab.ml" 1230 45629 45649 "m_elab.ml" 1230 45629 45655
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 1230 45629 45660 "m_elab.ml" 1230 45629 45673
type(
  string
)
"m_elab.ml" 1230 45629 45674 "m_elab.ml" 1230 45629 45675
type(
  string -> string -> string
)
ident(
  int_ref Stdlib.( ^ ) "stdlib.mli" 699 26389 26389 "stdlib.mli" 699 26389 26427
)
"m_elab.ml" 1230 45629 45676 "m_elab.ml" 1230 45629 45677
type(
  Util.hint
)
ident(
  int_ref n "m_elab.ml" 1230 45629 45654 "m_elab.ml" 1230 45629 45655
)
"m_elab.ml" 1230 45629 45676 "m_elab.ml" 1230 45629 45682
type(
  string
)
"m_elab.ml" 1230 45629 45659 "m_elab.ml" 1230 45629 45683
type(
  string
)
"m_elab.ml" 1230 45629 45684 "m_elab.ml" 1230 45629 45686
type(
  string -> Util.hint -> string Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1230 45629 45687 "m_elab.ml" 1230 45629 45688
type(
  Util.hint
)
ident(
  int_ref n "m_elab.ml" 1230 45629 45654 "m_elab.ml" 1230 45629 45655
)
"m_elab.ml" 1230 45629 45659 "m_elab.ml" 1230 45629 45688
type(
  string Property.wrapped
)
"m_elab.ml" 1231 45689 45709 "m_elab.ml" 1231 45689 45710
type(
  Util.hint option
)
type(
  Util.hint option
)
"m_elab.ml" 1231 45689 45721 "m_elab.ml" 1231 45689 45726
type(
  bool
)
"m_elab.ml" 1231 45689 45714 "m_elab.ml" 1231 45689 45726
type(
  string Property.wrapped
)
"m_elab.ml" 1229 45597 45615 "m_elab.ml" 1231 45689 45726
type(
  string Property.wrapped
)
"m_elab.ml" 1233 45746 45768 "m_elab.ml" 1233 45746 45772
type(
  Util.hint
)
ident(
  int_ref name "m_elab.ml" 1228 45570 45590 "m_elab.ml" 1228 45570 45594
)
"m_elab.ml" 1233 45746 45763 "m_elab.ml" 1233 45746 45772
type(
  Util.hint option
)
"m_elab.ml" 1233 45746 45774 "m_elab.ml" 1233 45746 45781
type(
  Proof.T.proof_
)
"m_elab.ml" 1233 45746 45782 "m_elab.ml" 1233 45746 45784
type(
  Proof.T.proof_ -> Proof.T.proof -> Proof.T.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1233 45746 45785 "m_elab.ml" 1233 45746 45787
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1225 45438 45471 "m_elab.ml" 1225 45438 45473
)
"m_elab.ml" 1233 45746 45774 "m_elab.ml" 1233 45746 45787
type(
  Proof.T.proof
)
"m_elab.ml" 1233 45746 45789 "m_elab.ml" 1233 45746 45796
type(
  Proof.T.proof_
)
"m_elab.ml" 1233 45746 45797 "m_elab.ml" 1233 45746 45799
type(
  Proof.T.proof_ -> Proof.T.proof -> Proof.T.proof
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1233 45746 45800 "m_elab.ml" 1233 45746 45807
type(
  Proof.T.proof
)
ident(
  int_ref pf_orig "m_elab.ml" 1225 45438 45475 "m_elab.ml" 1225 45438 45482
)
"m_elab.ml" 1233 45746 45789 "m_elab.ml" 1233 45746 45807
type(
  Proof.T.proof
)
"m_elab.ml" 1233 45746 45762 "m_elab.ml" 1233 45746 45808
type(
  Util.hint option * Proof.T.proof * Proof.T.proof
)
"m_elab.ml" 1227 45529 45564 "m_elab.ml" 1234 45809 45826
type(
  Util.hint option * Proof.T.proof * Proof.T.proof
)
"m_elab.ml" 1234 45809 45833 "m_elab.ml" 1234 45809 45835
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1225 45438 45457 "m_elab.ml" 1225 45438 45459
)
"m_elab.ml" 1234 45809 45837 "m_elab.ml" 1234 45809 45839
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1225 45438 45471 "m_elab.ml" 1225 45438 45473
)
"m_elab.ml" 1234 45809 45841 "m_elab.ml" 1234 45809 45848
type(
  Proof.T.proof
)
ident(
  int_ref pf_orig "m_elab.ml" 1225 45438 45475 "m_elab.ml" 1225 45438 45482
)
"m_elab.ml" 1234 45809 45832 "m_elab.ml" 1234 45809 45849
type(
  Util.hint option * Proof.T.proof * Proof.T.proof
)
"m_elab.ml" 1227 45529 45543 "m_elab.ml" 1234 45809 45849
type(
  Util.hint option * Proof.T.proof * Proof.T.proof
)
"m_elab.ml" 1237 45883 45902 "m_elab.ml" 1237 45883 45903
type(
  string list Expr.Visit.scx
)
"m_elab.ml" 1237 45883 45905 "m_elab.ml" 1237 45883 45907
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1238 45944 45958 "m_elab.ml" 1260 46902 46944
)
"m_elab.ml" 1237 45883 45901 "m_elab.ml" 1237 45883 45908
type(
  string list Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 1237 45883 45911 "m_elab.ml" 1237 45883 45915
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref anon "m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
)
"m_elab.ml" 1237 45883 45911 "m_elab.ml" 1237 45883 45924
type(
  M_t.modctx ->
  string list Expr.Visit.scx ->
  Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 1237 45883 45925 "m_elab.ml" 1237 45883 45928
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1237 45883 45930 "m_elab.ml" 1237 45883 45932
type(
  string list
)
"m_elab.ml" 1237 45883 45934 "m_elab.ml" 1237 45883 45936
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1237 45883 45929 "m_elab.ml" 1237 45883 45937
type(
  string list Expr.Visit.scx
)
"m_elab.ml" 1237 45883 45938 "m_elab.ml" 1237 45883 45940
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1225 45438 45461 "m_elab.ml" 1225 45438 45463
)
"m_elab.ml" 1237 45883 45911 "m_elab.ml" 1237 45883 45940
type(
  string list Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 1238 45944 45963 "m_elab.ml" 1238 45944 45964
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1238 45944 45966 "m_elab.ml" 1238 45944 45968
type(
  Expr.T.sequent
)
ident(
  def sq "m_elab.ml" 1239 46008 46022 "m_elab.ml" 1260 46902 46944
)
"m_elab.ml" 1238 45944 45962 "m_elab.ml" 1238 45944 45969
type(
  unit Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 1238 45944 45972 "m_elab.ml" 1238 45944 45985
type(
  Expr.Constness.const_visitor
)
ident(
  int_ref const_visitor "m_elab.ml" 1098 39865 39877 "m_elab.ml" 1098 39865 39890
)
"m_elab.ml" 1238 45944 45972 "m_elab.ml" 1238 45944 45993
type(
  unit Expr.Visit.scx ->
  Expr.T.sequent -> unit Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 1238 45944 45995 "m_elab.ml" 1238 45944 45997
type(
  unit
)
"m_elab.ml" 1238 45944 45998 "m_elab.ml" 1238 45944 46000
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1238 45944 45994 "m_elab.ml" 1238 45944 46001
type(
  unit Expr.Visit.scx
)
"m_elab.ml" 1238 45944 46002 "m_elab.ml" 1238 45944 46004
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1237 45883 45905 "m_elab.ml" 1237 45883 45907
)
"m_elab.ml" 1238 45944 45972 "m_elab.ml" 1238 45944 46004
type(
  unit Expr.Visit.scx * Expr.T.sequent
)
"m_elab.ml" 1239 46008 46026 "m_elab.ml" 1239 46008 46028
type(
  Proof.T.proof
)
ident(
  def pf "m_elab.ml" 1259 46828 46842 "m_elab.ml" 1260 46902 46944
)
"m_elab.ml" 1239 46008 46031 "m_elab.ml" 1239 46008 46040
type(
  Expr.T.ctx ->
  Util.hint option ->
  Expr.T.sequent -> Proof.T.proof -> M_t.modunit -> M_t.mule -> Proof.T.proof
)
ident(
  int_ref map_proof "m_elab.ml" 1106 40165 40177 "m_elab.ml" 1106 40165 40186
)
"m_elab.ml" 1239 46008 46041 "m_elab.ml" 1239 46008 46043
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1239 46008 46044 "m_elab.ml" 1239 46008 46046
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1226 45493 45510 "m_elab.ml" 1226 45493 45512
)
"m_elab.ml" 1239 46008 46047 "m_elab.ml" 1239 46008 46049
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1238 45944 45966 "m_elab.ml" 1238 45944 45968
)
"m_elab.ml" 1239 46008 46050 "m_elab.ml" 1239 46008 46052
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1226 45493 45514 "m_elab.ml" 1226 45493 45516
)
"m_elab.ml" 1239 46008 46053 "m_elab.ml" 1239 46008 46055
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1239 46008 46056 "m_elab.ml" 1239 46008 46057
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
)
"m_elab.ml" 1239 46008 46031 "m_elab.ml" 1239 46008 46057
type(
  Proof.T.proof
)
"m_elab.ml" 1259 46828 46846 "m_elab.ml" 1259 46828 46848
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1260 46902 46916 "m_elab.ml" 1260 46902 46944
)
"m_elab.ml" 1259 46828 46860 "m_elab.ml" 1259 46828 46862
type(
  Util.hint option
)
ident(
  int_ref nm "m_elab.ml" 1226 45493 45510 "m_elab.ml" 1226 45493 45512
)
"m_elab.ml" 1259 46828 46864 "m_elab.ml" 1259 46828 46866
type(
  Expr.T.sequent
)
ident(
  int_ref sq "m_elab.ml" 1238 45944 45966 "m_elab.ml" 1238 45944 45968
)
"m_elab.ml" 1259 46828 46868 "m_elab.ml" 1259 46828 46872
type(
  int
)
ident(
  int_ref naxs "m_elab.ml" 1225 45438 45465 "m_elab.ml" 1225 45438 45469
)
"m_elab.ml" 1259 46828 46874 "m_elab.ml" 1259 46828 46876
type(
  Proof.T.proof
)
ident(
  int_ref pf "m_elab.ml" 1239 46008 46026 "m_elab.ml" 1239 46008 46028
)
"m_elab.ml" 1259 46828 46878 "m_elab.ml" 1259 46828 46885
type(
  Proof.T.proof
)
ident(
  int_ref pf_orig "m_elab.ml" 1226 45493 45518 "m_elab.ml" 1226 45493 45525
)
"m_elab.ml" 1259 46828 46887 "m_elab.ml" 1259 46828 46891
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 1225 45438 45484 "m_elab.ml" 1225 45438 45488
)
"m_elab.ml" 1259 46828 46851 "m_elab.ml" 1259 46828 46892
type(
  M_t.modunit_
)
"m_elab.ml" 1259 46828 46893 "m_elab.ml" 1259 46828 46895
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1259 46828 46896 "m_elab.ml" 1259 46828 46898
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1259 46828 46851 "m_elab.ml" 1259 46828 46898
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1260 46902 46916 "m_elab.ml" 1260 46902 46924
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1260 46902 46925 "m_elab.ml" 1260 46902 46928
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1260 46902 46929 "m_elab.ml" 1260 46902 46931
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1260 46902 46932 "m_elab.ml" 1260 46902 46934
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1259 46828 46846 "m_elab.ml" 1259 46828 46848
)
"m_elab.ml" 1260 46902 46935 "m_elab.ml" 1260 46902 46944
type(
  string
)
"m_elab.ml" 1260 46902 46916 "m_elab.ml" 1260 46902 46944
type(
  Expr.T.ctx
)
"m_elab.ml" 1259 46828 46842 "m_elab.ml" 1260 46902 46944
type(
  Expr.T.ctx
)
"m_elab.ml" 1239 46008 46022 "m_elab.ml" 1260 46902 46944
type(
  Expr.T.ctx
)
"m_elab.ml" 1238 45944 45958 "m_elab.ml" 1260 46902 46944
type(
  Expr.T.ctx
)
"m_elab.ml" 1236 45865 45877 "m_elab.ml" 1261 46945 46960
type(
  Expr.T.ctx
)
"m_elab.ml" 1226 45493 45505 "m_elab.ml" 1261 46945 46960
type(
  Expr.T.ctx
)
"m_elab.ml" 1262 46961 46979 "m_elab.ml" 1262 46961 46981
type(
  [ `Hide | `Use of bool ]
)
ident(
  def uh "m_elab.ml" 1263 46990 47002 "m_elab.ml" 1265 47089 47128
)
"m_elab.ml" 1262 46961 46983 "m_elab.ml" 1262 46961 46985
type(
  Proof.T.usable
)
ident(
  def us "m_elab.ml" 1263 46990 47002 "m_elab.ml" 1265 47089 47128
)
"m_elab.ml" 1262 46961 46971 "m_elab.ml" 1262 46961 46986
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1263 46990 47006 "m_elab.ml" 1263 46990 47008
type(
  Proof.T.usable
)
ident(
  def us "m_elab.ml" 1264 47043 47055 "m_elab.ml" 1265 47089 47128
)
"m_elab.ml" 1263 46990 47011 "m_elab.ml" 1263 46990 47015
type(
  < adj : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx;
    adjs : string list Expr.Visit.scx ->
           Expr.T.hyp list -> string list Expr.Visit.scx;
    bound : string list Expr.Visit.scx ->
            Expr.T.bound -> string list Expr.Visit.scx * Expr.T.bound;
    bounds : string list Expr.Visit.scx ->
             Expr.T.bound list ->
             string list Expr.Visit.scx * Expr.T.bound list;
    defn : string list Expr.Visit.scx -> Expr.T.defn -> Expr.T.defn;
    defns : string list Expr.Visit.scx ->
            Expr.T.defn list -> string list Expr.Visit.scx * Expr.T.defn list;
    expr : string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    exspec : string list Expr.Visit.scx -> Expr.T.exspec -> Expr.T.exspec;
    hyp : string list Expr.Visit.scx ->
          Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    hyps : string list Expr.Visit.scx ->
           Expr.T.hyp Deque.dq ->
           string list Expr.Visit.scx * Expr.T.hyp Deque.dq;
    instance : string list Expr.Visit.scx ->
               Expr.T.instance -> Expr.T.instance;
    mexpr : M_t.modctx ->
            string list Expr.Visit.scx -> Expr.T.expr -> Expr.T.expr;
    mhyp : M_t.modctx ->
           string list Expr.Visit.scx ->
           Expr.T.hyp -> string list Expr.Visit.scx * Expr.T.hyp;
    mproof : M_t.modctx ->
             string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    msequent : M_t.modctx ->
               string list Expr.Visit.scx ->
               Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    musable : M_t.modctx ->
              string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable;
    pform : string list Expr.Visit.scx -> Expr.T.pform -> Expr.T.pform;
    proof : string list Expr.Visit.scx -> Proof.T.proof -> Proof.T.proof;
    sel : string list Expr.Visit.scx -> Expr.T.sel -> Expr.T.sel;
    sequent : string list Expr.Visit.scx ->
              Expr.T.sequent -> string list Expr.Visit.scx * Expr.T.sequent;
    step : string list Expr.Visit.scx ->
           Proof.T.step -> string list Expr.Visit.scx * Proof.T.step;
    steps : string list Expr.Visit.scx ->
            Proof.T.step list ->
            string list Expr.Visit.scx * Proof.T.step list;
    usable : string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable >
)
ident(
  int_ref anon "m_elab.ml" 545 19233 19237 "m_elab.ml" 545 19233 19241
)
"m_elab.ml" 1263 46990 47011 "m_elab.ml" 1263 46990 47023
type(
  M_t.modctx ->
  string list Expr.Visit.scx -> Proof.T.usable -> Proof.T.usable
)
"m_elab.ml" 1263 46990 47024 "m_elab.ml" 1263 46990 47027
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1263 46990 47029 "m_elab.ml" 1263 46990 47031
type(
  string list
)
"m_elab.ml" 1263 46990 47033 "m_elab.ml" 1263 46990 47035
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1263 46990 47028 "m_elab.ml" 1263 46990 47036
type(
  string list Expr.Visit.scx
)
"m_elab.ml" 1263 46990 47037 "m_elab.ml" 1263 46990 47039
type(
  Proof.T.usable
)
ident(
  int_ref us "m_elab.ml" 1262 46961 46983 "m_elab.ml" 1262 46961 46985
)
"m_elab.ml" 1263 46990 47011 "m_elab.ml" 1263 46990 47039
type(
  Proof.T.usable
)
"m_elab.ml" 1264 47043 47059 "m_elab.ml" 1264 47043 47061
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1265 47089 47101 "m_elab.ml" 1265 47089 47128
)
"m_elab.ml" 1264 47043 47072 "m_elab.ml" 1264 47043 47074
type(
  [ `Hide | `Use of bool ]
)
ident(
  int_ref uh "m_elab.ml" 1262 46961 46979 "m_elab.ml" 1262 46961 46981
)
"m_elab.ml" 1264 47043 47076 "m_elab.ml" 1264 47043 47078
type(
  Proof.T.usable
)
ident(
  int_ref us "m_elab.ml" 1263 46990 47006 "m_elab.ml" 1263 46990 47008
)
"m_elab.ml" 1264 47043 47064 "m_elab.ml" 1264 47043 47079
type(
  M_t.modunit_
)
"m_elab.ml" 1264 47043 47080 "m_elab.ml" 1264 47043 47082
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1264 47043 47083 "m_elab.ml" 1264 47043 47085
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1264 47043 47064 "m_elab.ml" 1264 47043 47085
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1265 47089 47101 "m_elab.ml" 1265 47089 47109
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1265 47089 47110 "m_elab.ml" 1265 47089 47113
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1265 47089 47114 "m_elab.ml" 1265 47089 47116
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1265 47089 47117 "m_elab.ml" 1265 47089 47119
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1264 47043 47059 "m_elab.ml" 1264 47043 47061
)
"m_elab.ml" 1265 47089 47120 "m_elab.ml" 1265 47089 47128
type(
  string
)
"m_elab.ml" 1265 47089 47101 "m_elab.ml" 1265 47089 47128
type(
  Expr.T.ctx
)
"m_elab.ml" 1264 47043 47055 "m_elab.ml" 1265 47089 47128
type(
  Expr.T.ctx
)
"m_elab.ml" 1263 46990 47002 "m_elab.ml" 1265 47089 47128
type(
  Expr.T.ctx
)
"m_elab.ml" 1266 47129 47146 "m_elab.ml" 1266 47129 47147
type(
  M_t.mule
)
ident(
  def m "m_elab.ml" 1267 47151 47163 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1266 47129 47139 "m_elab.ml" 1266 47129 47147
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1267 47151 47168 "m_elab.ml" 1267 47151 47171
type(
  M_t.modctx
)
ident(
  def mcx "m_elab.ml" 1270 47323 47335 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1267 47151 47173 "m_elab.ml" 1267 47151 47174
type(
  M_t.mule
)
ident(
  def m "m_elab.ml" 1270 47323 47335 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1267 47151 47176 "m_elab.ml" 1267 47151 47177
type(
  M_t.summary
)
"m_elab.ml" 1267 47151 47167 "m_elab.ml" 1267 47151 47178
type(
  M_t.modctx * M_t.mule * M_t.summary
)
"m_elab.ml" 1267 47151 47181 "m_elab.ml" 1267 47151 47190
type(
  M_t.modctx -> Expr.T.ctx -> M_t.mule -> M_t.modctx * M_t.mule * M_t.summary
)
ident(
  int_ref normalize "m_elab.ml" 1070 38811 38819 "m_elab.ml" 1070 38811 38828
)
"m_elab.ml" 1267 47151 47191 "m_elab.ml" 1267 47151 47194
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1076 39041 39056 "m_elab.ml" 1076 39041 39059
)
"m_elab.ml" 1267 47151 47195 "m_elab.ml" 1267 47151 47197
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1267 47151 47198 "m_elab.ml" 1267 47151 47199
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1266 47129 47146 "m_elab.ml" 1266 47129 47147
)
"m_elab.ml" 1267 47151 47181 "m_elab.ml" 1267 47151 47199
type(
  M_t.modctx * M_t.mule * M_t.summary
)
"m_elab.ml" 1270 47323 47339 "m_elab.ml" 1270 47323 47341
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1271 47362 47374 "m_elab.ml" 1271 47362 47401
)
"m_elab.ml" 1270 47323 47351 "m_elab.ml" 1270 47323 47352
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1267 47151 47173 "m_elab.ml" 1267 47151 47174
)
"m_elab.ml" 1270 47323 47344 "m_elab.ml" 1270 47323 47352
type(
  M_t.modunit_
)
"m_elab.ml" 1270 47323 47353 "m_elab.ml" 1270 47323 47355
type(
  M_t.modunit_ -> M_t.modunit -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1270 47323 47356 "m_elab.ml" 1270 47323 47358
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1078 39089 39096 "m_elab.ml" 1078 39089 39098
)
"m_elab.ml" 1270 47323 47344 "m_elab.ml" 1270 47323 47358
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1271 47362 47374 "m_elab.ml" 1271 47362 47382
type(
  M_t.modctx -> Expr.T.ctx -> M_t.modunit -> string -> Expr.T.ctx
)
ident(
  int_ref continue "m_elab.ml" 1092 39677 39689 "m_elab.ml" 1092 39677 39697
)
"m_elab.ml" 1271 47362 47383 "m_elab.ml" 1271 47362 47386
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1267 47151 47168 "m_elab.ml" 1267 47151 47171
)
"m_elab.ml" 1271 47362 47387 "m_elab.ml" 1271 47362 47389
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1076 39041 39060 "m_elab.ml" 1076 39041 39062
)
"m_elab.ml" 1271 47362 47390 "m_elab.ml" 1271 47362 47392
type(
  M_t.modunit
)
ident(
  int_ref mu "m_elab.ml" 1270 47323 47339 "m_elab.ml" 1270 47323 47341
)
"m_elab.ml" 1271 47362 47393 "m_elab.ml" 1271 47362 47401
type(
  string
)
"m_elab.ml" 1271 47362 47374 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1270 47323 47335 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1267 47151 47163 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1176 43233 43241 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1160 42482 42490 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1106 40165 40173 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1100 39956 39964 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1098 39865 39873 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1092 39677 39685 "m_elab.ml" 1271 47362 47401
type(
  Expr.T.ctx
)
"m_elab.ml" 1079 39119 39125 "m_elab.ml" 1272 47402 47413
type(
  Expr.T.ctx
)
"m_elab.ml" 1076 39041 39065 "m_elab.ml" 1272 47402 47413
type(
  (M_t.modunit * bool) list -> Expr.T.ctx
)
"m_elab.ml" 1274 47419 47425 "m_elab.ml" 1274 47419 47428
type(
  Expr.T.ctx
)
ident(
  def _cx "m_elab.ml" 1275 47489 47493 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1274 47419 47431 "m_elab.ml" 1274 47419 47435
type(
  M_t.modctx -> Expr.T.ctx -> (M_t.modunit * bool) list -> Expr.T.ctx
)
ident(
  int_ref spin "m_elab.ml" 1076 39041 39051 "m_elab.ml" 1076 39041 39055
)
"m_elab.ml" 1274 47419 47436 "m_elab.ml" 1274 47419 47439
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1070 38811 38829 "m_elab.ml" 1070 38811 38832
)
"m_elab.ml" 1274 47419 47440 "m_elab.ml" 1274 47419 47442
type(
  Expr.T.ctx
)
ident(
  int_ref cx "m_elab.ml" 1070 38811 38833 "m_elab.ml" 1070 38811 38835
)
"m_elab.ml" 1274 47419 47444 "m_elab.ml" 1274 47419 47452
type(
  (M_t.modunit -> M_t.modunit * bool) ->
  M_t.modunit list -> (M_t.modunit * bool) list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"m_elab.ml" 1274 47419 47458 "m_elab.ml" 1274 47419 47459
type(
  M_t.modunit
)
ident(
  def x "m_elab.ml" 1274 47419 47463 "m_elab.ml" 1274 47419 47471
)
"m_elab.ml" 1274 47419 47463 "m_elab.ml" 1274 47419 47464
type(
  M_t.modunit
)
ident(
  int_ref x "m_elab.ml" 1274 47419 47458 "m_elab.ml" 1274 47419 47459
)
"m_elab.ml" 1274 47419 47466 "m_elab.ml" 1274 47419 47471
type(
  bool
)
"m_elab.ml" 1274 47419 47463 "m_elab.ml" 1274 47419 47471
type(
  M_t.modunit * bool
)
"m_elab.ml" 1274 47419 47453 "m_elab.ml" 1274 47419 47472
type(
  M_t.modunit -> M_t.modunit * bool
)
"m_elab.ml" 1274 47419 47473 "m_elab.ml" 1274 47419 47474
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
)
"m_elab.ml" 1274 47419 47473 "m_elab.ml" 1274 47419 47479
type(
  M_t.mule_
)
"m_elab.ml" 1274 47419 47473 "m_elab.ml" 1274 47419 47484
type(
  M_t.modunit list
)
"m_elab.ml" 1274 47419 47443 "m_elab.ml" 1274 47419 47485
type(
  (M_t.modunit * bool) list
)
"m_elab.ml" 1274 47419 47431 "m_elab.ml" 1274 47419 47485
type(
  Expr.T.ctx
)
"m_elab.ml" 1275 47489 47493 "m_elab.ml" 1275 47489 47505
type(
  ?debug:string ->
  ?at:'_weak1 Property.wrapped ->
  ?prefix:string ->
  ?nonl:unit ->
  ((Format.formatter -> Expr.T.sequent -> unit) -> Expr.T.sequent -> unit,
   Format.formatter, unit)
  format ->
  (Format.formatter -> Expr.T.sequent -> unit) -> Expr.T.sequent -> unit
)
ident(
  int_ref Util.eprintf "util.mli" 46 1132 1132 "util.mli" 48 1217 1267
)
"m_elab.ml" 1275 47489 47513 "m_elab.ml" 1275 47489 47525
type(
  string
)
type(
  string option
)
"m_elab.ml" 1275 47489 47526 "m_elab.ml" 1275 47489 47530
type(
  ((Format.formatter -> Expr.T.sequent -> unit) -> Expr.T.sequent -> unit,
   Format.formatter, unit)
  format
)
"m_elab.ml" 1276 47531 47544 "m_elab.ml" 1276 47531 47547
type(
  Format.formatter
)
ident(
  def fmt "m_elab.ml" 1276 47531 47548 "m_elab.ml" 1277 47563 47631
)
"m_elab.ml" 1276 47531 47548 "m_elab.ml" 1276 47531 47550
type(
  Expr.T.sequent
)
ident(
  def cx "m_elab.ml" 1276 47531 47554 "m_elab.ml" 1277 47563 47631
)
"m_elab.ml" 1276 47531 47554 "m_elab.ml" 1276 47531 47560
type(
  Expr.Fmt.ctx -> unit
)
ident(
  int_ref Stdlib.ignore "stdlib.mli" 723 27015 27015 "stdlib.mli" 723 27015 27055
)
"m_elab.ml" 1277 47563 47575 "m_elab.ml" 1277 47563 47600
type(
  ?temp:bool ->
  Expr.Fmt.ctx -> Format.formatter -> Expr.T.sequent -> Expr.Fmt.ctx
)
ident(
  int_ref Expr.Fmt.pp_print_sequent "expr.mli" 405 10346 10350 "expr.mli" 408 10440 10455
)
"m_elab.ml" 1277 47563 47602 "m_elab.ml" 1277 47563 47613
type(
  Expr.T.hyp Deque.dq
)
ident(
  int_ref Deque.empty "deque.mli" 10 144 144 "deque.mli" 10 144 161
)
"m_elab.ml" 1277 47563 47615 "m_elab.ml" 1277 47563 47622
type(
  int Ctx.ctx
)
ident(
  int_ref Ctx.dot "ctx.mli" 20 424 424 "ctx.mli" 20 424 439
)
"m_elab.ml" 1277 47563 47601 "m_elab.ml" 1277 47563 47623
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1277 47563 47624 "m_elab.ml" 1277 47563 47627
type(
  Format.formatter
)
ident(
  int_ref fmt "m_elab.ml" 1276 47531 47544 "m_elab.ml" 1276 47531 47547
)
"m_elab.ml" 1277 47563 47628 "m_elab.ml" 1277 47563 47630
type(
  Expr.T.sequent
)
ident(
  int_ref cx "m_elab.ml" 1276 47531 47548 "m_elab.ml" 1276 47531 47550
)
"m_elab.ml" 1276 47531 47561 "m_elab.ml" 1277 47563 47631
type(
  Expr.Fmt.ctx
)
"m_elab.ml" 1276 47531 47554 "m_elab.ml" 1277 47563 47631
type(
  unit
)
"m_elab.ml" 1276 47531 47539 "m_elab.ml" 1277 47563 47632
type(
  Format.formatter -> Expr.T.sequent -> unit
)
"m_elab.ml" 1278 47633 47653 "m_elab.ml" 1278 47633 47656
type(
  Expr.T.ctx
)
ident(
  int_ref _cx "m_elab.ml" 1274 47419 47425 "m_elab.ml" 1274 47419 47428
)
"m_elab.ml" 1278 47633 47670 "m_elab.ml" 1278 47633 47673
type(
  int
)
"m_elab.ml" 1278 47633 47668 "m_elab.ml" 1278 47633 47673
type(
  Expr.T.expr_
)
"m_elab.ml" 1278 47633 47674 "m_elab.ml" 1278 47633 47676
type(
  Expr.T.expr_ -> M_t.mule -> Expr.T.expr
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1278 47633 47677 "m_elab.ml" 1278 47633 47678
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
)
"m_elab.ml" 1278 47633 47668 "m_elab.ml" 1278 47633 47678
type(
  Expr.T.expr
)
"m_elab.ml" 1278 47633 47641 "m_elab.ml" 1278 47633 47680
type(
  Expr.T.sequent
)
"m_elab.ml" 1275 47489 47493 "m_elab.ml" 1278 47633 47680
type(
  unit
)
"m_elab.ml" 1279 47682 47688 "m_elab.ml" 1279 47682 47694
type(
  M_t.modunit list
)
ident(
  def prefix "m_elab.ml" 1280 47722 47724 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1279 47682 47697 "m_elab.ml" 1279 47682 47710
type(
  M_t.modunit Deque.dq -> M_t.modunit list
)
ident(
  int_ref Deque.to_list "deque.mli" 35 1014 1014 "deque.mli" 35 1014 1044
)
"m_elab.ml" 1279 47682 47711 "m_elab.ml" 1279 47682 47712
type(
  M_t.modunit Deque.dq ref -> M_t.modunit Deque.dq
)
ident(
  int_ref Stdlib.( ! ) "stdlib.mli" 1215 46289 46289 "stdlib.mli" 1215 46289 46330
)
"m_elab.ml" 1279 47682 47712 "m_elab.ml" 1279 47682 47718
type(
  M_t.modunit Deque.dq ref
)
ident(
  int_ref prefix "m_elab.ml" 1072 38872 38878 "m_elab.ml" 1072 38872 38884
)
"m_elab.ml" 1279 47682 47711 "m_elab.ml" 1279 47682 47718
type(
  M_t.modunit Deque.dq
)
"m_elab.ml" 1279 47682 47697 "m_elab.ml" 1279 47682 47718
type(
  M_t.modunit list
)
"m_elab.ml" 1280 47722 47728 "m_elab.ml" 1280 47722 47738
type(
  M_t.modunit_ Property.wrapped -> M_t.modunit_ Property.wrapped
)
ident(
  def maybe_salt "m_elab.ml" 1292 48237 48239 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1281 47744 47748 "m_elab.ml" 1290 48216 48231
)
"m_elab.ml" 1281 47744 47751 "m_elab.ml" 1281 47744 47754
type(
  M_t.modunit_ Property.wrapped -> unit Property.pfuncs -> bool
)
ident(
  int_ref Property.has "property.mli" 67 2198 2198 "property.mli" 67 2198 2242
)
"m_elab.ml" 1281 47744 47755 "m_elab.ml" 1281 47744 47757
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
)
"m_elab.ml" 1281 47744 47758 "m_elab.ml" 1281 47744 47767
type(
  unit Property.pfuncs
)
ident(
  int_ref M_t.salt_prop "m_t.mli" 72 1767 1767 "m_t.mli" 72 1767 1802
)
"m_elab.ml" 1281 47744 47751 "m_elab.ml" 1281 47744 47767
type(
  bool
)
"m_elab.ml" 1282 47779 47789 "m_elab.ml" 1282 47779 47791
type(
  M_t.modunit_ Property.wrapped
)
ident(
  def mu "m_elab.ml" 1289 48187 48196 "m_elab.ml" 1289 48187 48215
)
"m_elab.ml" 1282 47779 47800 "m_elab.ml" 1282 47779 47802
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
)
"m_elab.ml" 1282 47779 47800 "m_elab.ml" 1282 47779 47807
type(
  M_t.modunit_
)
"m_elab.ml" 1283 47813 47853 "m_elab.ml" 1283 47813 47855
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
)
"m_elab.ml" 1283 47813 47857 "m_elab.ml" 1283 47813 47858
type(
  Expr.T.expr
)
ident(
  def e "m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
)
"m_elab.ml" 1283 47813 47843 "m_elab.ml" 1283 47813 47859
type(
  Expr.T.defn_
)
"m_elab.ml" 1283 47813 47835 "m_elab.ml" 1283 47813 47860
type(
  Expr.T.defn
)
"m_elab.ml" 1283 47813 47835 "m_elab.ml" 1283 47813 47866
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
)
"m_elab.ml" 1283 47813 47868 "m_elab.ml" 1283 47813 47870
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
)
"m_elab.ml" 1283 47813 47872 "m_elab.ml" 1283 47813 47875
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
)
"m_elab.ml" 1283 47813 47877 "m_elab.ml" 1283 47813 47879
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
)
"m_elab.ml" 1283 47813 47823 "m_elab.ml" 1283 47813 47880
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1284 47884 47918 "m_elab.ml" 1284 47884 47922
type(
  Util.hint -> Util.hint
)
ident(
  int_ref salt "m_elab.ml" 78 2262 2266 "m_elab.ml" 78 2262 2270
)
"m_elab.ml" 1284 47884 47923 "m_elab.ml" 1284 47884 47925
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 1283 47813 47853 "m_elab.ml" 1283 47813 47855
)
"m_elab.ml" 1284 47884 47918 "m_elab.ml" 1284 47884 47925
type(
  Util.hint
)
"m_elab.ml" 1284 47884 47927 "m_elab.ml" 1284 47884 47928
type(
  Expr.T.expr
)
ident(
  int_ref e "m_elab.ml" 1283 47813 47857 "m_elab.ml" 1283 47813 47858
)
"m_elab.ml" 1284 47884 47908 "m_elab.ml" 1284 47884 47929
type(
  Expr.T.defn_
)
"m_elab.ml" 1284 47884 47930 "m_elab.ml" 1284 47884 47932
type(
  Expr.T.defn_ -> Expr.T.defn_ Property.wrapped -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1284 47884 47933 "m_elab.ml" 1284 47884 47935
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 1283 47813 47835 "m_elab.ml" 1283 47813 47866
)
"m_elab.ml" 1284 47884 47908 "m_elab.ml" 1284 47884 47935
type(
  Expr.T.defn
)
"m_elab.ml" 1284 47884 47937 "m_elab.ml" 1284 47884 47939
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 1283 47813 47868 "m_elab.ml" 1283 47813 47870
)
"m_elab.ml" 1284 47884 47941 "m_elab.ml" 1284 47884 47944
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 1283 47813 47872 "m_elab.ml" 1283 47813 47875
)
"m_elab.ml" 1284 47884 47946 "m_elab.ml" 1284 47884 47948
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 1283 47813 47877 "m_elab.ml" 1283 47813 47879
)
"m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47949
type(
  M_t.modunit_
)
"m_elab.ml" 1284 47884 47950 "m_elab.ml" 1284 47884 47952
type(
  M_t.modunit_ ->
  M_t.modunit_ Property.wrapped -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1284 47884 47953 "m_elab.ml" 1284 47884 47955
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
)
"m_elab.ml" 1284 47884 47896 "m_elab.ml" 1284 47884 47955
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1285 47956 47996 "m_elab.ml" 1285 47956 47998
type(
  Util.hint
)
ident(
  def nm "m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
)
"m_elab.ml" 1285 47956 48000 "m_elab.ml" 1285 47956 48003
type(
  Expr.T.instance
)
ident(
  def ins "m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
)
"m_elab.ml" 1285 47956 47986 "m_elab.ml" 1285 47956 48004
type(
  Expr.T.defn_
)
"m_elab.ml" 1285 47956 47978 "m_elab.ml" 1285 47956 48005
type(
  Expr.T.defn
)
"m_elab.ml" 1285 47956 47978 "m_elab.ml" 1285 47956 48011
type(
  Expr.T.defn
)
ident(
  def df "m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
)
"m_elab.ml" 1285 47956 48013 "m_elab.ml" 1285 47956 48015
type(
  Expr.T.wheredef
)
ident(
  def wd "m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
)
"m_elab.ml" 1285 47956 48017 "m_elab.ml" 1285 47956 48020
type(
  Expr.T.visibility
)
ident(
  def vis "m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
)
"m_elab.ml" 1285 47956 48022 "m_elab.ml" 1285 47956 48024
type(
  Expr.T.export
)
ident(
  def ex "m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
)
"m_elab.ml" 1285 47956 47966 "m_elab.ml" 1285 47956 48025
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1286 48029 48063 "m_elab.ml" 1286 48029 48067
type(
  Util.hint -> Util.hint
)
ident(
  int_ref salt "m_elab.ml" 78 2262 2266 "m_elab.ml" 78 2262 2270
)
"m_elab.ml" 1286 48029 48068 "m_elab.ml" 1286 48029 48070
type(
  Util.hint
)
ident(
  int_ref nm "m_elab.ml" 1285 47956 47996 "m_elab.ml" 1285 47956 47998
)
"m_elab.ml" 1286 48029 48063 "m_elab.ml" 1286 48029 48070
type(
  Util.hint
)
"m_elab.ml" 1286 48029 48072 "m_elab.ml" 1286 48029 48075
type(
  Expr.T.instance
)
ident(
  int_ref ins "m_elab.ml" 1285 47956 48000 "m_elab.ml" 1285 47956 48003
)
"m_elab.ml" 1286 48029 48053 "m_elab.ml" 1286 48029 48076
type(
  Expr.T.defn_
)
"m_elab.ml" 1286 48029 48077 "m_elab.ml" 1286 48029 48079
type(
  Expr.T.defn_ -> Expr.T.defn_ Property.wrapped -> Expr.T.defn
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1286 48029 48080 "m_elab.ml" 1286 48029 48082
type(
  Expr.T.defn_ Property.wrapped
)
ident(
  int_ref df "m_elab.ml" 1285 47956 47978 "m_elab.ml" 1285 47956 48011
)
"m_elab.ml" 1286 48029 48053 "m_elab.ml" 1286 48029 48082
type(
  Expr.T.defn
)
"m_elab.ml" 1286 48029 48084 "m_elab.ml" 1286 48029 48086
type(
  Expr.T.wheredef
)
ident(
  int_ref wd "m_elab.ml" 1285 47956 48013 "m_elab.ml" 1285 47956 48015
)
"m_elab.ml" 1286 48029 48088 "m_elab.ml" 1286 48029 48091
type(
  Expr.T.visibility
)
ident(
  int_ref vis "m_elab.ml" 1285 47956 48017 "m_elab.ml" 1285 47956 48020
)
"m_elab.ml" 1286 48029 48093 "m_elab.ml" 1286 48029 48095
type(
  Expr.T.export
)
ident(
  int_ref ex "m_elab.ml" 1285 47956 48022 "m_elab.ml" 1285 47956 48024
)
"m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48096
type(
  M_t.modunit_
)
"m_elab.ml" 1286 48029 48097 "m_elab.ml" 1286 48029 48099
type(
  M_t.modunit_ ->
  M_t.modunit_ Property.wrapped -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1286 48029 48100 "m_elab.ml" 1286 48029 48102
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
)
"m_elab.ml" 1286 48029 48041 "m_elab.ml" 1286 48029 48102
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1287 48103 48113 "m_elab.ml" 1287 48103 48114
type(
  M_t.modunit_
)
type(
  M_t.modunit_
)
"m_elab.ml" 1288 48118 48130 "m_elab.ml" 1288 48118 48140
type(
  ?at:M_t.modunit_ Property.wrapped ->
  string -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Errors.bug "errors.mli" 41 941 941 "errors.mli" 41 941 982
)
"m_elab.ml" 1288 48118 48145 "m_elab.ml" 1288 48118 48147
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
)
type(
  M_t.modunit_ Property.wrapped option
)
"m_elab.ml" 1288 48118 48148 "m_elab.ml" 1288 48118 48186
type(
  string
)
"m_elab.ml" 1288 48118 48130 "m_elab.ml" 1288 48118 48186
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1282 47779 47794 "m_elab.ml" 1288 48118 48186
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1289 48187 48196 "m_elab.ml" 1289 48187 48202
type(
  M_t.modunit_ Property.wrapped ->
  unit Property.pfuncs -> M_t.modunit_ Property.wrapped
)
ident(
  int_ref Property.remove "property.mli" 84 2888 2888 "property.mli" 84 2888 2938
)
"m_elab.ml" 1289 48187 48203 "m_elab.ml" 1289 48187 48205
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1282 47779 47789 "m_elab.ml" 1282 47779 47791
)
"m_elab.ml" 1289 48187 48206 "m_elab.ml" 1289 48187 48215
type(
  unit Property.pfuncs
)
ident(
  int_ref M_t.salt_prop "m_t.mli" 72 1767 1767 "m_t.mli" 72 1767 1802
)
"m_elab.ml" 1289 48187 48196 "m_elab.ml" 1289 48187 48215
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1281 47744 47773 "m_elab.ml" 1290 48216 48223
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1290 48216 48229 "m_elab.ml" 1290 48216 48231
type(
  M_t.modunit_ Property.wrapped
)
ident(
  int_ref mu "m_elab.ml" 1280 47722 47739 "m_elab.ml" 1280 47722 47741
)
"m_elab.ml" 1281 47744 47748 "m_elab.ml" 1290 48216 48231
type(
  M_t.modunit_ Property.wrapped
)
"m_elab.ml" 1292 48237 48243 "m_elab.ml" 1292 48237 48249
type(
  M_t.modunit list
)
ident(
  def prefix "m_elab.ml" 1293 48282 48284 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1292 48237 48252 "m_elab.ml" 1292 48237 48260
type(
  (M_t.modunit -> M_t.modunit) -> M_t.modunit list -> M_t.modunit list
)
ident(
  int_ref Ext.List.map "ext.mli" 17 469 471 "ext.mli" 17 469 513
)
"m_elab.ml" 1292 48237 48261 "m_elab.ml" 1292 48237 48271
type(
  M_t.modunit -> M_t.modunit
)
ident(
  int_ref maybe_salt "m_elab.ml" 1280 47722 47728 "m_elab.ml" 1280 47722 47738
)
"m_elab.ml" 1292 48237 48272 "m_elab.ml" 1292 48237 48278
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 1279 47682 47688 "m_elab.ml" 1279 47682 47694
)
"m_elab.ml" 1292 48237 48252 "m_elab.ml" 1292 48237 48278
type(
  M_t.modunit list
)
"m_elab.ml" 1293 48282 48288 "m_elab.ml" 1293 48282 48289
type(
  M_t.mule_ Property.wrapped
)
ident(
  def m "m_elab.ml" 1294 48330 48332 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1293 48282 48294 "m_elab.ml" 1293 48282 48295
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
)
"m_elab.ml" 1293 48282 48294 "m_elab.ml" 1293 48282 48300
type(
  M_t.mule_
)
"m_elab.ml" 1293 48282 48313 "m_elab.ml" 1293 48282 48319
type(
  M_t.modunit list
)
ident(
  int_ref prefix "m_elab.ml" 1292 48237 48243 "m_elab.ml" 1292 48237 48249
)
"m_elab.ml" 1293 48282 48292 "m_elab.ml" 1293 48282 48321
type(
  M_t.mule_
)
"m_elab.ml" 1293 48282 48322 "m_elab.ml" 1293 48282 48324
type(
  M_t.mule_ -> M_t.mule -> M_t.mule_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1293 48282 48325 "m_elab.ml" 1293 48282 48326
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1070 38811 38836 "m_elab.ml" 1070 38811 38837
)
"m_elab.ml" 1293 48282 48292 "m_elab.ml" 1293 48282 48326
type(
  M_t.mule_ Property.wrapped
)
"m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
type(
  M_t.mule
)
ident(
  def m "m_elab.ml" 1304 48625 48627 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1294 48330 48340 "m_elab.ml" 1294 48330 48343
type(
  Proof.T.obligation list
)
ident(
  def obs "m_elab.ml" 1304 48625 48627 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1294 48330 48345 "m_elab.ml" 1294 48330 48349
type(
  M_t.summary
)
ident(
  def summ "m_elab.ml" 1304 48625 48627 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1294 48330 48336 "m_elab.ml" 1294 48330 48350
type(
  M_t.mule * Proof.T.obligation list * M_t.summary
)
"m_elab.ml" 1295 48353 48360 "m_elab.ml" 1295 48353 48361
type(
  M_t.mule_ Property.wrapped
)
ident(
  int_ref m "m_elab.ml" 1293 48282 48288 "m_elab.ml" 1293 48282 48289
)
"m_elab.ml" 1295 48353 48360 "m_elab.ml" 1295 48353 48366
type(
  M_t.mule_
)
"m_elab.ml" 1295 48353 48360 "m_elab.ml" 1295 48353 48376
type(
  bool
)
"m_elab.ml" 1295 48353 48382 "m_elab.ml" 1295 48353 48396
type(
  Expr.T.ctx -> M_t.mule -> M_t.mule * Proof.T.obligation list * M_t.summary
)
ident(
  int_ref M_gen.generate "m_gen.mli" 9 121 121 "m_gen.mli" 11 170 210
)
"m_elab.ml" 1295 48353 48397 "m_elab.ml" 1295 48353 48402
type(
  Expr.T.ctx
)
ident(
  int_ref gencx "m_elab.ml" 1074 38957 38963 "m_elab.ml" 1074 38957 38968
)
"m_elab.ml" 1295 48353 48403 "m_elab.ml" 1295 48353 48404
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1293 48282 48288 "m_elab.ml" 1293 48282 48289
)
"m_elab.ml" 1295 48353 48382 "m_elab.ml" 1295 48353 48404
type(
  M_t.mule * Proof.T.obligation list * M_t.summary
)
"m_elab.ml" 1296 48405 48415 "m_elab.ml" 1296 48405 48416
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1293 48282 48288 "m_elab.ml" 1293 48282 48289
)
"m_elab.ml" 1296 48405 48418 "m_elab.ml" 1296 48405 48420
type(
  Proof.T.obligation list
)
"m_elab.ml" 1297 48424 48448 "m_elab.ml" 1297 48424 48449
type(
  int
)
"m_elab.ml" 1298 48452 48477 "m_elab.ml" 1298 48452 48478
type(
  int
)
"m_elab.ml" 1298 48452 48480 "m_elab.ml" 1298 48452 48482
type(
  Loc.locus list
)
"m_elab.ml" 1298 48452 48477 "m_elab.ml" 1298 48452 48482
type(
  int * Loc.locus list
)
"m_elab.ml" 1299 48485 48511 "m_elab.ml" 1299 48485 48512
type(
  int
)
"m_elab.ml" 1299 48485 48514 "m_elab.ml" 1299 48485 48516
type(
  Loc.locus list
)
"m_elab.ml" 1299 48485 48511 "m_elab.ml" 1299 48485 48516
type(
  int * Loc.locus list
)
"m_elab.ml" 1300 48519 48548 "m_elab.ml" 1300 48519 48549
type(
  int
)
"m_elab.ml" 1300 48519 48551 "m_elab.ml" 1300 48519 48553
type(
  Loc.locus list
)
"m_elab.ml" 1300 48519 48548 "m_elab.ml" 1300 48519 48553
type(
  int * Loc.locus list
)
"m_elab.ml" 1296 48405 48422 "m_elab.ml" 1301 48554 48565
type(
  M_t.summary
)
"m_elab.ml" 1296 48405 48414 "m_elab.ml" 1301 48554 48566
type(
  M_t.mule * Proof.T.obligation list * M_t.summary
)
"m_elab.ml" 1295 48353 48357 "m_elab.ml" 1301 48554 48566
type(
  M_t.mule * Proof.T.obligation list * M_t.summary
)
"m_elab.ml" 1304 48625 48631 "m_elab.ml" 1304 48625 48632
type(
  M_t.mule
)
ident(
  def m "m_elab.ml" 1318 49164 49166 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1304 48625 48641 "m_elab.ml" 1304 48625 48642
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
)
"m_elab.ml" 1304 48625 48641 "m_elab.ml" 1304 48625 48647
type(
  M_t.mule_
)
"m_elab.ml" 1304 48625 48641 "m_elab.ml" 1304 48625 48653
type(
  M_t.stage
)
"m_elab.ml" 1305 48659 48665 "m_elab.ml" 1305 48659 48672
type(
  M_t.stage
)
type(
  M_t.stage
)
"m_elab.ml" 1305 48659 48676 "m_elab.ml" 1305 48659 48677
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
)
"m_elab.ml" 1306 48678 48684 "m_elab.ml" 1306 48678 48688
type(
  M_t.stage
)
type(
  M_t.stage
)
"m_elab.ml" 1307 48692 48704 "m_elab.ml" 1307 48692 48709
type(
  M_t.stage
)
ident(
  def stage "m_elab.ml" 1312 48965 48976 "m_elab.ml" 1312 48965 49010
)
"m_elab.ml" 1307 48692 48735 "m_elab.ml" 1307 48692 48743
type(
  M_t.modunit list
)
ident(
  int_ref origbody "m_elab.ml" 1071 38840 38846 "m_elab.ml" 1071 38840 38854
)
"m_elab.ml" 1309 48815 48858 "m_elab.ml" 1309 48815 48871
type(
  Proof.T.obligation list -> Proof.T.obligation array
)
ident(
  int_ref Stdlib.Array.of_list "array.mli" 153 6321 6321 "array.mli" 153 6321 6354
)
"m_elab.ml" 1309 48815 48872 "m_elab.ml" 1309 48815 48875
type(
  Proof.T.obligation list
)
ident(
  int_ref obs "m_elab.ml" 1294 48330 48340 "m_elab.ml" 1294 48330 48343
)
"m_elab.ml" 1309 48815 48858 "m_elab.ml" 1309 48815 48875
type(
  Proof.T.obligation array
)
"m_elab.ml" 1310 48876 48920 "m_elab.ml" 1310 48876 48929
type(
  M_t.status
)
"m_elab.ml" 1310 48876 48931 "m_elab.ml" 1310 48876 48935
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 1294 48330 48345 "m_elab.ml" 1294 48330 48349
)
"m_elab.ml" 1310 48876 48919 "m_elab.ml" 1310 48876 48936
type(
  M_t.status * M_t.summary
)
"m_elab.ml" 1307 48692 48718 "m_elab.ml" 1311 48937 48964
type(
  M_t.final
)
"m_elab.ml" 1307 48692 48712 "m_elab.ml" 1311 48937 48964
type(
  M_t.stage
)
"m_elab.ml" 1312 48965 48978 "m_elab.ml" 1312 48965 48979
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
)
"m_elab.ml" 1312 48965 48978 "m_elab.ml" 1312 48965 48984
type(
  M_t.mule_
)
"m_elab.ml" 1312 48965 48998 "m_elab.ml" 1312 48965 49003
type(
  M_t.stage
)
ident(
  int_ref stage "m_elab.ml" 1307 48692 48704 "m_elab.ml" 1307 48692 48709
)
"m_elab.ml" 1312 48965 48976 "m_elab.ml" 1312 48965 49005
type(
  M_t.mule_
)
"m_elab.ml" 1312 48965 49006 "m_elab.ml" 1312 48965 49008
type(
  M_t.mule_ -> M_t.mule -> M_t.mule
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1312 48965 49009 "m_elab.ml" 1312 48965 49010
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
)
"m_elab.ml" 1312 48965 48976 "m_elab.ml" 1312 48965 49010
type(
  M_t.mule
)
"m_elab.ml" 1307 48692 48700 "m_elab.ml" 1312 48965 49010
type(
  M_t.mule
)
"m_elab.ml" 1313 49011 49017 "m_elab.ml" 1313 49011 49023
type(
  M_t.stage
)
type(
  M_t.stage
)
"m_elab.ml" 1314 49027 49035 "m_elab.ml" 1314 49027 49045
type(
  ?at:M_t.mule -> string -> M_t.mule
)
ident(
  int_ref Errors.bug "errors.mli" 41 941 941 "errors.mli" 41 941 982
)
"m_elab.ml" 1314 49027 49050 "m_elab.ml" 1314 49027 49051
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
)
type(
  M_t.mule option
)
"m_elab.ml" 1314 49027 49052 "m_elab.ml" 1314 49027 49087
type(
  string
)
"m_elab.ml" 1314 49027 49035 "m_elab.ml" 1314 49027 49087
type(
  M_t.mule
)
"m_elab.ml" 1315 49088 49100 "m_elab.ml" 1315 49088 49101
type(
  M_t.final
)
"m_elab.ml" 1315 49088 49094 "m_elab.ml" 1315 49088 49101
type(
  M_t.stage
)
type(
  M_t.stage
)
"m_elab.ml" 1316 49105 49113 "m_elab.ml" 1316 49105 49123
type(
  ?at:M_t.mule -> string -> M_t.mule
)
ident(
  int_ref Errors.bug "errors.mli" 41 941 941 "errors.mli" 41 941 982
)
"m_elab.ml" 1316 49105 49128 "m_elab.ml" 1316 49105 49129
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1294 48330 48337 "m_elab.ml" 1294 48330 48338
)
type(
  M_t.mule option
)
"m_elab.ml" 1316 49105 49130 "m_elab.ml" 1316 49105 49158
type(
  string
)
"m_elab.ml" 1316 49105 49113 "m_elab.ml" 1316 49105 49158
type(
  M_t.mule
)
"m_elab.ml" 1304 48625 48635 "m_elab.ml" 1316 49105 49158
type(
  M_t.mule
)
"m_elab.ml" 1318 49164 49170 "m_elab.ml" 1318 49164 49171
type(
  M_t.mule_ Property.wrapped
)
ident(
  def m "m_elab.ml" 1319 49226 49228 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1318 49164 49176 "m_elab.ml" 1318 49164 49177
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1304 48625 48631 "m_elab.ml" 1304 48625 48632
)
"m_elab.ml" 1318 49164 49176 "m_elab.ml" 1318 49164 49182
type(
  M_t.mule_
)
"m_elab.ml" 1318 49164 49199 "m_elab.ml" 1318 49164 49209
type(
  Expr.T.ctx -> int
)
ident(
  int_ref Deque.size "deque.mli" 11 162 162 "deque.mli" 11 162 186
)
"m_elab.ml" 1318 49164 49210 "m_elab.ml" 1318 49164 49215
type(
  Expr.T.ctx
)
ident(
  int_ref gencx "m_elab.ml" 1074 38957 38963 "m_elab.ml" 1074 38957 38968
)
"m_elab.ml" 1318 49164 49199 "m_elab.ml" 1318 49164 49215
type(
  int
)
"m_elab.ml" 1318 49164 49174 "m_elab.ml" 1318 49164 49217
type(
  M_t.mule_
)
"m_elab.ml" 1318 49164 49218 "m_elab.ml" 1318 49164 49220
type(
  M_t.mule_ -> M_t.mule -> M_t.mule_ Property.wrapped
)
ident(
  int_ref Property.( @@ ) "property.mli" 101 3367 3367 "property.mli" 101 3367 3410
)
"m_elab.ml" 1318 49164 49221 "m_elab.ml" 1318 49164 49222
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1304 48625 48631 "m_elab.ml" 1304 48625 48632
)
"m_elab.ml" 1318 49164 49174 "m_elab.ml" 1318 49164 49222
type(
  M_t.mule_ Property.wrapped
)
"m_elab.ml" 1319 49226 49232 "m_elab.ml" 1319 49226 49235
type(
  M_t.mule StringMap.t
)
ident(
  def mcx "m_elab.ml" 1320 49278 49280 "m_elab.ml" 1320 49278 49294
)
"m_elab.ml" 1319 49226 49238 "m_elab.ml" 1319 49226 49251
type(
  StringMap.key -> M_t.mule -> M_t.mule StringMap.t -> M_t.mule StringMap.t
)
ident(
  int_ref StringMap.add "map.mli" 83 3211 3215 "map.mli" 83 3211 3249
)
"m_elab.ml" 1319 49226 49252 "m_elab.ml" 1319 49226 49253
type(
  M_t.mule_ Property.wrapped
)
ident(
  int_ref m "m_elab.ml" 1318 49164 49170 "m_elab.ml" 1318 49164 49171
)
"m_elab.ml" 1319 49226 49252 "m_elab.ml" 1319 49226 49258
type(
  M_t.mule_
)
"m_elab.ml" 1319 49226 49252 "m_elab.ml" 1319 49226 49263
type(
  Util.hint
)
"m_elab.ml" 1319 49226 49252 "m_elab.ml" 1319 49226 49268
type(
  StringMap.key
)
"m_elab.ml" 1319 49226 49269 "m_elab.ml" 1319 49226 49270
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1318 49164 49170 "m_elab.ml" 1318 49164 49171
)
"m_elab.ml" 1319 49226 49271 "m_elab.ml" 1319 49226 49274
type(
  M_t.modctx
)
ident(
  int_ref mcx "m_elab.ml" 1070 38811 38829 "m_elab.ml" 1070 38811 38832
)
"m_elab.ml" 1319 49226 49238 "m_elab.ml" 1319 49226 49274
type(
  M_t.mule StringMap.t
)
"m_elab.ml" 1320 49278 49281 "m_elab.ml" 1320 49278 49284
type(
  M_t.mule StringMap.t
)
ident(
  int_ref mcx "m_elab.ml" 1319 49226 49232 "m_elab.ml" 1319 49226 49235
)
"m_elab.ml" 1320 49278 49286 "m_elab.ml" 1320 49278 49287
type(
  M_t.mule
)
ident(
  int_ref m "m_elab.ml" 1318 49164 49170 "m_elab.ml" 1318 49164 49171
)
"m_elab.ml" 1320 49278 49289 "m_elab.ml" 1320 49278 49293
type(
  M_t.summary
)
ident(
  int_ref summ "m_elab.ml" 1294 48330 48345 "m_elab.ml" 1294 48330 48349
)
"m_elab.ml" 1320 49278 49280 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1319 49226 49228 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1318 49164 49166 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1304 48625 48627 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1294 48330 48332 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1293 48282 48284 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1292 48237 48239 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1280 47722 47724 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1279 47682 47684 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1275 47489 47493 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1274 47419 47421 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1076 39041 39043 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1074 38957 38959 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1073 38906 38908 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1072 38872 38874 "m_elab.ml" 1320 49278 49294
type(
  M_t.mule StringMap.t * M_t.mule * M_t.summary
)
"m_elab.ml" 1071 38840 38842 "m_elab.ml" 1320 49278 49294
type(
  M_t.modctx * M_t.mule * M_t.summary
)
