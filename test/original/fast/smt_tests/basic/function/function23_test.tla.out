
\* TLAPM version 1.5.0
\* launched at 2023-11-27 14:30:26 with command line:
\* /home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/../tlapm -I /home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/../library --toolbox 0 0 --nofp function23_test.tla --stretch 5

(* created new ".tlacache/TLAPS.tlaps/TLAPS.thy" *)
(* fingerprints written in ".tlacache/TLAPS.tlaps/fingerprints" *)
(* will not use fingerprints (because of option `--nofp`), but will now load fingerprints from the file `.tlacache/function23_test.tlaps/fingerprints`, in order to overwrite with the new fingerprints, and then save the results at the end. *)
COMMAND-LINE ARGUMENT
file=.tlacache/function23_test.tlaps/tlapm_9fe3d1.smt; PATH='/home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/lib/tlaps/bin/:/home/ovini/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main:/home/ovini/Downloads/tlapm_real_altered/tlapm-main/lib/tlaps/bin'; z3 -smt2 -v:0 AUTO_CONFIG=false smt.MBQI=true "$file" >.tlacache/function23_test.tlaps/tlapm_9fe3d1.smt.out
CONTENT OF FILE SENT TO BACKEND
;; TLA+ Proof Manager 1.5.0
;; Proof obligation #1
;;   generated from file "./function23_test.tla", line 16, characters 5-11

(set-logic UFNIA)
(declare-sort u 0)
(declare-sort str 0)
;; Standard TLA+ operators
(declare-fun str2u (str) u)
(declare-fun u2str (u) str)
(declare-fun tla__in (u u) Bool)
(declare-fun tla__isAFcn (u) Bool)
(declare-fun tla__DOMAIN (u) u)
(declare-fun tla__fcnapp (u u) u)

;; Terms, predicates and strings
(declare-fun a_CONSTANTunde_Aunde_a () u)
(declare-fun a_CONSTANTunde_Bunde_a () u)
(declare-fun a_CONSTANTunde_aunde_a () u)
(declare-fun a_CONSTANTunde_runde_a () u)
(declare-fun a_aunde_unde_1a () u)
(declare-fun a_aunde_unde_2a () u)
(declare-fun string__bar () str)
(declare-fun string__foo () str)

(assert
  (forall ((X_7 str)) (! (= (u2str (str2u X_7)) X_7) :pattern ((str2u X_7)))))
(assert
  (forall ((S_10 u) (T_11 u))
  (=>
  (forall ((X_7 u)) (= (tla__in X_7 S_10) (tla__in X_7 T_11))) (= S_10 T_11))))
(assert
  (forall ((F_13 u) (G_14 u))
  (=>
  (and
  (tla__isAFcn F_13) (tla__isAFcn G_14)
  (forall ((X_7 u))
  (= (tla__in X_7 (tla__DOMAIN F_13)) (tla__in X_7 (tla__DOMAIN G_14)))))
  (= (tla__DOMAIN F_13) (tla__DOMAIN G_14)))))
(assert
  (forall ((F_13 u) (G_14 u))
  (=>
  (and
  (tla__isAFcn F_13) (tla__isAFcn G_14)
  (= (tla__DOMAIN F_13) (tla__DOMAIN G_14))
  (forall ((X_7 u))
  (=>
  (tla__in X_7 (tla__DOMAIN G_14))
  (= (tla__fcnapp F_13 X_7) (tla__fcnapp G_14 X_7)))))
  (= F_13 G_14))))
(assert (distinct string__bar string__foo))


;; Theorem to be Proved
(assert (not
  (and
    (tla__in
      (tla__fcnapp a_aunde_unde_1a (str2u string__foo))
      a_CONSTANTunde_Aunde_a)
    (tla__in
      (tla__fcnapp a_aunde_unde_1a (str2u string__bar))
      a_CONSTANTunde_Bunde_a))))
(assert (tla__isAFcn a_aunde_unde_1a))
(assert (= (tla__DOMAIN a_aunde_unde_1a) a_aunde_unde_2a))
(assert
  (=>
    (tla__in (str2u string__foo) a_aunde_unde_2a)
    (=
      (tla__fcnapp a_aunde_unde_1a (str2u string__foo))
      a_CONSTANTunde_aunde_a)))
(assert
  (forall ((a_v3a u))
    (=>
      (and
        (tla__in a_v3a a_aunde_unde_2a) (not (= a_v3a (str2u string__foo))))
      (=
        (tla__fcnapp a_CONSTANTunde_runde_a a_v3a)
        (tla__fcnapp a_aunde_unde_1a a_v3a)))))
(assert
  (forall ((a_v4a u))
    (! (=
         (tla__in a_v4a a_aunde_unde_2a)
         (or (= a_v4a (str2u string__bar)) (= a_v4a (str2u string__foo)))) :pattern (
    (tla__in a_v4a a_aunde_unde_2a)))))
(assert (tla__isAFcn a_CONSTANTunde_runde_a))
(assert (= (tla__DOMAIN a_CONSTANTunde_runde_a) a_aunde_unde_2a))
(assert
  (tla__in
    (tla__fcnapp a_CONSTANTunde_runde_a (str2u string__foo))
    a_CONSTANTunde_Aunde_a))
(assert
  (tla__in
    (tla__fcnapp a_CONSTANTunde_runde_a (str2u string__bar))
    a_CONSTANTunde_Bunde_a))
(assert (tla__in a_CONSTANTunde_aunde_a a_CONSTANTunde_Aunde_a))

(check-sat)
(exit)

RESULT
unsat

(* created new ".tlacache/function23_test.tlaps/function23_test.thy" *)
(* fingerprints written in ".tlacache/function23_test.tlaps/fingerprints" *)
