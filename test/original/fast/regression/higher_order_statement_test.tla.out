
\* TLAPM version 1.5.0
\* launched at 2023-11-27 14:26:06 with command line:
\* /home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/../tlapm -I /home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/../library --toolbox 0 0 --nofp higher_order_statement_test.tla --stretch 5

(* created new ".tlacache/TLAPS.tlaps/TLAPS.thy" *)
(* fingerprints written in ".tlacache/TLAPS.tlaps/fingerprints" *)
(* will not use fingerprints (because of option `--nofp`), but will now load fingerprints from the file `.tlacache/higher_order_statement_test.tlaps/fingerprints`, in order to overwrite with the new fingerprints, and then save the results at the end. *)
COMMAND-LINE ARGUMENT
file=.tlacache/higher_order_statement_test.tlaps/tlapm_b3d93c.smt; PATH='/home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/lib/tlaps/bin/:/home/ovini/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main:/home/ovini/Downloads/tlapm_real_altered/tlapm-main/lib/tlaps/bin'; z3 -smt2 -v:0 AUTO_CONFIG=false smt.MBQI=true "$file" >.tlacache/higher_order_statement_test.tlaps/tlapm_b3d93c.smt.out
CONTENT OF FILE SENT TO BACKEND
;; TLA+ Proof Manager 1.5.0
;; Proof obligation #1
;;   generated from file "./higher_order_statement_test.tla", line 26, characters 3-4

(set-logic UFNIA)
(declare-sort u 0)
;; Standard TLA+ operators
(declare-fun int2u (Int) u)
(declare-fun u2int (u) Int)
(declare-fun tla__Int () u)
(declare-fun tla__Nat () u)
(declare-fun tla__minus (u u) u)
(declare-fun tla__times (u u) u)
(declare-fun tla__le (u u) Bool)
(declare-fun tla__in (u u) Bool)
(declare-fun tla__isAFcn (u) Bool)
(declare-fun tla__DOMAIN (u) u)
(declare-fun tla__fcnapp (u u) u)
(declare-fun tla__unspec (u u) u)

;; Terms, predicates and strings
(declare-fun a_CONSTANTunde_factorialunde_a () u)
(declare-fun a_CONSTANTunde_nunde_a () u)
(declare-fun a_aunde_unde_1a () u)

(assert
  (forall ((X_4 Int)) (! (= (u2int (int2u X_4)) X_4) :pattern ((int2u X_4)))))
(assert
  (forall ((X_4 u))
  (! (= (tla__in X_4 tla__Int) (exists ((N_3 Int)) (= X_4 (int2u N_3)))) :pattern ((tla__in X_4 tla__Int)))))
(assert
  (forall ((X_4 u))
  (! (=
  (tla__in X_4 tla__Nat)
  (exists ((N_3 Int)) (and (= X_4 (int2u N_3)) (<= 0 N_3)))) :pattern ((tla__in X_4 tla__Nat)))))
(assert
  (forall ((M_2 Int) (N_3 Int))
  (! (= (tla__minus (int2u M_2) (int2u N_3)) (int2u (- M_2 N_3))) :pattern ((tla__minus (int2u M_2) (int2u N_3))))))
(assert
  (forall ((M_2 Int) (N_3 Int))
  (! (= (tla__times (int2u M_2) (int2u N_3)) (int2u (* M_2 N_3))) :pattern ((tla__times (int2u M_2) (int2u N_3))))))
(assert
  (forall ((M_2 Int) (N_3 Int))
  (! (= (tla__le (int2u M_2) (int2u N_3)) (<= M_2 N_3)) :pattern ((tla__le (int2u M_2) (int2u N_3))))))
(assert
  (forall ((S_7 u) (T_8 u))
  (=> (forall ((X_4 u)) (= (tla__in X_4 S_7) (tla__in X_4 T_8))) (= S_7 T_8))))
(assert
  (forall ((F_10 u) (G_11 u))
  (=>
  (and
  (tla__isAFcn F_10) (tla__isAFcn G_11)
  (forall ((X_4 u))
  (= (tla__in X_4 (tla__DOMAIN F_10)) (tla__in X_4 (tla__DOMAIN G_11)))))
  (= (tla__DOMAIN F_10) (tla__DOMAIN G_11)))))
(assert
  (forall ((F_10 u) (G_11 u))
  (=>
  (and
  (tla__isAFcn F_10) (tla__isAFcn G_11)
  (= (tla__DOMAIN F_10) (tla__DOMAIN G_11))
  (forall ((X_4 u))
  (=>
  (tla__in X_4 (tla__DOMAIN G_11))
  (= (tla__fcnapp F_10 X_4) (tla__fcnapp G_11 X_4)))))
  (= F_10 G_11))))

;; Theorem to be Proved
(assert (not
  (=
    (ite
      (= a_CONSTANTunde_nunde_a (int2u 0)) (int2u 1)
      (ite
        (and
          (tla__in (tla__minus a_CONSTANTunde_nunde_a (int2u 1)) tla__Int)
          (tla__le (int2u 0) (tla__minus a_CONSTANTunde_nunde_a (int2u 1))))
        (tla__times
          a_CONSTANTunde_nunde_a
          (tla__fcnapp
            a_CONSTANTunde_factorialunde_a
            (tla__minus a_CONSTANTunde_nunde_a (int2u 1))))
        (tla__times
          a_CONSTANTunde_nunde_a
          (tla__unspec
            a_CONSTANTunde_factorialunde_a
            (tla__minus a_CONSTANTunde_nunde_a (int2u 1))))))
    (ite
      (= a_CONSTANTunde_nunde_a (int2u 0)) (int2u 1)
      (ite
        (and
          (tla__in (tla__minus a_CONSTANTunde_nunde_a (int2u 1)) tla__Int)
          (tla__le (int2u 0) (tla__minus a_CONSTANTunde_nunde_a (int2u 1))))
        (ite
          (= a_CONSTANTunde_nunde_a (int2u 1))
          (tla__times a_CONSTANTunde_nunde_a (int2u 1))
          (ite
            (and
              (tla__in
                (tla__minus
                  (tla__minus a_CONSTANTunde_nunde_a (int2u 1)) (int2u 1))
                tla__Int)
              (tla__le
                (int2u 0)
                (tla__minus
                  (tla__minus a_CONSTANTunde_nunde_a (int2u 1)) (int2u 1))))
            (tla__times
              a_CONSTANTunde_nunde_a
              (tla__times
                (tla__minus a_CONSTANTunde_nunde_a (int2u 1))
                (tla__fcnapp
                  a_CONSTANTunde_factorialunde_a
                  (tla__minus
                    (tla__minus a_CONSTANTunde_nunde_a (int2u 1)) (int2u 1)))))
            (tla__times
              a_CONSTANTunde_nunde_a
              (tla__times
                (tla__minus a_CONSTANTunde_nunde_a (int2u 1))
                (tla__unspec
                  a_CONSTANTunde_factorialunde_a
                  (tla__minus
                    (tla__minus a_CONSTANTunde_nunde_a (int2u 1)) (int2u 1)))))))
        (tla__times
          a_CONSTANTunde_nunde_a
          (tla__unspec
            a_aunde_unde_1a (tla__minus a_CONSTANTunde_nunde_a (int2u 1)))))))))
(assert (tla__isAFcn a_aunde_unde_1a))
(assert (= (tla__DOMAIN a_aunde_unde_1a) tla__Nat))
(assert
  (forall ((a_CONSTANTunde_iunde_a u))
    (=>
      (and
        (tla__in a_CONSTANTunde_iunde_a tla__Int)
        (tla__le (int2u 0) a_CONSTANTunde_iunde_a))
      (ite
        (= a_CONSTANTunde_iunde_a (int2u 0))
        (= (tla__fcnapp a_aunde_unde_1a a_CONSTANTunde_iunde_a) (int2u 1))
        (ite
          (and
            (tla__in (tla__minus a_CONSTANTunde_iunde_a (int2u 1)) tla__Int)
            (tla__le (int2u 0) (tla__minus a_CONSTANTunde_iunde_a (int2u 1))))
          (=
            (tla__fcnapp a_aunde_unde_1a a_CONSTANTunde_iunde_a)
            (tla__times
              a_CONSTANTunde_iunde_a
              (tla__fcnapp
                a_CONSTANTunde_factorialunde_a
                (tla__minus a_CONSTANTunde_iunde_a (int2u 1)))))
          (=
            (tla__fcnapp a_aunde_unde_1a a_CONSTANTunde_iunde_a)
            (tla__times
              a_CONSTANTunde_iunde_a
              (tla__unspec
                a_CONSTANTunde_factorialunde_a
                (tla__minus a_CONSTANTunde_iunde_a (int2u 1))))))))))
(assert (tla__isAFcn a_CONSTANTunde_factorialunde_a))
(assert (= (tla__DOMAIN a_CONSTANTunde_factorialunde_a) tla__Nat))
(assert
  (forall ((a_CONSTANTunde_iunde_a u))
    (=>
      (and
        (tla__in a_CONSTANTunde_iunde_a tla__Int)
        (tla__le (int2u 0) a_CONSTANTunde_iunde_a))
      (ite
        (= a_CONSTANTunde_iunde_a (int2u 0))
        (=
          (tla__fcnapp a_CONSTANTunde_factorialunde_a a_CONSTANTunde_iunde_a)
          (int2u 1))
        (ite
          (and
            (tla__in (tla__minus a_CONSTANTunde_iunde_a (int2u 1)) tla__Int)
            (tla__le (int2u 0) (tla__minus a_CONSTANTunde_iunde_a (int2u 1))))
          (=
            (tla__fcnapp
              a_CONSTANTunde_factorialunde_a a_CONSTANTunde_iunde_a)
            (tla__times
              a_CONSTANTunde_iunde_a
              (tla__fcnapp
                a_CONSTANTunde_factorialunde_a
                (tla__minus a_CONSTANTunde_iunde_a (int2u 1)))))
          (=
            (tla__fcnapp
              a_CONSTANTunde_factorialunde_a a_CONSTANTunde_iunde_a)
            (tla__times
              a_CONSTANTunde_iunde_a
              (tla__unspec
                a_CONSTANTunde_factorialunde_a
                (tla__minus a_CONSTANTunde_iunde_a (int2u 1))))))))))
(assert (tla__in a_CONSTANTunde_nunde_a tla__Int))
(assert (tla__le (int2u 0) a_CONSTANTunde_nunde_a))

(check-sat)
(exit)

COMMAND-LINE ARGUMENT
file=.tlacache/higher_order_statement_test.tlaps/tlapm_6d11ff.smt; PATH='/home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main/test/lib/tlaps/bin/:/home/ovini/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/ovini/Downloads/tlapm_real_altered/tlapm-main/tlapm-main:/home/ovini/Downloads/tlapm_real_altered/tlapm-main/lib/tlaps/bin'; z3 -smt2 -v:0 AUTO_CONFIG=false smt.MBQI=true "$file" >.tlacache/higher_order_statement_test.tlaps/tlapm_6d11ff.smt.out
CONTENT OF FILE SENT TO BACKEND
;; TLA+ Proof Manager 1.5.0
;; Proof obligation #3
;;   generated from file "./higher_order_statement_test.tla", line 20, characters 3-4

(set-logic UFNIA)
(declare-sort u 0)
;; Standard TLA+ operators

;; Terms, predicates and strings


;; Theorem to be Proved
(assert (not true))

(check-sat)
(exit)

RESULT
unsat

(* created new ".tlacache/higher_order_statement_test.tlaps/higher_order_statement_test.thy" *)
(* fingerprints written in ".tlacache/higher_order_statement_test.tlaps/fingerprints" *)
